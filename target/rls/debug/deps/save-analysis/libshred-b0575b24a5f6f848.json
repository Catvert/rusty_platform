{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"shred","disambiguator":[6770038941330123258,14536637828446710709]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":10,"id":{"name":"arrayvec","disambiguator":[7478673171645592853,17581657318331931157]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":11,"id":{"name":"nodrop","disambiguator":[12480767916669592376,17366685815635483204]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":12,"id":{"name":"fxhash","disambiguator":[6344076980797400407,3490690894587941809]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":13,"id":{"name":"byteorder","disambiguator":[14438063634380407648,1727586884181737438]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":14,"id":{"name":"mopa","disambiguator":[6294336301325451106,18026229867817546976]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":15,"id":{"name":"rayon","disambiguator":[15824772575266431345,13910539961539868182]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":16,"id":{"name":"rayon_core","disambiguator":[429022996289989122,6222992863289201220]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":17,"id":{"name":"crossbeam_deque","disambiguator":[13730582069139225184,16828264867220456605]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":18,"id":{"name":"crossbeam_epoch","disambiguator":[7871180522399390273,15615155245693596974]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[14877560976182567699,17666204573982700783]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10731115529682276050,13516138911675137059]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[2875883008406055557,6746792208250311324]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":22,"id":{"name":"memoffset","disambiguator":[866960163560545566,4959174390506347995]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":23,"id":{"name":"scopeguard","disambiguator":[2739124414855594758,130829538214750660]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[6439380704010433669,2857451922428286554]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":25,"id":{"name":"num_cpus","disambiguator":[10435944726468701474,4437815190392151882]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":26,"id":{"name":"either","disambiguator":[16822363354479097394,967057274073624347]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":27,"id":{"name":"smallvec","disambiguator":[4595380477867422518,14210284088823628804]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":28,"id":{"name":"unreachable","disambiguator":[10253453679371192154,4577124001928685987]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","num":29,"id":{"name":"void","disambiguator":[619724489078363799,6304636562182106116]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2307,"line_start":1,"line_end":85,"column_start":1,"column_end":45}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1797,"byte_end":1812,"line_start":77,"line_end":77,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1833,"byte_end":1843,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1845,"byte_end":1862,"line_start":78,"line_end":78,"column_start":32,"column_end":49},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1913,"byte_end":1916,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"alias_span":null,"name":"Par","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1918,"byte_end":1924,"line_start":80,"line_end":80,"column_start":25,"column_end":31},"alias_span":null,"name":"ParSeq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1926,"byte_end":1937,"line_start":80,"line_end":80,"column_start":33,"column_end":44},"alias_span":null,"name":"RunWithPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1939,"byte_end":1942,"line_start":80,"line_end":80,"column_start":46,"column_end":49},"alias_span":null,"name":"Seq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1960,"byte_end":1968,"line_start":81,"line_end":81,"column_start":16,"column_end":24},"alias_span":null,"name":"CastFrom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1970,"byte_end":1978,"line_start":81,"line_end":81,"column_start":26,"column_end":34},"alias_span":null,"name":"MetaIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1980,"byte_end":1991,"line_start":81,"line_end":81,"column_start":36,"column_end":47},"alias_span":null,"name":"MetaIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1993,"byte_end":2002,"line_start":81,"line_end":81,"column_start":49,"column_end":58},"alias_span":null,"name":"MetaTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2019,"byte_end":2034,"line_start":82,"line_end":82,"column_start":15,"column_end":30},"alias_span":null,"name":"DefaultProvider","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2036,"byte_end":2041,"line_start":82,"line_end":82,"column_start":32,"column_end":37},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2043,"byte_end":2048,"line_start":82,"line_end":82,"column_start":39,"column_end":44},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2050,"byte_end":2058,"line_start":82,"line_end":82,"column_start":46,"column_end":54},"alias_span":null,"name":"FetchMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2060,"byte_end":2072,"line_start":82,"line_end":82,"column_start":56,"column_end":68},"alias_span":null,"name":"PanicHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2074,"byte_end":2078,"line_start":82,"line_end":82,"column_start":70,"column_end":74},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2080,"byte_end":2090,"line_start":82,"line_end":82,"column_start":76,"column_end":86},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2092,"byte_end":2100,"line_start":82,"line_end":82,"column_start":88,"column_end":96},"alias_span":null,"name":"Resource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2116,"byte_end":2126,"line_start":83,"line_end":83,"column_start":15,"column_end":25},"alias_span":null,"name":"ResourceId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2128,"byte_end":2137,"line_start":83,"line_end":83,"column_start":27,"column_end":36},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2139,"byte_end":2151,"line_start":83,"line_end":83,"column_start":38,"column_end":50},"alias_span":null,"name":"SetupHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2153,"byte_end":2158,"line_start":83,"line_end":83,"column_start":52,"column_end":57},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2160,"byte_end":2171,"line_start":83,"line_end":83,"column_start":59,"column_end":70},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2191,"byte_end":2199,"line_start":84,"line_end":84,"column_start":18,"column_end":26},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":832},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2201,"byte_end":2212,"line_start":84,"line_end":84,"column_start":28,"column_end":39},"alias_span":null,"name":"AccessorCow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":842},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2214,"byte_end":2220,"line_start":84,"line_end":84,"column_start":41,"column_end":47},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1204},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2222,"byte_end":2233,"line_start":84,"line_end":84,"column_start":49,"column_end":60},"alias_span":null,"name":"RunningTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2235,"byte_end":2249,"line_start":84,"line_end":84,"column_start":62,"column_end":76},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2251,"byte_end":2261,"line_start":84,"line_end":84,"column_start":78,"column_end":88},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2280,"byte_end":2286,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":902},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2288,"byte_end":2305,"line_start":85,"line_end":85,"column_start":26,"column_end":43},"alias_span":null,"name":"DynamicSystemData","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2307,"line_start":1,"line_end":85,"column_start":1,"column_end":45},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":100},{"krate":0,"index":462},{"krate":0,"index":542},{"krate":0,"index":796},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":934},{"krate":0,"index":944},{"krate":0,"index":954},{"krate":0,"index":982}],"decl_id":null,"docs":" **Sh**ared **re**source **d**ispatcher","sig":null,"attributes":[{"value":"deny(unused_must_use)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1490,"byte_end":1515,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1516,"byte_end":1538,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cell","qualname":"::cell","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.0/src/cell.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":42},{"krate":0,"index":1000},{"krate":0,"index":1028},{"krate":0,"index":1026},{"krate":0,"index":1022},{"krate":0,"index":1018},{"krate":0,"index":1014},{"krate":0,"index":1010},{"krate":0,"index":1006},{"krate":0,"index":1002},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":62},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":76},{"krate":0,"index":94},{"krate":0,"index":96}],"decl_id":null,"docs":" Helper module for some internals, most users don't need to interact with it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2722,"byte_end":2735,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"InvalidBorrow","qualname":"::cell::InvalidBorrow","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker struct for an invalid borrow error\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2711,"byte_end":2736,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2711,"byte_end":2736,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3289,"byte_end":3292,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"Ref","qualname":"::cell::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":631}],"decl_id":null,"docs":" An immutable reference to data in a `TrustCell`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3728,"byte_end":3734,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"RefMut","qualname":"::cell::RefMut","value":"RefMut {  }","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":643}],"decl_id":null,"docs":" A mutable reference to data in a `TrustCell`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4238,"byte_end":4247,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"TrustCell","qualname":"::cell::TrustCell","value":"TrustCell {  }","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":653}],"decl_id":null,"docs":" A custom cell container that is a `RefCell` with thread-safety.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4392,"byte_end":4395,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<TrustCell<T>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cell, similar to `RefCell::new`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4788,"byte_end":4794,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"borrow","qualname":"<TrustCell<T>>::borrow","value":"fn (&self) -> Ref<T>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to the inner data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":5181,"byte_end":5191,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"try_borrow","qualname":"<TrustCell<T>>::try_borrow","value":"fn (&self) -> Result<Ref<T>, InvalidBorrow>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to the inner data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":5624,"byte_end":5634,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<TrustCell<T>>::borrow_mut","value":"fn (&self) -> RefMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":6004,"byte_end":6018,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"try_borrow_mut","qualname":"<TrustCell<T>>::try_borrow_mut","value":"fn (&self) -> Result<RefMut<T>, InvalidBorrow>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":6363,"byte_end":6370,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrustCell<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets exclusive access to the inner value, bypassing the Cell.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":10478,"byte_end":10493,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"AsyncDispatcher","qualname":"::dispatch::async::AsyncDispatcher","value":"AsyncDispatcher {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" Like, `Dispatcher` but works asynchronously.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":10878,"byte_end":10886,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<AsyncDispatcher<'a, R>>::dispatch","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems asynchronously.\n Does not execute thread local systems.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":11387,"byte_end":11391,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"wait","qualname":"<AsyncDispatcher<'a, R>>::wait","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for all the asynchronously dispatched systems to finish\n and executes thread local systems (if there are any).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":11739,"byte_end":11754,"line_start":69,"line_end":69,"column_start":12,"column_end":27},"name":"wait_without_tl","qualname":"<AsyncDispatcher<'a, R>>::wait_without_tl","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for all the asynchronously dispatched systems to finish\n without executing thread local systems.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":11889,"byte_end":11896,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"running","qualname":"<AsyncDispatcher<'a, R>>::running","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if any of the asynchronously dispatched systems are running.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":12082,"byte_end":12085,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"res","qualname":"<AsyncDispatcher<'a, R>>::res","value":"fn (&mut self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the resources.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":12264,"byte_end":12271,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"mut_res","qualname":"<AsyncDispatcher<'a, R>>::mut_res","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns the resources mutable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":16416,"byte_end":16433,"line_start":90,"line_end":90,"column_start":12,"column_end":29},"name":"DispatcherBuilder","qualname":"::dispatch::builder::DispatcherBuilder","value":"DispatcherBuilder {  }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669}],"decl_id":null,"docs":" Builder for the [`Dispatcher`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":17034,"byte_end":17037,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<DispatcherBuilder<'a, 'b>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DispatcherBuilder` by using the `Default` implementation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":17744,"byte_end":17748,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"with","qualname":"<DispatcherBuilder<'a, 'b>>::with","value":"fn <T> (mut self, system: T, name: &str, dep: &[&str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new system with a given name and a list of dependencies.\n Please note that the dependency should be added before\n you add the depending system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":18453,"byte_end":18456,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"add","qualname":"<DispatcherBuilder<'a, 'b>>::add","value":"fn <T> (&mut self, system: T, name: &str, dep: &[&str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new system with a given name and a list of dependencies.\n Please note that the dependency should be added before\n you add the depending system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":19632,"byte_end":19649,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"with_thread_local","qualname":"<DispatcherBuilder<'a, 'b>>::with_thread_local","value":"fn <T> (mut self, system: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new thread local system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":19985,"byte_end":20001,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"add_thread_local","qualname":"<DispatcherBuilder<'a, 'b>>::add_thread_local","value":"fn <T> (&mut self, system: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new thread local system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":20685,"byte_end":20697,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"with_barrier","qualname":"<DispatcherBuilder<'a, 'b>>::with_barrier","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a barrier which assures that all systems\n added before the barrier are executed before the ones\n after this barrier.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":21161,"byte_end":21172,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"add_barrier","qualname":"<DispatcherBuilder<'a, 'b>>::add_barrier","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a barrier which assures that all systems\n added before the barrier are executed before the ones\n after this barrier.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":21525,"byte_end":21534,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"with_pool","qualname":"<DispatcherBuilder<'a, 'b>>::with_pool","value":"fn (mut self, pool: ::std::sync::Arc<::rayon::ThreadPool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Attach a rayon thread pool to the builder\n and use that instead of creating one.","sig":null,"attributes":[{"value":"cfg(feature = \"parallel\")","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":21485,"byte_end":21513,"line_start":243,"line_end":243,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":21790,"byte_end":21798,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"add_pool","qualname":"<DispatcherBuilder<'a, 'b>>::add_pool","value":"fn (&mut self, pool: ::std::sync::Arc<::rayon::ThreadPool>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Attach a rayon thread pool to the builder\n and use that instead of creating one.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parallel\")","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":21750,"byte_end":21778,"line_start":252,"line_end":252,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":22095,"byte_end":22108,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"print_par_seq","qualname":"<DispatcherBuilder<'a, 'b>>::print_par_seq","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints the equivalent system graph\n that can be easily used to get the graph using the `seq!` and `par!`\n macros. This is only recommended for advanced users.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":22330,"byte_end":22335,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"name":"build","qualname":"<DispatcherBuilder<'a, 'b>>::build","value":"fn (self) -> Dispatcher<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" Builds the `Dispatcher`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":23492,"byte_end":23503,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"build_async","qualname":"<DispatcherBuilder<'static, 'b>>::build_async","value":"fn <R> (self, res: R) -> ::dispatch::async::AsyncDispatcher<'b, R>","parent":null,"children":[],"decl_id":null,"docs":" Builds an async dispatcher.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":24168,"byte_end":24178,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"Dispatcher","qualname":"::dispatch::dispatcher::Dispatcher","value":"Dispatcher {  }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123}],"decl_id":null,"docs":" The dispatcher struct, allowing\n systems to be executed in parallel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":24504,"byte_end":24509,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"setup","qualname":"<Dispatcher<'a, 'b>>::setup","value":"fn (&mut self, res: &mut Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets up all the systems which means they are gonna add default values for the resources\n they need.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":25326,"byte_end":25334,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Dispatcher<'a, 'b>>::dispatch","value":"fn (&mut self, res: &Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatch all the systems with given resources and context\n and then run thread local systems.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":25982,"byte_end":25994,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"dispatch_par","qualname":"<Dispatcher<'a, 'b>>::dispatch_par","value":"fn (&mut self, res: &Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems (except thread local systems)\n in parallel given the resources to operate on.","sig":null,"attributes":[{"value":"cfg(feature = \"parallel\")","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":25942,"byte_end":25970,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":26549,"byte_end":26561,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"dispatch_seq","qualname":"<Dispatcher<'a, 'b>>::dispatch_seq","value":"fn (&mut self, res: &Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems (except thread local systems) sequentially.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":26885,"byte_end":26906,"line_start":92,"line_end":92,"column_start":12,"column_end":33},"name":"dispatch_thread_local","qualname":"<Dispatcher<'a, 'b>>::dispatch_thread_local","value":"fn (&mut self, res: &Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatch only thread local systems sequentially.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":30017,"byte_end":30020,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Nil","qualname":"::dispatch::par_seq::Nil","value":"","parent":null,"children":[],"decl_id":null,"docs":" The \"leave node\" for the `Par` / `Seq` list.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31538,"byte_end":31541,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"Par","qualname":"::dispatch::par_seq::Par","value":"Par {  }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":161}],"decl_id":null,"docs":" Runs two tasks in parallel.\n These two tasks are called `head` and `tail`\n in the following documentation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31677,"byte_end":31680,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Par<H, Nil>>::new","value":"fn (head: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Par` struct, with the tail being a no-op.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31877,"byte_end":31881,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"with","qualname":"<Par<H, Nil>>::with","value":"fn <T> (self, sys: T) -> Par<Par<H, T>, Nil>","parent":null,"children":[],"decl_id":null,"docs":" Adds `sys` as the second job and returns a new `Par` struct\n with the previous struct as head and a no-op tail.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35029,"byte_end":35035,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"ParSeq","qualname":"::dispatch::par_seq::ParSeq","value":"ParSeq {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177}],"decl_id":null,"docs":" A dispatcher intended to be used with\n `Par` and `Seq`  structures.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35295,"byte_end":35298,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"new","qualname":"<ParSeq<P, T>>::new","value":"fn (run: T, pool: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ParSeq` dispatcher.\n `run` is usually created by using the `par!` / `seq!`\n macros.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35502,"byte_end":35507,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"setup","qualname":"<ParSeq<P, T>>::setup","value":"fn (&mut self, res: &mut Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets up `res` for `dispatch`ing.\n This will add default values for required resources by calling `System::setup`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35814,"byte_end":35822,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ParSeq<P, T>>::dispatch","value":"fn (&mut self, res: &Resources) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems using `res`.\n This doesn't call any virtual functions.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":332},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":36346,"byte_end":36357,"line_start":261,"line_end":261,"column_start":11,"column_end":22},"name":"RunWithPool","qualname":"::dispatch::par_seq::RunWithPool","value":"RunWithPool<'a>","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340}],"decl_id":null,"docs":" Similar to `RunNow` except additionally taking in a rayon::ThreadPool\n for parallelism.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":36426,"byte_end":36431,"line_start":263,"line_end":263,"column_start":8,"column_end":13},"name":"setup","qualname":"::dispatch::par_seq::RunWithPool::setup","value":"fn (&mut self, res: &mut Resources) -> ()","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Sets up `Resources` for a later call to `run`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":36859,"byte_end":36862,"line_start":274,"line_end":274,"column_start":8,"column_end":11},"name":"run","qualname":"::dispatch::par_seq::RunWithPool::run","value":"fn (&mut self, res: &'a Resources, pool: &ThreadPool) -> ()","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Runs the system/group of systems. Possibly in parallel depending\n on how the structure is set up.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37018,"byte_end":37023,"line_start":278,"line_end":278,"column_start":8,"column_end":13},"name":"reads","qualname":"::dispatch::par_seq::RunWithPool::reads","value":"fn (&self, reads: &mut Vec<ResourceId>) -> ()","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Accumulates the necessary read/shared resources from the\n systems in this group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37169,"byte_end":37175,"line_start":282,"line_end":282,"column_start":8,"column_end":14},"name":"writes","qualname":"::dispatch::par_seq::RunWithPool::writes","value":"fn (&self, writes: &mut Vec<ResourceId>) -> ()","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Accumulates the necessary write/exclusive resources from the\n systems in this group.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":38729,"byte_end":38732,"line_start":346,"line_end":346,"column_start":12,"column_end":15},"name":"Seq","qualname":"::dispatch::par_seq::Seq","value":"Seq {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" Runs two tasks sequentially.\n These two tasks are called `head` and `tail`\n in the following documentation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":38868,"byte_end":38871,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Seq<H, Nil>>::new","value":"fn (head: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Seq` struct, with the tail being a no-op.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":39068,"byte_end":39072,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"with","qualname":"<Seq<H, Nil>>::with","value":"fn <T> (self, sys: T) -> Seq<Seq<H, T>, Nil>","parent":null,"children":[],"decl_id":null,"docs":" Adds `sys` as the second job and returns a new `Seq` struct\n with the previous struct as head and a no-op tail.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58724,"byte_end":58732,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"CastFrom","qualname":"::meta::CastFrom","value":"CastFrom<T>","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488}],"decl_id":null,"docs":" Helper trait for the `MetaTable`.\n This trait is required to be implemented for a trait to be compatible with the meta table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58805,"byte_end":58809,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"cast","qualname":"::meta::CastFrom::cast","value":"fn (t: &T) -> &Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Casts an immutable `T` reference to a trait object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58892,"byte_end":58900,"line_start":57,"line_end":57,"column_start":8,"column_end":16},"name":"cast_mut","qualname":"::meta::CastFrom::cast_mut","value":"fn (t: &mut T) -> &mut Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Casts a mutable `T` reference to a trait object.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58977,"byte_end":58985,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"MetaIter","qualname":"::meta::MetaIter","value":"MetaIter {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321}],"decl_id":null,"docs":" An iterator for the `MetaTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":60731,"byte_end":60742,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"MetaIterMut","qualname":"::meta::MetaIterMut","value":"MetaIterMut {  }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" A mutable iterator for the `MetaTable`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":63474,"byte_end":63483,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"MetaTable","qualname":"::meta::MetaTable","value":"MetaTable {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373}],"decl_id":null,"docs":" The `MetaTable` which allows to store object-safe trait implementations for resources.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":63737,"byte_end":63740,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<MetaTable<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MetaTable`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":64047,"byte_end":64055,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"register","qualname":"<MetaTable<T>>::register","value":"fn <R> (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a resource `R` that implements the trait `T`.\n This just needs some instance of type `R` to retrieve the vtable.\n It doesn't have to be the same object you're calling `get` with later.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":64935,"byte_end":64938,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"get","qualname":"<MetaTable<T>>::get","value":"fn <'a> (&self, res: &'a Resource) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `res` to a trait object of type `&T`.\n If `res` doesn't have an implementation for `T` (or it wasn't registered),\n this will return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":65377,"byte_end":65384,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetaTable<T>>::get_mut","value":"fn <'a> (&self, res: &'a Resource) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `res` to a trait object of type `&mut T`.\n If `res` doesn't have an implementation for `T` (or it wasn't registered),\n this will return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":65734,"byte_end":65738,"line_start":299,"line_end":299,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetaTable<T>>::iter","value":"fn <'a> (&'a self, res: &'a Resources) -> MetaIter<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Iterates all resources that implement `T` and were registered.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":66048,"byte_end":66056,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetaTable<T>>::iter_mut","value":"fn <'a> (&'a self, res: &'a Resources) -> MetaIterMut<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Iterates all resources that implement `T` and were registered mutably.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78449,"byte_end":78453,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Read","qualname":"::res::data::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":403}],"decl_id":null,"docs":" Allows to fetch a resource in a system immutably.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79531,"byte_end":79536,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"Write","qualname":"::res::data::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431}],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":81560,"byte_end":81570,"line_start":170,"line_end":170,"column_start":10,"column_end":20},"name":"ReadExpect","qualname":"::res::data::ReadExpect","value":"Read<'a, T, PanicHandler>","parent":null,"children":[],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.\n **This will panic if the resource does not exist.**\n Usage of `Read` or `Option<Read>` is therefore recommended.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":81941,"byte_end":81952,"line_start":178,"line_end":178,"column_start":10,"column_end":21},"name":"WriteExpect","qualname":"::res::data::WriteExpect","value":"Write<'a, T, PanicHandler>","parent":null,"children":[],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.\n **This will panic if the resource does not exist.**\n Usage of `Write` or `Option<Write>` is therefore recommended.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,101,110,116,114,121,46,114,115],"byte_start":82509,"byte_end":82514,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Entry","qualname":"::res::entry::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":483}],"decl_id":null,"docs":" An entry to a resource of the `Resources` struct.\n This is similar to the Entry API found in the standard library.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,101,110,116,114,121,46,114,115],"byte_start":82880,"byte_end":82889,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry<'a, T>>::or_insert","value":"fn (self, v: T) -> FetchMut<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this entry's value, inserts and returns `v` otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,101,110,116,114,121,46,114,115],"byte_start":83071,"byte_end":83085,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry<'a, T>>::or_insert_with","value":"fn <F> (self, f: F) -> FetchMut<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this entry's value, inserts and returns the return value of `f` otherwise.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84644,"byte_end":84659,"line_start":27,"line_end":27,"column_start":12,"column_end":27},"name":"DefaultProvider","qualname":"::res::setup::DefaultProvider","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `SetupHandler` that simply uses the default implementation.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84896,"byte_end":84908,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"SetupHandler","qualname":"::res::setup::SetupHandler","value":"SetupHandler<T>: Sized","parent":null,"children":[{"krate":0,"index":734}],"decl_id":null,"docs":" A setup handler performing the fetching of `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84974,"byte_end":84979,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"setup","qualname":"::res::setup::SetupHandler::setup","value":"fn (res: &mut Resources) -> ()","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Sets up `Resources` for fetching `T`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":85280,"byte_end":85292,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"PanicHandler","qualname":"::res::setup::PanicHandler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A setup handler that simply does nothing and thus will cause a panic on fetching.\n The panic will provide the type name if the `nightly` feature of shred is enabled.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":742},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":69960,"byte_end":69965,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Fetch","qualname":"::res::Fetch","value":"Fetch {  }","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":515}],"decl_id":null,"docs":" Allows to fetch a resource in a system immutably.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70440,"byte_end":70448,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"FetchMut","qualname":"::res::FetchMut","value":"FetchMut {  }","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":527}],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":762},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71048,"byte_end":71056,"line_start":80,"line_end":80,"column_start":11,"column_end":19},"name":"Resource","qualname":"::res::Resource","value":"Resource: Any + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" A resource defines a set of data\n which can only be accessed according\n to Rust's typical borrowing model (one writer xor multiple readers).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71468,"byte_end":71478,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"ResourceId","qualname":"::res::ResourceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The id of a [`Resource`],\n which is a tuple struct with a type\n id and an additional resource id (represented with a `usize`).","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71457,"byte_end":71491,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71457,"byte_end":71491,"line_start":98,"line_end":98,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71575,"byte_end":71578,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<ResourceId>::new","value":"fn <T> () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new resource id from a given type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71875,"byte_end":71884,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"Resources","qualname":"::res::Resources","value":"Resources {  }","parent":null,"children":[{"krate":0,"index":751}],"decl_id":null,"docs":" A resource container, which provides methods to access to\n the contained resources.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":72031,"byte_end":72034,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Resources>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty resource container.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":72740,"byte_end":72746,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"insert","qualname":"<Resources>::insert","value":"fn <R> (&mut self, r: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a resource into this container. If the resource existed before, it will be\n overwritten.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":72993,"byte_end":73002,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"has_value","qualname":"<Resources>::has_value","value":"fn <R> (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified resource type `R` exists in `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":73197,"byte_end":73210,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"has_value_raw","qualname":"<Resources>::has_value_raw","value":"fn (&self, id: ResourceId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified resource type exists in `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":73360,"byte_end":73365,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"entry","qualname":"<Resources>::entry","value":"fn <R> (&mut self) -> Entry<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns an entry for the resource with type `R`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":73739,"byte_end":73744,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"fetch","qualname":"<Resources>::fetch","value":"fn <T> (&self) -> Fetch<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the resource with the specified type `T` or panics if it doesn't exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":74009,"byte_end":74018,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"try_fetch","qualname":"<Resources>::try_fetch","value":"fn <T> (&self) -> Option<Fetch<T>>","parent":null,"children":[],"decl_id":null,"docs":" Like `fetch`, but returns an `Option` instead of inserting a default value\n in case the resource does not exist.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":74529,"byte_end":74538,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"fetch_mut","qualname":"<Resources>::fetch_mut","value":"fn <T> (&self) -> FetchMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the resource with the specified type `T` mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":74814,"byte_end":74827,"line_start":220,"line_end":220,"column_start":12,"column_end":25},"name":"try_fetch_mut","qualname":"<Resources>::try_fetch_mut","value":"fn <T> (&self) -> Option<FetchMut<T>>","parent":null,"children":[],"decl_id":null,"docs":" Like `fetch_mut`, but returns an `Option` instead of inserting a default value\n in case the resource does not exist.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":75198,"byte_end":75216,"line_start":233,"line_end":233,"column_start":12,"column_end":30},"name":"try_fetch_internal","qualname":"<Resources>::try_fetch_internal","value":"fn (&self, id: TypeId) -> Option<&TrustCell<Box<Resource>>>","parent":null,"children":[],"decl_id":null,"docs":" Internal function for fetching resources, should only be used if you know what you're doing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":75447,"byte_end":75454,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Resources>::get_mut","value":"fn <T> (&mut self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a resource without fetching, which is cheaper, but only available with\n `&mut self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":75735,"byte_end":75746,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"get_mut_raw","qualname":"<Resources>::get_mut_raw","value":"fn (&mut self, id: TypeId) -> Option<&mut Resource>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a resource without fetching, which is cheaper, but only available with\n `&mut self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":808},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":85752,"byte_end":85760,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"Accessor","qualname":"::system::Accessor","value":"Accessor: Sized","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814}],"decl_id":null,"docs":" A trait for accessing read/write multiple resources from a system. This can be used\n to create dynamic systems that don't specify what they fetch at compile-time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":85949,"byte_end":85956,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"try_new","qualname":"::system::Accessor::try_new","value":"fn () -> Option<Self>","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Tries to create a new instance of this type. This one returns `Some` in case there is a\n default, otherwise the system needs to override `System::accessor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":86451,"byte_end":86456,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"reads","qualname":"::system::Accessor::reads","value":"fn (&self) -> Vec<ResourceId>","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" A list of [`ResourceId`]s the bundle\n needs read access to in order to\n build the target resource bundle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":86960,"byte_end":86966,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"writes","qualname":"::system::Accessor::writes","value":"fn (&self) -> Vec<ResourceId>","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" A list of [`ResourceId`]s the bundle\n needs write access to in order to\n build the target resource bundle.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87658,"byte_end":87661,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"Ref","qualname":"::system::AccessorCow::Ref","value":"AccessorCow::Ref(&'b AccessorTy<'a, T>)","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":" A reference to an accessor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87717,"byte_end":87722,"line_start":82,"line_end":82,"column_start":5,"column_end":10},"name":"Owned","qualname":"::system::AccessorCow::Owned","value":"AccessorCow::Owned(AccessorTy<'a, T>)","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":" An owned accessor.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":832},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87520,"byte_end":87531,"line_start":73,"line_end":73,"column_start":10,"column_end":21},"name":"AccessorCow","qualname":"::system::AccessorCow","value":"AccessorCow::{Ref, Owned}","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":579}],"decl_id":null,"docs":" Either an `Accessor` of the system `T` or a reference to it.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":842},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":88274,"byte_end":88280,"line_start":104,"line_end":104,"column_start":11,"column_end":17},"name":"RunNow","qualname":"::system::RunNow","value":"RunNow<'a>","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":846}],"decl_id":null,"docs":" Trait for fetching data and running systems. Automatically implemented for systems.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":88596,"byte_end":88603,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"run_now","qualname":"::system::RunNow::run_now","value":"fn (&mut self, res: &'a Resources) -> ()","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Runs the system now.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":88703,"byte_end":88708,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::RunNow::setup","value":"fn (&mut self, res: &mut Resources) -> ()","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Sets up `Resources` for a later call to `run_now`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":753},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89121,"byte_end":89130,"line_start":137,"line_end":137,"column_start":5,"column_end":14},"name":"VeryShort","qualname":"::system::RunningTime::VeryShort","value":"RunningTime::VeryShort","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89140,"byte_end":89145,"line_start":138,"line_end":138,"column_start":5,"column_end":10},"name":"Short","qualname":"::system::RunningTime::Short","value":"RunningTime::Short","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89155,"byte_end":89162,"line_start":139,"line_end":139,"column_start":5,"column_end":12},"name":"Average","qualname":"::system::RunningTime::Average","value":"RunningTime::Average","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89172,"byte_end":89176,"line_start":140,"line_end":140,"column_start":5,"column_end":9},"name":"Long","qualname":"::system::RunningTime::Long","value":"RunningTime::Long","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89186,"byte_end":89194,"line_start":141,"line_end":141,"column_start":5,"column_end":13},"name":"VeryLong","qualname":"::system::RunningTime::VeryLong","value":"RunningTime::VeryLong","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1204},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89103,"byte_end":89114,"line_start":136,"line_end":136,"column_start":10,"column_end":21},"name":"RunningTime","qualname":"::system::RunningTime","value":"RunningTime::{VeryShort, Short, Average, Long, VeryLong}","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89029,"byte_end":89040,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89041,"byte_end":89063,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89094,"byte_end":89201,"line_start":136,"line_end":142,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":854},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89318,"byte_end":89324,"line_start":147,"line_end":147,"column_start":11,"column_end":17},"name":"System","qualname":"::system::System","value":"System<'a>","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864}],"decl_id":null,"docs":" A `System`, executed with a set of required [`Resource`]s.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":856},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89661,"byte_end":89671,"line_start":154,"line_end":154,"column_start":10,"column_end":20},"name":"SystemData","qualname":"::system::System::SystemData","value":"type SystemData: DynamicSystemData<'a>;","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" The resource bundle required to execute this system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":89771,"byte_end":89774,"line_start":158,"line_end":158,"column_start":8,"column_end":11},"name":"run","qualname":"::system::System::run","value":"fn (&mut self, data: Self::SystemData) -> ()","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Executes the system with the required system\n data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":90035,"byte_end":90047,"line_start":165,"line_end":165,"column_start":8,"column_end":20},"name":"running_time","qualname":"::system::System::running_time","value":"fn (&self) -> RunningTime","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Returns a hint how long the system needs for running.\n This is used to optimize the way they're executed (might\n allow more parallelization).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":90168,"byte_end":90176,"line_start":170,"line_end":170,"column_start":8,"column_end":16},"name":"accessor","qualname":"::system::System::accessor","value":"fn <'b> (&'b self) -> AccessorCow<'a, 'b, Self>","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Return the accessor from the [`SystemData`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":90451,"byte_end":90456,"line_start":178,"line_end":178,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::System::setup","value":"fn (&mut self, res: &mut Resources) -> ()","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Sets up the `Resources` using `Self::SystemData::setup`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":90793,"byte_end":90803,"line_start":186,"line_end":186,"column_start":11,"column_end":21},"name":"SystemData","qualname":"::system::SystemData","value":"SystemData<'a>","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874}],"decl_id":null,"docs":" A static system data that can specify its dependencies at statically (at compile-time).\n Most system data is a `SystemData`, the `DynamicSystemData` type is only needed for very special\n setups.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":90887,"byte_end":90892,"line_start":188,"line_end":188,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::SystemData::setup","value":"fn (res: &mut Resources) -> ()","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Sets up the system data for fetching it from the `Resources`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":91128,"byte_end":91133,"line_start":193,"line_end":193,"column_start":8,"column_end":13},"name":"fetch","qualname":"::system::SystemData::fetch","value":"fn (res: &'a Resources) -> Self","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Fetches the system data from `Resources`. Note that this is only specified for one concrete\n lifetime `'a`, you need to implement the `SystemData` trait for every possible\n lifetime.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":91323,"byte_end":91328,"line_start":198,"line_end":198,"column_start":8,"column_end":13},"name":"reads","qualname":"::system::SystemData::reads","value":"fn () -> Vec<ResourceId>","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Returns all read dependencies as fetched from `Self::fetch`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":91512,"byte_end":91518,"line_start":203,"line_end":203,"column_start":8,"column_end":14},"name":"writes","qualname":"::system::SystemData::writes","value":"fn () -> Vec<ResourceId>","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Returns all write dependencies as fetched from `Self::fetch`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":92181,"byte_end":92195,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"StaticAccessor","qualname":"::system::StaticAccessor","value":"StaticAccessor {  }","parent":null,"children":[{"krate":0,"index":775}],"decl_id":null,"docs":" The static accessor that is used for `SystemData`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":902},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":92769,"byte_end":92786,"line_start":264,"line_end":264,"column_start":11,"column_end":28},"name":"DynamicSystemData","qualname":"::system::DynamicSystemData","value":"DynamicSystemData<'a>","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908}],"decl_id":null,"docs":" A struct implementing system data indicates that it bundles some resources which are required\n for the execution.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":904},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":92923,"byte_end":92931,"line_start":267,"line_end":267,"column_start":10,"column_end":18},"name":"Accessor","qualname":"::system::DynamicSystemData::Accessor","value":"type Accessor: Accessor;","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" The accessor of the `SystemData`, which specifies the read and write dependencies and does\n the fetching.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":93010,"byte_end":93015,"line_start":270,"line_end":270,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::DynamicSystemData::setup","value":"fn (accessor: &Self::Accessor, res: &mut Resources) -> ()","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Sets up `Resources` for fetching this system data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":93617,"byte_end":93622,"line_start":287,"line_end":287,"column_start":8,"column_end":13},"name":"fetch","qualname":"::system::DynamicSystemData::fetch","value":"fn (access: &Self::Accessor, res: &'a Resources) -> Self","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Creates a new resource bundle\n by fetching the required resources\n from the [`Resources`] struct.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2755,"byte_end":2768,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2918,"byte_end":2931,"line_start":20,"line_end":20,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3376,"byte_end":3379,"line_start":36,"line_end":36,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3488,"byte_end":3491,"line_start":44,"line_end":44,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3822,"byte_end":3828,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3941,"byte_end":3947,"line_start":67,"line_end":67,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4046,"byte_end":4052,"line_start":73,"line_end":73,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4313,"byte_end":4322,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":7548,"byte_end":7557,"line_start":188,"line_end":188,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":7605,"byte_end":7614,"line_start":194,"line_end":194,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":10606,"byte_end":10621,"line_start":30,"line_end":30,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":12420,"byte_end":12424,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":16692,"byte_end":16709,"line_start":99,"line_end":99,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":23272,"byte_end":23289,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":23835,"byte_end":23852,"line_start":323,"line_end":323,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":24357,"byte_end":24367,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":27062,"byte_end":27072,"line_start":99,"line_end":99,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31328,"byte_end":31331,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31587,"byte_end":31590,"line_start":88,"line_end":88,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35083,"byte_end":35089,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35939,"byte_end":35945,"line_start":245,"line_end":245,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37249,"byte_end":37250,"line_start":285,"line_end":285,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37774,"byte_end":37777,"line_start":309,"line_end":309,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":38778,"byte_end":38781,"line_start":351,"line_end":351,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":39305,"byte_end":39308,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":43276,"byte_end":43284,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":43815,"byte_end":43820,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":44863,"byte_end":44876,"line_start":120,"line_end":120,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58084,"byte_end":58093,"line_start":14,"line_end":14,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58147,"byte_end":58156,"line_start":20,"line_end":20,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":59200,"byte_end":59208,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":60014,"byte_end":60017,"line_start":99,"line_end":99,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":60960,"byte_end":60971,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":63676,"byte_end":63685,"line_start":237,"line_end":237,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":66304,"byte_end":66313,"line_start":321,"line_end":321,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78570,"byte_end":78574,"line_start":20,"line_end":20,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78728,"byte_end":78732,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78909,"byte_end":78913,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79656,"byte_end":79661,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79805,"byte_end":79810,"line_start":85,"line_end":85,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79961,"byte_end":79966,"line_start":94,"line_end":94,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80147,"byte_end":80152,"line_start":103,"line_end":103,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80561,"byte_end":80567,"line_start":127,"line_end":127,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80910,"byte_end":80916,"line_start":146,"line_end":146,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,101,110,116,114,121,46,114,115],"byte_start":82634,"byte_end":82639,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84690,"byte_end":84705,"line_start":29,"line_end":29,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":85323,"byte_end":85335,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70072,"byte_end":70077,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70562,"byte_end":70570,"line_start":57,"line_end":57,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70742,"byte_end":70750,"line_start":68,"line_end":68,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71131,"byte_end":71132,"line_start":84,"line_end":84,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71498,"byte_end":71508,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71959,"byte_end":71968,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87239,"byte_end":87250,"line_start":60,"line_end":60,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87772,"byte_end":87783,"line_start":85,"line_end":85,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":88772,"byte_end":88773,"line_start":119,"line_end":119,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":91582,"byte_end":91583,"line_start":206,"line_end":206,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":92265,"byte_end":92279,"line_start":243,"line_end":243,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":93719,"byte_end":93730,"line_start":290,"line_end":290,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1697,"byte_end":1701,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":16}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2755,"byte_end":2768,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":2918,"byte_end":2931,"line_start":20,"line_end":20,"column_start":16,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3376,"byte_end":3379,"line_start":36,"line_end":36,"column_start":23,"column_end":26},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3488,"byte_end":3491,"line_start":44,"line_end":44,"column_start":22,"column_end":25},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":1998}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3822,"byte_end":3828,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":3941,"byte_end":3947,"line_start":67,"line_end":67,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":1988}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4046,"byte_end":4052,"line_start":73,"line_end":73,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":1998}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":4313,"byte_end":4322,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":7548,"byte_end":7557,"line_start":188,"line_end":188,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":1742}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":7605,"byte_end":7614,"line_start":194,"line_end":194,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":10606,"byte_end":10621,"line_start":30,"line_end":30,"column_start":13,"column_end":28},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,97,115,121,110,99,46,114,115],"byte_start":12420,"byte_end":12424,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":16692,"byte_end":16709,"line_start":99,"line_end":99,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":23272,"byte_end":23289,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,98,117,105,108,100,101,114,46,114,115],"byte_start":23835,"byte_end":23852,"line_start":323,"line_end":323,"column_start":29,"column_end":46},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":24357,"byte_end":24367,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,100,105,115,112,97,116,99,104,101,114,46,114,115],"byte_start":27062,"byte_end":27072,"line_start":99,"line_end":99,"column_start":33,"column_end":43},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":248},"to":{"krate":0,"index":842}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31328,"byte_end":31331,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":296},"to":{"krate":0,"index":854}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":31587,"byte_end":31590,"line_start":88,"line_end":88,"column_start":9,"column_end":12},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35083,"byte_end":35089,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":35939,"byte_end":35945,"line_start":245,"line_end":245,"column_start":31,"column_end":37},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":316},"to":{"krate":0,"index":842}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37249,"byte_end":37250,"line_start":285,"line_end":285,"column_start":33,"column_end":34},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":197},"to":{"krate":0,"index":332}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":37774,"byte_end":37777,"line_start":309,"line_end":309,"column_start":36,"column_end":39},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":308},"to":{"krate":0,"index":332}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":38778,"byte_end":38781,"line_start":351,"line_end":351,"column_start":9,"column_end":12},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,112,97,114,95,115,101,113,46,114,115],"byte_start":39305,"byte_end":39308,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":366},"to":{"krate":0,"index":332}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":43276,"byte_end":43284,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":43815,"byte_end":43820,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,100,105,115,112,97,116,99,104,47,115,116,97,103,101,46,114,115],"byte_start":44863,"byte_end":44876,"line_start":120,"line_end":120,"column_start":10,"column_end":23},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58084,"byte_end":58093,"line_start":14,"line_end":14,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":478},"to":{"krate":2,"index":1730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":58147,"byte_end":58156,"line_start":20,"line_end":20,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":478},"to":{"krate":2,"index":1742}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":59200,"byte_end":59208,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":490},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":60014,"byte_end":60017,"line_start":99,"line_end":99,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":60960,"byte_end":60971,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":508},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":63676,"byte_end":63685,"line_start":237,"line_end":237,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,109,101,116,97,46,114,115],"byte_start":66304,"byte_end":66313,"line_start":321,"line_end":321,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":516},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78570,"byte_end":78574,"line_start":20,"line_end":20,"column_start":26,"column_end":30},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":618},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78728,"byte_end":78732,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":78909,"byte_end":78913,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":618},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79656,"byte_end":79661,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":640},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79805,"byte_end":79810,"line_start":85,"line_end":85,"column_start":29,"column_end":34},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":640},"to":{"krate":2,"index":1988}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":79961,"byte_end":79966,"line_start":94,"line_end":94,"column_start":42,"column_end":47},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":640},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80147,"byte_end":80152,"line_start":103,"line_end":103,"column_start":35,"column_end":40},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":640},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80561,"byte_end":80567,"line_start":127,"line_end":127,"column_start":35,"column_end":41},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":2,"index":40928},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,100,97,116,97,46,114,115],"byte_start":80910,"byte_end":80916,"line_start":146,"line_end":146,"column_start":35,"column_end":41},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":2,"index":40928},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,101,110,116,114,121,46,114,115],"byte_start":82634,"byte_end":82639,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84690,"byte_end":84705,"line_start":29,"line_end":29,"column_start":29,"column_end":44},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":726},"to":{"krate":0,"index":732}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":84913,"byte_end":84918,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":732}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,115,101,116,117,112,46,114,115],"byte_start":85323,"byte_end":85335,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":736},"to":{"krate":0,"index":732}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70072,"byte_end":70077,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":742},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70562,"byte_end":70570,"line_start":57,"line_end":57,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":750},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":70742,"byte_end":70750,"line_start":68,"line_end":68,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":750},"to":{"krate":2,"index":1988}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71058,"byte_end":71061,"line_start":80,"line_end":80,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":14,"index":12},"to":{"krate":0,"index":762}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71064,"byte_end":71068,"line_start":80,"line_end":80,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1730},"to":{"krate":0,"index":762}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71071,"byte_end":71075,"line_start":80,"line_end":80,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":762}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71131,"byte_end":71132,"line_start":84,"line_end":84,"column_start":22,"column_end":23},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":537},"to":{"krate":0,"index":762}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71498,"byte_end":71508,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,114,101,115,47,109,111,100,46,114,115],"byte_start":71959,"byte_end":71968,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":85762,"byte_end":85767,"line_start":10,"line_end":10,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":808}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87239,"byte_end":87250,"line_start":60,"line_end":60,"column_start":30,"column_end":41},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":2,"index":1750},"to":{"krate":0,"index":808}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":87772,"byte_end":87783,"line_start":85,"line_end":85,"column_start":27,"column_end":38},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":832},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":88772,"byte_end":88773,"line_start":119,"line_end":119,"column_start":28,"column_end":29},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":597},"to":{"krate":0,"index":842}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":91582,"byte_end":91583,"line_start":206,"line_end":206,"column_start":39,"column_end":40},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":607},"to":{"krate":0,"index":902}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":92265,"byte_end":92279,"line_start":243,"line_end":243,"column_start":26,"column_end":40},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":808}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,104,114,101,100,45,48,46,55,46,48,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":93719,"byte_end":93730,"line_start":290,"line_end":290,"column_start":40,"column_end":51},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":2,"index":1750},"to":{"krate":0,"index":866}}]}