{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"podio","disambiguator":[15842150163224940230,7027967955163713110]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":9747,"line_start":1,"line_end":336,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":9747,"line_start":1,"line_end":336,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/podio-0.1.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":30},{"krate":0,"index":52},{"krate":0,"index":76},{"krate":0,"index":82},{"krate":0,"index":88},{"krate":0,"index":142},{"krate":0,"index":152},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" Additional methods for Read and Write","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1486,"byte_end":1508,"line_start":58,"line_end":58,"column_start":1,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":10},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1622,"byte_end":1634,"line_start":64,"line_end":64,"column_start":10,"column_end":22},"name":"LittleEndian","qualname":"::LittleEndian","value":"LittleEndian::{}","parent":null,"children":[],"decl_id":null,"docs":" Little endian. The number `0xABCD` is stored `[0xCD, 0xAB]`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1708,"byte_end":1717,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"BigEndian","qualname":"::BigEndian","value":"BigEndian::{}","parent":null,"children":[],"decl_id":null,"docs":" Big endian. The number `0xABCD` is stored `[0xAB, 0xCD]`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1800,"byte_end":1810,"line_start":69,"line_end":69,"column_start":11,"column_end":21},"name":"Endianness","qualname":"::Endianness","value":"Endianness","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" Trait implementing conversion methods for a specific endianness\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1896,"byte_end":1909,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"int_to_target","qualname":"::Endianness::int_to_target","value":"fn <T> (val: T) -> T","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Converts a value from the platform type to the specified endianness\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2025,"byte_end":2040,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"int_from_target","qualname":"::Endianness::int_from_target","value":"fn <T> (val: T) -> T","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Converts a value from the sepcified endianness to the platform type\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2139,"byte_end":2152,"line_start":77,"line_end":77,"column_start":11,"column_end":24},"name":"EndianConvert","qualname":"::EndianConvert","value":"EndianConvert","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" Generic trait for endian conversions on integers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2205,"byte_end":2210,"line_start":79,"line_end":79,"column_start":8,"column_end":13},"name":"to_be","qualname":"::EndianConvert::to_be","value":"fn (self) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert self to a big-endian value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2279,"byte_end":2284,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"to_le","qualname":"::EndianConvert::to_le","value":"fn (self) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert self to a little-endian value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2367,"byte_end":2374,"line_start":83,"line_end":83,"column_start":8,"column_end":15},"name":"from_be","qualname":"::EndianConvert::from_be","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert a big-endian value to the target endianness\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2462,"byte_end":2469,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"from_le","qualname":"::EndianConvert::from_le","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert a little-endian value to the target endiannes\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2546,"byte_end":2557,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"WritePodExt","qualname":"::WritePodExt","value":"WritePodExt","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50}],"decl_id":null,"docs":" Additional write methods for a io::Write\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2587,"byte_end":2596,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::WritePodExt::write_u64","value":"fn <T> (&mut self, u64) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a u64\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2674,"byte_end":2683,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::WritePodExt::write_u32","value":"fn <T> (&mut self, u32) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a u32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2761,"byte_end":2770,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::WritePodExt::write_u16","value":"fn <T> (&mut self, u16) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a u16\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2847,"byte_end":2855,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::WritePodExt::write_u8","value":"fn (&mut self, u8) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a u8\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2917,"byte_end":2926,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"write_i64","qualname":"::WritePodExt::write_i64","value":"fn <T> (&mut self, i64) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a i64\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3004,"byte_end":3013,"line_start":101,"line_end":101,"column_start":8,"column_end":17},"name":"write_i32","qualname":"::WritePodExt::write_i32","value":"fn <T> (&mut self, i32) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a i32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3091,"byte_end":3100,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"write_i16","qualname":"::WritePodExt::write_i16","value":"fn <T> (&mut self, i16) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a i16\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3177,"byte_end":3185,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"write_i8","qualname":"::WritePodExt::write_i8","value":"fn (&mut self, i8) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a i8\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3247,"byte_end":3256,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"write_f32","qualname":"::WritePodExt::write_f32","value":"fn <T> (&mut self, f32) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a f32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3334,"byte_end":3343,"line_start":109,"line_end":109,"column_start":8,"column_end":17},"name":"write_f64","qualname":"::WritePodExt::write_f64","value":"fn <T> (&mut self, f64) -> io::Result<()>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Write a f64\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3450,"byte_end":3460,"line_start":113,"line_end":113,"column_start":11,"column_end":21},"name":"ReadPodExt","qualname":"::ReadPodExt","value":"ReadPodExt","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74}],"decl_id":null,"docs":" Additional read methods for a io::Read\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3489,"byte_end":3497,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::ReadPodExt::read_u64","value":"fn <T> (&mut self) -> io::Result<u64>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a u64\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3570,"byte_end":3578,"line_start":117,"line_end":117,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::ReadPodExt::read_u32","value":"fn <T> (&mut self) -> io::Result<u32>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a u32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3651,"byte_end":3659,"line_start":119,"line_end":119,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::ReadPodExt::read_u16","value":"fn <T> (&mut self) -> io::Result<u16>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a u16\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3731,"byte_end":3738,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::ReadPodExt::read_u8","value":"fn (&mut self) -> io::Result<u8>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a u8\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3795,"byte_end":3803,"line_start":123,"line_end":123,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::ReadPodExt::read_i64","value":"fn <T> (&mut self) -> io::Result<i64>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a i64\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3876,"byte_end":3884,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::ReadPodExt::read_i32","value":"fn <T> (&mut self) -> io::Result<i32>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a i32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3957,"byte_end":3965,"line_start":127,"line_end":127,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::ReadPodExt::read_i16","value":"fn <T> (&mut self) -> io::Result<i16>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a i16\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4037,"byte_end":4044,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::ReadPodExt::read_i8","value":"fn (&mut self) -> io::Result<i8>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a i8\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4101,"byte_end":4109,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::ReadPodExt::read_f32","value":"fn <T> (&mut self) -> io::Result<f32>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a f32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4182,"byte_end":4190,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::ReadPodExt::read_f64","value":"fn <T> (&mut self) -> io::Result<f64>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a f64\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4284,"byte_end":4294,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::ReadPodExt::read_exact","value":"fn (&mut self, usize) -> io::Result<Vec<u8>>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Read a specific number of bytes\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4360,"byte_end":4372,"line_start":138,"line_end":138,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4611,"byte_end":4620,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5842,"byte_end":5843,"line_start":203,"line_end":203,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8043,"byte_end":8044,"line_start":279,"line_end":279,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4360,"byte_end":4372,"line_start":138,"line_end":138,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":10},"to":{"krate":0,"index":14}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4611,"byte_end":4620,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":12},"to":{"krate":0,"index":14}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5842,"byte_end":5843,"line_start":203,"line_end":203,"column_start":32,"column_end":33},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":63},"to":{"krate":0,"index":30}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,111,100,105,111,45,48,46,49,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8043,"byte_end":8044,"line_start":279,"line_end":279,"column_start":30,"column_end":31},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":83},"to":{"krate":0,"index":52}}]}