{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"ggez","disambiguator":[13860024165653680521,17462589695359207475]},"crate_root":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src","external_crates":[{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":10,"id":{"name":"app_dirs2","disambiguator":[15906398644398108812,11838096221753482586]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":11,"id":{"name":"xdg","disambiguator":[10154193371208550655,8847426464494785301]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":12,"id":{"name":"gfx","disambiguator":[3931828045283418234,18101131861939976415]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":13,"id":{"name":"log","disambiguator":[1259160250566179545,17321436522148131115]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[3148952422879220753,1474977982912102176]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":15,"id":{"name":"derivative","disambiguator":[6056530760723716824,7296429374067792692]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":16,"id":{"name":"draw_state","disambiguator":[10664282129808315027,2854594181820053672]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":17,"id":{"name":"bitflags","disambiguator":[3449294817536367791,5785702282660500244]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":18,"id":{"name":"gfx_core","disambiguator":[17152857994779595458,11772997822234855569]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":19,"id":{"name":"gfx_device_gl","disambiguator":[5863944769646064777,17348657550744379120]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":20,"id":{"name":"gfx_gl","disambiguator":[6148936099492814370,3634941089373606795]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":21,"id":{"name":"gfx_glyph","disambiguator":[2049134897413909021,4237896509905595098]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":22,"id":{"name":"backtrace","disambiguator":[3779774105409942863,15540557811714814083]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[4848508058857496725,7749149983179924297]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":24,"id":{"name":"rustc_demangle","disambiguator":[10753356954827712474,7527109334559233869]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":25,"id":{"name":"backtrace_sys","disambiguator":[16804081265023363333,14103502359696603751]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":26,"id":{"name":"ordered_float","disambiguator":[18014319119323533658,18213924266411219350]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":27,"id":{"name":"num_traits","disambiguator":[6283462703289770437,17509517405861228489]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":28,"id":{"name":"num_traits","disambiguator":[15237059559777709505,5155016347287064763]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":29,"id":{"name":"unreachable","disambiguator":[8666089085070686566,5218248212655395559]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":30,"id":{"name":"void","disambiguator":[12055652293639905839,2095151436213121864]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":31,"id":{"name":"rusttype","disambiguator":[5179325266817254405,10975486225635897401]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":32,"id":{"name":"approx","disambiguator":[5051065509724564119,11749908612732787798]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":33,"id":{"name":"arrayvec","disambiguator":[9851963402644145279,5268845854777067505]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":34,"id":{"name":"nodrop","disambiguator":[17827567374369341117,9810833733218458342]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":35,"id":{"name":"stb_truetype","disambiguator":[16950360428481432647,13240669082427511510]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":36,"id":{"name":"byteorder","disambiguator":[14964313538657406678,11916443486137336321]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":37,"id":{"name":"fnv","disambiguator":[8519594835128216091,3967029929964175674]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":38,"id":{"name":"linked_hash_map","disambiguator":[5895413636012904644,1881190890796188252]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":39,"id":{"name":"twox_hash","disambiguator":[12697292302497133320,16805032463070469443]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":40,"id":{"name":"rand","disambiguator":[5190624888578168797,14828368374339568315]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":41,"id":{"name":"rand_core","disambiguator":[1559924155822917710,4310157383021737842]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":42,"id":{"name":"unicode_normalization","disambiguator":[14086768568304882419,7743333307689775849]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":43,"id":{"name":"xi_unicode","disambiguator":[13510306816004413475,4284211834234734681]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":44,"id":{"name":"gfx_window_sdl","disambiguator":[242581818989926514,2218444029270580272]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":45,"id":{"name":"sdl2","disambiguator":[4556520672500029649,7527567299911691260]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":46,"id":{"name":"num","disambiguator":[7579036091216792376,8617654024138024930]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":47,"id":{"name":"num_integer","disambiguator":[14627477753268517584,18276705415431233988]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":48,"id":{"name":"num_iter","disambiguator":[8452654906526957129,889747511574580302]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":49,"id":{"name":"lazy_static","disambiguator":[18078551183538109982,3749960178684293416]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":50,"id":{"name":"bitflags","disambiguator":[12137220129423051849,682396904701494499]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":51,"id":{"name":"sdl2_sys","disambiguator":[2928129634125670022,18392125615461963623]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":52,"id":{"name":"rand","disambiguator":[5840815906919876630,10729128186898216849]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":53,"id":{"name":"rand","disambiguator":[18166102457993137483,17305584708846296006]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":54,"id":{"name":"image","disambiguator":[11718914783387689771,17415952345754886709]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":55,"id":{"name":"num_rational","disambiguator":[5463897853545191961,1220642151414196459]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":56,"id":{"name":"lzw","disambiguator":[12593388844813122183,14119423042268318985]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":57,"id":{"name":"num_derive","disambiguator":[9319709753595167568,9842094479955438192]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":58,"id":{"name":"png","disambiguator":[17395057169773790881,6288461545441136261]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":59,"id":{"name":"inflate","disambiguator":[17293955002441738569,17594884076298960768]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":60,"id":{"name":"adler32","disambiguator":[17108869146016472327,9878948263751868842]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":61,"id":{"name":"deflate","disambiguator":[14136874356631995407,6797033004266302234]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":62,"id":{"name":"jpeg_decoder","disambiguator":[18246913835402033354,18284156919464827022]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":63,"id":{"name":"gif","disambiguator":[15437069522808708468,10773333993386744963]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":64,"id":{"name":"color_quant","disambiguator":[15975366785947252953,753111284508002711]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":65,"id":{"name":"lyon","disambiguator":[16017113665203839808,14736060883847549963]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":66,"id":{"name":"lyon_tessellation","disambiguator":[3049893414166325118,7212783504392381432]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":67,"id":{"name":"lyon_path","disambiguator":[14997130616779865078,13542751640732339718]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":68,"id":{"name":"lyon_geom","disambiguator":[11450004202122683052,16773587402573208652]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":69,"id":{"name":"euclid","disambiguator":[12768687633236440116,14066675948905910876]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":70,"id":{"name":"sid","disambiguator":[2722369840964900786,7454674016172622954]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":71,"id":{"name":"nalgebra","disambiguator":[10644193563778149908,5955043311889216821]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/conf.rs","num":72,"id":{"name":"serde","disambiguator":[4076317625477086219,7655072359957426618]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":73,"id":{"name":"serde_derive","disambiguator":[288680914862033463,12411390612498877238]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":74,"id":{"name":"generic_array","disambiguator":[9892953562967819130,15717466116355755972]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":75,"id":{"name":"typenum","disambiguator":[18267185853249334779,11271456752513218690]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":76,"id":{"name":"matrixmultiply","disambiguator":[11187570810697178655,8413614322718409870]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":77,"id":{"name":"rawpointer","disambiguator":[16422220150292968798,5508481039410937753]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":78,"id":{"name":"num_complex","disambiguator":[9817138216340559480,7109905434472636139]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":79,"id":{"name":"serde","disambiguator":[1593249718189421181,16655510521816814406]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":80,"id":{"name":"alga","disambiguator":[15164347777077662781,15593113238455278744]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":81,"id":{"name":"rodio","disambiguator":[6999672606284771457,18129192298995055564]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":82,"id":{"name":"claxon","disambiguator":[4389886536126649210,18099417307675411909]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":83,"id":{"name":"cpal","disambiguator":[954682159000960866,6228972002322011098]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":84,"id":{"name":"alsa_sys","disambiguator":[15909962945119994915,15897798940263610414]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":85,"id":{"name":"hound","disambiguator":[5772099471415676494,15922015413301201369]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":86,"id":{"name":"lazy_static","disambiguator":[7788748033872638944,3488972291110111683]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":87,"id":{"name":"lewton","disambiguator":[897673197716021413,1864542235491105022]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":88,"id":{"name":"ogg","disambiguator":[9957653935985634034,8943669866795967465]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":89,"id":{"name":"cgmath","disambiguator":[3586537175793970500,1832351735902251579]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":90,"id":{"name":"smart_default","disambiguator":[8318646539075412517,1500599237364920372]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":91,"id":{"name":"toml","disambiguator":[4346323899372058457,11218225445517633039]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":92,"id":{"name":"zip","disambiguator":[12300976550301114502,7814015414562095601]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":93,"id":{"name":"bzip2","disambiguator":[15399186313573801676,8187561425150632762]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":94,"id":{"name":"bzip2_sys","disambiguator":[5029459465775126135,3146757087752820487]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":95,"id":{"name":"msdos_time","disambiguator":[4201889372147651150,3171443454557093835]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":96,"id":{"name":"time","disambiguator":[7372315197341428090,7800279997615883700]}},{"file_name":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","num":97,"id":{"name":"podio","disambiguator":[6095511240030679358,18412219448532460627]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5553,"line_start":1,"line_end":139,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":45,"index":3134},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41041,"byte_end":41048,"line_start":19,"line_end":19,"column_start":25,"column_end":32},"alias_span":null,"name":"Keycode","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3208},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41152,"byte_end":41155,"line_start":22,"line_end":22,"column_start":25,"column_end":28},"alias_span":null,"name":"Mod","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3530},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41204,"byte_end":41215,"line_start":24,"line_end":24,"column_start":22,"column_end":33},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3554},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41298,"byte_end":41308,"line_start":26,"line_end":26,"column_start":22,"column_end":32},"alias_span":null,"name":"MouseState","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3062},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41360,"byte_end":41364,"line_start":29,"line_end":29,"column_start":27,"column_end":31},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3086},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41417,"byte_end":41423,"line_start":31,"line_end":31,"column_start":27,"column_end":33},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3006},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41447,"byte_end":41452,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":246},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41498,"byte_end":41515,"line_start":35,"line_end":35,"column_start":22,"column_end":39},"alias_span":null,"name":"EventPollIterator","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3202},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41664,"byte_end":41671,"line_start":45,"line_end":45,"column_start":26,"column_end":33},"alias_span":null,"name":"CAPSMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3192},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41673,"byte_end":41680,"line_start":45,"line_end":45,"column_start":35,"column_end":42},"alias_span":null,"name":"LALTMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3188},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41682,"byte_end":41690,"line_start":45,"line_end":45,"column_start":44,"column_end":52},"alias_span":null,"name":"LCTRLMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3196},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41692,"byte_end":41699,"line_start":45,"line_end":45,"column_start":54,"column_end":61},"alias_span":null,"name":"LGUIMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3184},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41701,"byte_end":41710,"line_start":45,"line_end":45,"column_start":63,"column_end":72},"alias_span":null,"name":"LSHIFTMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3204},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41712,"byte_end":41719,"line_start":45,"line_end":45,"column_start":74,"column_end":81},"alias_span":null,"name":"MODEMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41721,"byte_end":41726,"line_start":45,"line_end":45,"column_start":83,"column_end":88},"alias_span":null,"name":"NOMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3200},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41728,"byte_end":41734,"line_start":45,"line_end":45,"column_start":90,"column_end":96},"alias_span":null,"name":"NUMMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3194},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41761,"byte_end":41768,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"RALTMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3190},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41770,"byte_end":41778,"line_start":46,"line_end":46,"column_start":35,"column_end":43},"alias_span":null,"name":"RCTRLMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3206},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41780,"byte_end":41791,"line_start":46,"line_end":46,"column_start":45,"column_end":56},"alias_span":null,"name":"RESERVEDMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41793,"byte_end":41800,"line_start":46,"line_end":46,"column_start":58,"column_end":65},"alias_span":null,"name":"RGUIMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":45,"index":3186},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":41802,"byte_end":41811,"line_start":46,"line_end":46,"column_start":67,"column_end":76},"alias_span":null,"name":"RSHIFTMOD","value":"","parent":{"krate":0,"index":404}},{"kind":"Use","ref_id":{"krate":0,"index":3156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":51501,"byte_end":51512,"line_start":43,"line_end":43,"column_start":14,"column_end":25},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":514}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66739,"byte_end":66740,"line_start":49,"line_end":49,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66800,"byte_end":66801,"line_start":51,"line_end":51,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"DrawParam","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66824,"byte_end":66825,"line_start":52,"line_end":52,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Image","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66847,"byte_end":66848,"line_start":53,"line_end":53,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Mesh","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66872,"byte_end":66873,"line_start":54,"line_end":54,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"create_shader, BlendMode, ShaderHandle, ShaderId, EmptyConst","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66895,"byte_end":66896,"line_start":55,"line_end":55,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Font","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66925,"byte_end":66926,"line_start":56,"line_end":56,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":598}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66949,"byte_end":66950,"line_start":57,"line_end":57,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Matrix4, Rect, Point2, WrapMode, FilterMode, Color, DrawMode","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":45,"index":552},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235285,"byte_end":235299,"line_start":3,"line_end":3,"column_start":27,"column_end":41},"alias_span":null,"name":"GameController","value":"","parent":{"krate":0,"index":1700}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5510,"byte_end":5517,"line_start":138,"line_end":138,"column_start":19,"column_end":26},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5519,"byte_end":5533,"line_start":138,"line_end":138,"column_start":28,"column_end":42},"alias_span":null,"name":"ContextBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5551,"byte_end":5552,"line_start":139,"line_end":139,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"GameResult, GameError","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5553,"line_start":1,"line_end":139,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":128},{"krate":0,"index":184},{"krate":0,"index":284},{"krate":0,"index":404},{"krate":0,"index":514},{"krate":0,"index":598},{"krate":0,"index":1700},{"krate":0,"index":1728},{"krate":0,"index":1760},{"krate":0,"index":1818},{"krate":0,"index":2038},{"krate":0,"index":2044}],"decl_id":null,"docs":" # What is this?\n [![Build Status](https://travis-ci.org/ggez/ggez.svg?branch=master)](https://travis-ci.org/ggez/ggez)\n [![Build status](https://ci.appveyor.com/api/projects/status/3v9lsq6n9li7kxim/branch/master?svg=true)](https://ci.appveyor.com/project/svenstaro/ggez/branch/master)\n [![Docs Status](https://docs.rs/ggez/badge.svg)](https://docs.rs/ggez)\n [![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/svenstaro/ggez/blob/master/LICENSE)\n [![Crates.io](https://img.shields.io/crates/v/ggez.svg)](https://crates.io/crates/ggez)\n [![Crates.io](https://img.shields.io/crates/d/ggez.svg)](https://crates.io/crates/ggez)","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4849,"byte_end":4871,"line_start":102,"line_end":102,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4872,"byte_end":4911,"line_start":103,"line_end":103,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/audio.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":2046},{"krate":0,"index":2052},{"krate":0,"index":2048},{"krate":0,"index":68},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":124}],"decl_id":null,"docs":" Provides an interface to output sound to the user's speakers.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6110,"byte_end":6122,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"AudioContext","qualname":"::audio::AudioContext","value":"AudioContext {  }","parent":null,"children":[{"krate":0,"index":19}],"decl_id":null,"docs":" A struct that contains all information for tracking sound info.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6219,"byte_end":6222,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<AudioContext>::new","value":"fn () -> GameResult<AudioContext>","parent":null,"children":[],"decl_id":null,"docs":" Create new AudioContext.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6786,"byte_end":6795,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"SoundData","qualname":"::audio::SoundData","value":"","parent":null,"children":[],"decl_id":null,"docs":" Static sound data stored in memory.\n It is Arc'ed, so cheap to clone.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6901,"byte_end":6904,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<SoundData>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new SoundData from the file at the given path.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7196,"byte_end":7206,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SoundData>::from_bytes","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies the data in the given slice into a new SoundData object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7381,"byte_end":7390,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_read","qualname":"<SoundData>::from_read","value":"fn <R> (reader: &mut R) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a SoundData from any Read object; this involves\n copying it into a buffer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":8739,"byte_end":8745,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Source","qualname":"::audio::Source","value":"Source {  }","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" A source of audio data connected to a particular `Channel`.\n Will stop playing when dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":8899,"byte_end":8902,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<Source>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Source from the given file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":9186,"byte_end":9195,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Source>::from_data","value":"fn (context: &mut Context, data: SoundData) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Source using the given SoundData object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":9516,"byte_end":9520,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"play","qualname":"<Source>::play","value":"fn (&self) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Plays the Source.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10213,"byte_end":10223,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<Source>::set_repeat","value":"fn (&mut self, repeat: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the source to repeat playback infinitely on next `play()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10356,"byte_end":10362,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"repeat","qualname":"<Source>::repeat","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether or not the source is set to repeat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10442,"byte_end":10447,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"pause","qualname":"<Source>::pause","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10526,"byte_end":10532,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"resume","qualname":"<Source>::resume","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resumes playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10608,"byte_end":10612,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"stop","qualname":"<Source>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops playback\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10764,"byte_end":10771,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"stopped","qualname":"<Source>::stopped","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the source is stopped\n -- that is, has no more data to play.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10865,"byte_end":10871,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"volume","qualname":"<Source>::volume","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the current volume\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":10965,"byte_end":10975,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"set_volume","qualname":"<Source>::set_volume","value":"fn (&mut self, value: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current volume\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":11103,"byte_end":11109,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"paused","qualname":"<Source>::paused","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether or not the source is paused\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":11265,"byte_end":11272,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"playing","qualname":"<Source>::playing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether or not the source is playing (ie, not paused\n and not stopped)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conf","qualname":"::conf","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/conf.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":2056},{"krate":0,"index":2124},{"krate":0,"index":2122},{"krate":0,"index":2118},{"krate":0,"index":2108},{"krate":0,"index":2066},{"krate":0,"index":2062},{"krate":0,"index":2058},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":2128},{"krate":0,"index":2204},{"krate":0,"index":2202},{"krate":0,"index":2198},{"krate":0,"index":2194},{"krate":0,"index":2184},{"krate":0,"index":2140},{"krate":0,"index":2134},{"krate":0,"index":2130},{"krate":0,"index":146},{"krate":0,"index":2208},{"krate":0,"index":2282},{"krate":0,"index":2278},{"krate":0,"index":2274},{"krate":0,"index":2264},{"krate":0,"index":2220},{"krate":0,"index":2214},{"krate":0,"index":2210},{"krate":0,"index":160},{"krate":0,"index":2286},{"krate":0,"index":2384},{"krate":0,"index":2382},{"krate":0,"index":2378},{"krate":0,"index":2368},{"krate":0,"index":2302},{"krate":0,"index":2296},{"krate":0,"index":2292},{"krate":0,"index":2288},{"krate":0,"index":2388},{"krate":0,"index":2456},{"krate":0,"index":2454},{"krate":0,"index":2450},{"krate":0,"index":2440},{"krate":0,"index":2398},{"krate":0,"index":2394},{"krate":0,"index":2390},{"krate":0,"index":172},{"krate":0,"index":2460},{"krate":0,"index":2520},{"krate":0,"index":2476},{"krate":0,"index":2472},{"krate":0,"index":2466},{"krate":0,"index":2462},{"krate":0,"index":176}],"decl_id":null,"docs":" The `conf` module contains functions for loading and saving game\n configurations.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12268,"byte_end":12271,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Off","qualname":"::conf::FullscreenType::Off","value":"FullscreenType::Off","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Windowed mode\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12301,"byte_end":12305,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"True","qualname":"::conf::FullscreenType::True","value":"FullscreenType::True","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Real fullscreen\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12446,"byte_end":12453,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Desktop","qualname":"::conf::FullscreenType::Desktop","value":"FullscreenType::Desktop","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Windowed fullscreen, generally preferred over real fullscreen\n these days 'cause it plays nicer with multiple monitors.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2056},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12225,"byte_end":12239,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"FullscreenType","qualname":"::conf::FullscreenType","value":"FullscreenType::{Off, True, Desktop}","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427}],"decl_id":null,"docs":" Possible fullscreen modes.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12216,"byte_end":12456,"line_start":20,"line_end":28,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12216,"byte_end":12456,"line_start":20,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13674,"byte_end":13684,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"WindowMode","qualname":"::conf::WindowMode","value":"WindowMode { width, height, borderless, fullscreen_type, vsync, min_width, min_height, max_width, max_height }","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481}],"decl_id":null,"docs":" A builder structure containing window settings\n that can be set at runtime and changed with `graphics::set_mode()`","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13663,"byte_end":14566,"line_start":70,"line_end":98,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13663,"byte_end":14566,"line_start":70,"line_end":98,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":465},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13742,"byte_end":13747,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"name":"width","qualname":"::conf::WindowMode::width","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Window width\n","sig":null,"attributes":[{"value":"default = r#\"800\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13712,"byte_end":13733,"line_start":72,"line_end":72,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":467},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13810,"byte_end":13816,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"name":"height","qualname":"::conf::WindowMode::height","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Window height\n","sig":null,"attributes":[{"value":"default = r#\"600\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13780,"byte_end":13801,"line_start":75,"line_end":75,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13909,"byte_end":13919,"line_start":79,"line_end":79,"column_start":9,"column_end":19},"name":"borderless","qualname":"::conf::WindowMode::borderless","value":"bool","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Whether or not to show window decorations\n","sig":null,"attributes":[{"value":"default = r#\"false\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13877,"byte_end":13900,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14001,"byte_end":14016,"line_start":82,"line_end":82,"column_start":9,"column_end":24},"name":"fullscreen_type","qualname":"::conf::WindowMode::fullscreen_type","value":"conf::FullscreenType","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Fullscreen type\n","sig":null,"attributes":[{"value":"default = r#\"FullscreenType::Off\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":13955,"byte_end":13992,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":473},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14108,"byte_end":14113,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"vsync","qualname":"::conf::WindowMode::vsync","value":"bool","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Whether or not to enable vsync\n","sig":null,"attributes":[{"value":"default = r#\"true\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14077,"byte_end":14099,"line_start":84,"line_end":84,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14215,"byte_end":14224,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"min_width","qualname":"::conf::WindowMode::min_width","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Minimum width for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = r#\"0\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14187,"byte_end":14206,"line_start":87,"line_end":87,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":477},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14326,"byte_end":14336,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"name":"min_height","qualname":"::conf::WindowMode::min_height","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Minimum height for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = r#\"0\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14298,"byte_end":14317,"line_start":90,"line_end":90,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":479},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14437,"byte_end":14446,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"name":"max_width","qualname":"::conf::WindowMode::max_width","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Maximum width for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = r#\"0\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14409,"byte_end":14428,"line_start":93,"line_end":93,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":481},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14548,"byte_end":14558,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"name":"max_height","qualname":"::conf::WindowMode::max_height","value":"u32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Maximum height for resizable windows; 0 means no limit\n","sig":null,"attributes":[{"value":"default = r#\"0\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14520,"byte_end":14539,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14620,"byte_end":14630,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"borderless","qualname":"<WindowMode>::borderless","value":"fn (mut self, borderless: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set borderless\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14770,"byte_end":14785,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"fullscreen_type","qualname":"<WindowMode>::fullscreen_type","value":"fn (mut self, fullscreen_type: FullscreenType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fullscreen type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14936,"byte_end":14941,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"vsync","qualname":"<WindowMode>::vsync","value":"fn (mut self, vsync: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set vsync\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":15107,"byte_end":15117,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<WindowMode>::dimensions","value":"fn (mut self, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set default window size, or screen resolution in fullscreen mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":15308,"byte_end":15322,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"min_dimensions","qualname":"<WindowMode>::min_dimensions","value":"fn (mut self, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum window dimensions for windowed mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":15521,"byte_end":15535,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"max_dimensions","qualname":"<WindowMode>::max_dimensions","value":"fn (mut self, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set maximum window dimensions for windowed mode\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2208},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16115,"byte_end":16126,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"WindowSetup","qualname":"::conf::WindowSetup","value":"WindowSetup { title, icon, resizable, allow_highdpi, samples }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543}],"decl_id":null,"docs":" A builder structure containing window settings\n that must be set at init time and cannot be changed afterwards.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16104,"byte_end":16837,"line_start":156,"line_end":174,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16217,"byte_end":16222,"line_start":159,"line_end":159,"column_start":9,"column_end":14},"name":"title","qualname":"::conf::WindowSetup::title","value":"std::string::String","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" The window title.\n","sig":null,"attributes":[{"value":"default = r#\"\"An easy, good game\".to_owned()\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16159,"byte_end":16208,"line_start":158,"line_end":158,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":537},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16472,"byte_end":16476,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"name":"icon","qualname":"::conf::WindowSetup::icon","value":"std::string::String","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" A file path to the window's icon.\n It is rooted in the `resources` directory (see the `filesystem` module for details),\n and an empty string results in a blank/default icon.\n","sig":null,"attributes":[{"value":"default = r#\"\"\".to_owned()\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16432,"byte_end":16463,"line_start":163,"line_end":163,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16569,"byte_end":16578,"line_start":167,"line_end":167,"column_start":9,"column_end":18},"name":"resizable","qualname":"::conf::WindowSetup::resizable","value":"bool","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Whether or not the window is resizable\n","sig":null,"attributes":[{"value":"default = r#\"false\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16537,"byte_end":16560,"line_start":166,"line_end":166,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16692,"byte_end":16705,"line_start":170,"line_end":170,"column_start":9,"column_end":22},"name":"allow_highdpi","qualname":"::conf::WindowSetup::allow_highdpi","value":"bool","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Whether or not to allow high DPI mode when creating the window\n","sig":null,"attributes":[{"value":"default = r#\"true\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16661,"byte_end":16683,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":543},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16815,"byte_end":16822,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"name":"samples","qualname":"::conf::WindowSetup::samples","value":"conf::NumSamples","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Number of samples for multisample anti-aliasing\n","sig":null,"attributes":[{"value":"default = r#\"NumSamples::One\"#","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16773,"byte_end":16806,"line_start":172,"line_end":172,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16894,"byte_end":16899,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowSetup>::title","value":"fn (mut self, title: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set window title\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":17034,"byte_end":17038,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"icon","qualname":"<WindowSetup>::icon","value":"fn (mut self, icon: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's icon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":17161,"byte_end":17170,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowSetup>::resizable","value":"fn (mut self, resizable: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set resizable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":17301,"byte_end":17314,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"allow_highdpi","qualname":"<WindowSetup>::allow_highdpi","value":"fn (mut self, allow: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set allow_highdpi\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":17552,"byte_end":17559,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"samples","qualname":"<WindowSetup>::samples","value":"fn (mut self, samples: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set number of samples","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":589},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18198,"byte_end":18204,"line_start":225,"line_end":225,"column_start":5,"column_end":11},"name":"OpenGL","qualname":"::conf::Backend::OpenGL","value":"Backend::OpenGL { major, minor }","parent":{"krate":0,"index":2286},"children":[],"decl_id":null,"docs":" Defaults to OpenGL 3.2, which is supported by basically\n every machine since 2009 or so (apart from the ones that don't)\n","sig":null,"attributes":[{"value":"default","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18183,"byte_end":18193,"line_start":224,"line_end":224,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":2286},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18033,"byte_end":18040,"line_start":221,"line_end":221,"column_start":10,"column_end":17},"name":"Backend","qualname":"::conf::Backend","value":"Backend::{OpenGL}","parent":null,"children":[{"krate":0,"index":589}],"decl_id":null,"docs":" Possible backends.\n Currently, only OpenGL Core spec is supported,\n but this lets you specify the version numbers.\n","sig":null,"attributes":[{"value":"serde(tag = \"type\")","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18001,"byte_end":18023,"line_start":220,"line_end":220,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18024,"byte_end":18375,"line_start":221,"line_end":233,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18024,"byte_end":18375,"line_start":221,"line_end":233,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18556,"byte_end":18559,"line_start":239,"line_end":239,"column_start":5,"column_end":8},"name":"One","qualname":"::conf::NumSamples::One","value":"NumSamples::One","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" One sample\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18589,"byte_end":18592,"line_start":241,"line_end":241,"column_start":5,"column_end":8},"name":"Two","qualname":"::conf::NumSamples::Two","value":"NumSamples::Two","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Two samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":657},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18623,"byte_end":18627,"line_start":243,"line_end":243,"column_start":5,"column_end":9},"name":"Four","qualname":"::conf::NumSamples::Four","value":"NumSamples::Four","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Four samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18659,"byte_end":18664,"line_start":245,"line_end":245,"column_start":5,"column_end":10},"name":"Eight","qualname":"::conf::NumSamples::Eight","value":"NumSamples::Eight","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Eight samples\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":665},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18698,"byte_end":18705,"line_start":247,"line_end":247,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::conf::NumSamples::Sixteen","value":"NumSamples::Sixteen","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Sixteen samples\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2388},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18520,"byte_end":18530,"line_start":237,"line_end":237,"column_start":10,"column_end":20},"name":"NumSamples","qualname":"::conf::NumSamples","value":"NumSamples::{One, Two, Four, Eight, Sixteen}","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":665}],"decl_id":null,"docs":" The possible number of samples for multisample anti-aliasing\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18511,"byte_end":18713,"line_start":237,"line_end":248,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18511,"byte_end":18713,"line_start":237,"line_end":248,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18825,"byte_end":18833,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"from_u32","qualname":"<NumSamples>::from_u32","value":"fn (i: u32) -> Option<NumSamples>","parent":null,"children":[],"decl_id":null,"docs":" Create a NumSamples from a number.\n Returns None if i is invalid.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2460},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19478,"byte_end":19482,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"Conf","qualname":"::conf::Conf","value":"Conf { window_mode, window_setup, backend }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713}],"decl_id":null,"docs":" A structure containing configuration data\n for the game engine.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19555,"byte_end":19566,"line_start":280,"line_end":280,"column_start":9,"column_end":20},"name":"window_mode","qualname":"::conf::Conf::window_mode","value":"conf::WindowMode","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Window setting information that can be set at runtime\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19653,"byte_end":19665,"line_start":282,"line_end":282,"column_start":9,"column_end":21},"name":"window_setup","qualname":"::conf::Conf::window_setup","value":"conf::WindowSetup","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Window setting information that must be set at init-time\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19718,"byte_end":19725,"line_start":284,"line_end":284,"column_start":9,"column_end":16},"name":"backend","qualname":"::conf::Conf::backend","value":"conf::Backend","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Backend configuration\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19794,"byte_end":19797,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<Conf>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as Conf::default()\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19947,"byte_end":19961,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"from_toml_file","qualname":"<Conf>::from_toml_file","value":"fn <R> (file: &mut R) -> GameResult<Conf>","parent":null,"children":[],"decl_id":null,"docs":" Load a TOML file from the given `Read` and attempts to parse\n a `Conf` from it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":20246,"byte_end":20258,"line_start":304,"line_end":304,"column_start":12,"column_end":24},"name":"to_toml_file","qualname":"<Conf>::to_toml_file","value":"fn <W> (&self, file: &mut W) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the `Conf` to the given `Write` object,\n formatted as TOML.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21682,"byte_end":21689,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { conf, sdl_context, filesystem, gfx_context, event_context, timer_context, audio_context, gamepad_context, mouse_context, default_font }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59}],"decl_id":null,"docs":" A `Context` is an object that holds on to global resources.\n It basically tracks hardware state such as the screen, audio\n system, timers, and so on.  Generally this type is **not** thread-\n safe and only one `Context` can exist at a time.  Trying to create\n another one will fail.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":39},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21753,"byte_end":21757,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"conf","qualname":"::context::Context::conf","value":"conf::Conf","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The Conf object the Context was created with\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":41},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21799,"byte_end":21810,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"name":"sdl_context","qualname":"::context::Context::sdl_context","value":"sdl2::Sdl","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" SDL context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":43},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21850,"byte_end":21860,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"filesystem","qualname":"::context::Context::filesystem","value":"filesystem::Filesystem","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Filesystem state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":45},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21905,"byte_end":21916,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"gfx_context","qualname":"::context::Context::gfx_context","value":"graphics::context::GraphicsContextGeneric<graphics::GlBackendSpec, <graphics::GlBackendSpec as graphics::BackendSpec>::SurfaceType>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Graphics state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":47},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":21975,"byte_end":21988,"line_start":40,"line_end":40,"column_start":9,"column_end":22},"name":"event_context","qualname":"::context::Context::event_context","value":"sdl2::EventSubsystem","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Event context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":49},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22040,"byte_end":22053,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"timer_context","qualname":"::context::Context::timer_context","value":"timer::TimeContext","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Timer state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":51},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22105,"byte_end":22118,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"audio_context","qualname":"::context::Context::audio_context","value":"audio::AudioContext","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Audio context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":53},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22173,"byte_end":22188,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"gamepad_context","qualname":"::context::Context::gamepad_context","value":"input::GamepadContext","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Gamepad context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22243,"byte_end":22256,"line_start":48,"line_end":48,"column_start":9,"column_end":22},"name":"mouse_context","qualname":"::context::Context::mouse_context","value":"mouse::MouseContext","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Mouse context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22308,"byte_end":22320,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"default_font","qualname":"::context::Context::default_font","value":"graphics::text::Font","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Default font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":25666,"byte_end":25680,"line_start":146,"line_end":146,"column_start":12,"column_end":26},"name":"load_from_conf","qualname":"<Context>::load_from_conf","value":"fn (game_id: &'static str, author: &'static str, default_config: conf::Conf) -> GameResult<Context>","parent":null,"children":[],"decl_id":null,"docs":" Tries to create a new Context by loading a config\n file from its default path, using the given `Conf`\n object as a default if none is found.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":26348,"byte_end":26368,"line_start":169,"line_end":169,"column_start":12,"column_end":32},"name":"print_resource_stats","qualname":"<Context>::print_resource_stats","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints out information on the resources subsystem.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":26590,"byte_end":26594,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"quit","qualname":"<Context>::quit","value":"fn (&mut self) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Triggers a Quit event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":27225,"byte_end":27238,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"process_event","qualname":"<Context>::process_event","value":"fn (&mut self, event: &event::Event) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds an `Event` into the `Context` so it can update any internal\n state it needs to, such as detecting window resizes.  If you are\n rolling your own event loop, you should call this on the events\n you receive before processing them yourself.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28202,"byte_end":28216,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"ContextBuilder","qualname":"::context::ContextBuilder","value":"ContextBuilder {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763}],"decl_id":null,"docs":" A builder object for creating a context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28423,"byte_end":28426,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextBuilder>::new","value":"fn (game_id: &'static str, author: &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new ContextBuilder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28707,"byte_end":28719,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"window_setup","qualname":"<ContextBuilder>::window_setup","value":"fn (mut self, setup: conf::WindowSetup) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window setup settings\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28875,"byte_end":28886,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"window_mode","qualname":"<ContextBuilder>::window_mode","value":"fn (mut self, mode: conf::WindowMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window mode settings\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":29034,"byte_end":29041,"line_start":251,"line_end":251,"column_start":12,"column_end":19},"name":"backend","qualname":"<ContextBuilder>::backend","value":"fn (mut self, backend: conf::Backend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the graphics backend\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":29245,"byte_end":29262,"line_start":258,"line_end":258,"column_start":12,"column_end":29},"name":"add_resource_path","qualname":"<ContextBuilder>::add_resource_path","value":"fn <T> (mut self, path: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a new read-only filesystem path to the places to search\n for resources.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":29682,"byte_end":29696,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"with_conf_file","qualname":"<ContextBuilder>::with_conf_file","value":"fn (mut self, load_conf_file: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies whether or not to load the `conf.toml` file if it\n exists and use its settings to override the provided values.\n Defaults to `true` which is usually what you want, but being\n able to fiddle with it is sometimes useful for debugging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":29843,"byte_end":29848,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"build","qualname":"<ContextBuilder>::build","value":"fn (self) -> GameResult<Context>","parent":null,"children":[],"decl_id":null,"docs":" Build the Context.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/error.rs","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":400}],"decl_id":null,"docs":" Error types and conversion functions.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32345,"byte_end":32360,"line_start":21,"line_end":21,"column_start":5,"column_end":20},"name":"FilesystemError","qualname":"::error::GameError::FilesystemError","value":"GameError::FilesystemError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" An error in the filesystem layout\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":773},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32410,"byte_end":32421,"line_start":23,"line_end":23,"column_start":5,"column_end":16},"name":"ConfigError","qualname":"::error::GameError::ConfigError","value":"GameError::ConfigError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" An error in the config file\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32496,"byte_end":32504,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"SdlError","qualname":"::error::GameError::SdlError","value":"GameError::SdlError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" An error in some part of the underlying SDL library.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32621,"byte_end":32633,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"IntegerError","qualname":"::error::GameError::IntegerError","value":"GameError::IntegerError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" An error saying that a an integer overflow/underflow occured\n in an underlying library.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32691,"byte_end":32708,"line_start":30,"line_end":30,"column_start":5,"column_end":22},"name":"ResourceLoadError","qualname":"::error::GameError::ResourceLoadError","value":"GameError::ResourceLoadError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" An error trying to parse a resource\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32816,"byte_end":32832,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"ResourceNotFound","qualname":"::error::GameError::ResourceNotFound","value":"GameError::ResourceNotFound(String, Vec<(std::path::PathBuf, GameError)>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Unable to find a resource; the Vec is the paths it searched for and associated errors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32929,"byte_end":32940,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"RenderError","qualname":"::error::GameError::RenderError","value":"GameError::RenderError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong in the renderer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33005,"byte_end":33015,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"AudioError","qualname":"::error::GameError::AudioError","value":"GameError::AudioError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong in the audio playback\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33084,"byte_end":33095,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"WindowError","qualname":"::error::GameError::WindowError","value":"GameError::WindowError(gfx_window_sdl::InitError)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong trying to create a window\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":807},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33184,"byte_end":33191,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"IOError","qualname":"::error::GameError::IOError","value":"GameError::IOError(std::io::Error)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong trying to read from a file\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":811},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33271,"byte_end":33280,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"FontError","qualname":"::error::GameError::FontError","value":"GameError::FontError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong trying to load/render a font\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33348,"byte_end":33358,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"VideoError","qualname":"::error::GameError::VideoError","value":"GameError::VideoError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went wrong applying video settings.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":819},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33413,"byte_end":33431,"line_start":46,"line_end":46,"column_start":5,"column_end":23},"name":"ShaderProgramError","qualname":"::error::GameError::ShaderProgramError","value":"GameError::ShaderProgramError(gfx::shade::ProgramError)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something went compiling shaders\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33521,"byte_end":33533,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"UnknownError","qualname":"::error::GameError::UnknownError","value":"GameError::UnknownError(String)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Something else happened; this is generally a bug.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2558},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":32287,"byte_end":32296,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"GameError","qualname":"::error::GameError","value":"GameError::{FilesystemError, ConfigError, SdlError, IntegerError, ResourceLoadError, ResourceNotFound, RenderError, AudioError, WindowError, IOError, FontError, VideoError, ShaderProgramError, UnknownError}","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":823}],"decl_id":null,"docs":" An enum containing all kinds of game framework errors.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":318},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35336,"byte_end":35346,"line_start":96,"line_end":96,"column_start":10,"column_end":20},"name":"GameResult","qualname":"::error::GameResult","value":"Result<T, GameError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient result type consisting of a return type and a `GameError`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":404},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/event.rs","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":464},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":512}],"decl_id":null,"docs":" The `event` module contains traits and structs to actually run your game mainloop\n and handle top-level state, as well as handle input events such as keyboard\n and mouse.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":42271,"byte_end":42283,"line_start":56,"line_end":56,"column_start":11,"column_end":23},"name":"EventHandler","qualname":"::event::EventHandler","value":"EventHandler","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496}],"decl_id":null,"docs":" A trait defining event callbacks; your primary interface with\n `ggez`'s event loop.  Have a type implement this trait and\n override at least the update() and draw() methods, then pass it to\n `event::run()` to run the game's mainloop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":42405,"byte_end":42411,"line_start":59,"line_end":59,"column_start":8,"column_end":14},"name":"update","qualname":"::event::EventHandler::update","value":"fn (&mut self, _ctx: &mut Context) -> GameResult<()>","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called upon each physics update to the game.\n This should be where the game's logic takes place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":42661,"byte_end":42665,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"draw","qualname":"::event::EventHandler::draw","value":"fn (&mut self, _ctx: &mut Context) -> GameResult<()>","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called to do the drawing of your game.\n You probably want to start this with\n `graphics::clear()` and end it with\n `graphics::present()` and `timer::yield_now()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":42759,"byte_end":42782,"line_start":68,"line_end":68,"column_start":8,"column_end":31},"name":"mouse_button_down_event","qualname":"::event::EventHandler::mouse_button_down_event","value":"fn (&mut self, _ctx: &mut Context, _button: mouse::MouseButton, _x: i32, _y: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A mouse button was pressed\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":42960,"byte_end":42981,"line_start":78,"line_end":78,"column_start":8,"column_end":29},"name":"mouse_button_up_event","qualname":"::event::EventHandler::mouse_button_up_event","value":"fn (&mut self, _ctx: &mut Context, _button: mouse::MouseButton, _x: i32, _y: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A mouse button was released\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":43285,"byte_end":43303,"line_start":89,"line_end":89,"column_start":8,"column_end":26},"name":"mouse_motion_event","qualname":"::event::EventHandler::mouse_motion_event","value":"fn (&mut self, _ctx: &mut Context, _state: mouse::MouseState, _x: i32, _y: i32, _xrel: i32, _yrel: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" The mouse was moved; it provides both absolute x and y coordinates in the window,\n and relative x and y coordinates compared to its last position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":43661,"byte_end":43678,"line_start":102,"line_end":102,"column_start":8,"column_end":25},"name":"mouse_wheel_event","qualname":"::event::EventHandler::mouse_wheel_event","value":"fn (&mut self, _ctx: &mut Context, _x: i32, _y: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" The mousewheel was scrolled, vertically (y, positive away from and negative toward the user)\n or horizontally (x, positive to the right and negative to the left).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":43778,"byte_end":43792,"line_start":105,"line_end":105,"column_start":8,"column_end":22},"name":"key_down_event","qualname":"::event::EventHandler::key_down_event","value":"fn (&mut self, ctx: &mut Context, keycode: Keycode, _keymod: Mod, _repeat: bool) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A keyboard button was pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":44038,"byte_end":44050,"line_start":112,"line_end":112,"column_start":8,"column_end":20},"name":"key_up_event","qualname":"::event::EventHandler::key_up_event","value":"fn (&mut self, _ctx: &mut Context, _keycode: Keycode, _keymod: Mod, _repeat: bool) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A keyboard button was released.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":44396,"byte_end":44414,"line_start":120,"line_end":120,"column_start":8,"column_end":26},"name":"text_editing_event","qualname":"::event::EventHandler::text_editing_event","value":"fn (&mut self, _ctx: &mut Context, _text: String, _start: i32, _length: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Candidate text is passed by the OS (via Input Method Editor).\n Refer to:\n <https://wiki.libsdl.org/SDL_TextEditingEvent>\n <https://wiki.libsdl.org/SDL_TextInputEvent>\n <https://wiki.libsdl.org/Tutorials/TextInput>\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":44784,"byte_end":44800,"line_start":128,"line_end":128,"column_start":8,"column_end":24},"name":"text_input_event","qualname":"::event::EventHandler::text_input_event","value":"fn (&mut self, _ctx: &mut Context, _text: String) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Resulting text (usually a unicode character) is passed by the OS (via Input Method Editor).\n Refer to:\n <https://wiki.libsdl.org/SDL_TextEditingEvent>\n <https://wiki.libsdl.org/SDL_TextInputEvent>\n <https://wiki.libsdl.org/Tutorials/TextInput>\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":44940,"byte_end":44968,"line_start":131,"line_end":131,"column_start":8,"column_end":36},"name":"controller_button_down_event","qualname":"::event::EventHandler::controller_button_down_event","value":"fn (&mut self, _ctx: &mut Context, _btn: Button, _instance_id: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A controller button was pressed; instance_id identifies which controller.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":45129,"byte_end":45155,"line_start":139,"line_end":139,"column_start":8,"column_end":34},"name":"controller_button_up_event","qualname":"::event::EventHandler::controller_button_up_event","value":"fn (&mut self, _ctx: &mut Context, _btn: Button, _instance_id: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A controller button was released.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":45263,"byte_end":45284,"line_start":141,"line_end":141,"column_start":8,"column_end":29},"name":"controller_axis_event","qualname":"::event::EventHandler::controller_axis_event","value":"fn (&mut self, _ctx: &mut Context, _axis: Axis, _value: i16, _instance_id: i32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" A controller axis moved.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":45475,"byte_end":45486,"line_start":151,"line_end":151,"column_start":8,"column_end":19},"name":"focus_event","qualname":"::event::EventHandler::focus_event","value":"fn (&mut self, _ctx: &mut Context, _gained: bool) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called when the window is shown or hidden.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":45631,"byte_end":45641,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"quit_event","qualname":"::event::EventHandler::quit_event","value":"fn (&mut self, _ctx: &mut Context) -> bool","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called upon a quit event.  If it returns true,\n the game does not exit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":45915,"byte_end":45927,"line_start":163,"line_end":163,"column_start":8,"column_end":20},"name":"resize_event","qualname":"::event::EventHandler::resize_event","value":"fn (&mut self, _ctx: &mut Context, _width: u32, _height: u32) -> ()","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Called when the user resizes the window.\n Is not called when you resize it yourself with\n `graphics::set_mode()` though.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46047,"byte_end":46053,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::Events","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to access the OS's event pump.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46287,"byte_end":46290,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<Events>::new","value":"fn (ctx: &Context) -> GameResult<Events>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Events object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46457,"byte_end":46461,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"poll","qualname":"<Events>::poll","value":"fn (&mut self) -> EventPollIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator for all events.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46768,"byte_end":46771,"line_start":194,"line_end":194,"column_start":8,"column_end":11},"name":"run","qualname":"::event::run","value":"fn <S> (ctx: &mut Context, state: &mut S) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Runs the game's main loop, calling event callbacks on the given state\n object as events occur.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filesystem","qualname":"::filesystem","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/filesystem.rs","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":548},{"krate":0,"index":552},{"krate":0,"index":558}],"decl_id":null,"docs":" A cross-platform interface to the filesystem.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2564},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":51646,"byte_end":51656,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"Filesystem","qualname":"::filesystem::Filesystem","value":"Filesystem {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835}],"decl_id":null,"docs":" A structure that contains the filesystem state and cache.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":77},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":51983,"byte_end":51990,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"VfsFile","qualname":"::filesystem::File::VfsFile","value":"File::VfsFile(Box<vfs::VFile>)","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" A wrapper for a VFile trait object.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":51928,"byte_end":51932,"line_start":59,"line_end":59,"column_start":10,"column_end":14},"name":"File","qualname":"::filesystem::File","value":"File::{VfsFile}","parent":null,"children":[{"krate":0,"index":77}],"decl_id":null,"docs":" Represents a file, either in the filesystem, or in the resources zip file,\n or whatever.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":53085,"byte_end":53088,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<Filesystem>::new","value":"fn (id: &'static str, author: &'static str) -> GameResult<Filesystem>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Filesystem instance, using the given `id` and (on\n some platforms) the `author` as a portion of the user\n directory path.  This function is called automatically by\n ggez, the end user should never need to call it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":55995,"byte_end":55999,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"open","qualname":"<Filesystem>::open","value":"fn <P> (&mut self, path: P) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens the given path and returns the resulting `File`\n in read-only mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":56339,"byte_end":56351,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"open_options","qualname":"<Filesystem>::open_options","value":"fn <P> (&mut self, path: P, options: &OpenOptions) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in the user directory with the given `filesystem::OpenOptions`.\n Note that even if you open a file read-only, it can only access\n files in the user directory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":56952,"byte_end":56958,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"create","qualname":"<Filesystem>::create","value":"fn <P> (&mut self, path: P) -> GameResult<File>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file in the user directory and opens it\n to be written to, truncating it if it already exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":57259,"byte_end":57269,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"create_dir","qualname":"<Filesystem>::create_dir","value":"fn <P> (&mut self, path: P) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty directory in the user dir\n with the given name.  Any parents to that directory\n that do not exist will be created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":57440,"byte_end":57446,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"delete","qualname":"<Filesystem>::delete","value":"fn <P> (&mut self, path: P) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the specified file in the user dir.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":57649,"byte_end":57659,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"delete_dir","qualname":"<Filesystem>::delete_dir","value":"fn <P> (&mut self, path: P) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes the specified directory in the user dir,\n and all its contents!\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":57827,"byte_end":57833,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"exists","qualname":"<Filesystem>::exists","value":"fn <P> (&self, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a file or directory exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":57986,"byte_end":57993,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"is_file","qualname":"<Filesystem>::is_file","value":"fn <P> (&self, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a path points at a file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":58230,"byte_end":58236,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"is_dir","qualname":"<Filesystem>::is_dir","value":"fn <P> (&self, path: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a path points at a directory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":58476,"byte_end":58493,"line_start":253,"line_end":253,"column_start":12,"column_end":29},"name":"get_user_data_dir","qualname":"<Filesystem>::get_user_data_dir","value":"fn (&self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Return the full path to the user data directory\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":58623,"byte_end":58642,"line_start":258,"line_end":258,"column_start":12,"column_end":31},"name":"get_user_config_dir","qualname":"<Filesystem>::get_user_config_dir","value":"fn (&self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Return the full path to the user config directory\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":58807,"byte_end":58824,"line_start":264,"line_end":264,"column_start":12,"column_end":29},"name":"get_resources_dir","qualname":"<Filesystem>::get_resources_dir","value":"fn (&self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the resource directory\n (even if it doesn't exist)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":59075,"byte_end":59083,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"read_dir","qualname":"<Filesystem>::read_dir","value":"fn <P> (&mut self, path: P) -> GameResult<Box<Iterator<Item = path::PathBuf>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of all files and directories in the resource directory,\n in no particular order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":59500,"byte_end":59509,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"print_all","qualname":"<Filesystem>::print_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints the contents of all data directories.\n Useful for debugging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":60108,"byte_end":60115,"line_start":302,"line_end":302,"column_start":12,"column_end":19},"name":"log_all","qualname":"<Filesystem>::log_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Outputs the contents of all data directories,\n using the \"info\" log level of the `log` crate.\n Useful for debugging.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":60872,"byte_end":60877,"line_start":321,"line_end":321,"column_start":12,"column_end":17},"name":"mount","qualname":"<Filesystem>::mount","value":"fn (&mut self, path: &path::Path, readonly: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the given (absolute) path to the list of directories\n it will search to look for resources.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":61270,"byte_end":61281,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"name":"read_config","qualname":"<Filesystem>::read_config","value":"fn (&mut self) -> GameResult<conf::Conf>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a file named \"/conf.toml\" in any resource directory and\n loads it if it finds it.\n If it can't read it for some reason, returns an error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":61811,"byte_end":61823,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"write_config","qualname":"<Filesystem>::write_config","value":"fn (&mut self, conf: &conf::Conf) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `conf::Conf` object and saves it to the user directory,\n overwriting any file already there.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphics","qualname":"::graphics","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/graphics/mod.rs","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":686},{"krate":0,"index":762},{"krate":0,"index":776},{"krate":0,"index":866},{"krate":0,"index":934},{"krate":0,"index":1064},{"krate":0,"index":1180},{"krate":0,"index":1316},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":2904},{"krate":0,"index":2930},{"krate":0,"index":2928},{"krate":0,"index":2924},{"krate":0,"index":2918},{"krate":0,"index":2914},{"krate":0,"index":2910},{"krate":0,"index":2906},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":2952},{"krate":0,"index":2966},{"krate":0,"index":2964},{"krate":0,"index":2960},{"krate":0,"index":2954},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2988},{"krate":0,"index":3002},{"krate":0,"index":3000},{"krate":0,"index":2996},{"krate":0,"index":2990},{"krate":0,"index":2970},{"krate":0,"index":2972},{"krate":0,"index":3024},{"krate":0,"index":3038},{"krate":0,"index":3036},{"krate":0,"index":3032},{"krate":0,"index":3026},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3042},{"krate":0,"index":1566},{"krate":0,"index":1570},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1582},{"krate":0,"index":1588},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690}],"decl_id":null,"docs":" The `graphics` module performs the actual drawing of images, text, and other\n objects with the `Drawable` trait.  It also handles basic loading of images\n and text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2570},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":96043,"byte_end":96056,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"CanvasGeneric","qualname":"::graphics::canvas::CanvasGeneric","value":"CanvasGeneric {  }","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843}],"decl_id":null,"docs":" A generic canvas independent of graphics backend. This type should probably\n never be used directly; use `ggez::graphics::Canvas` instead.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":96915,"byte_end":96921,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Canvas","qualname":"::graphics::canvas::Canvas","value":"CanvasGeneric<GlBackendSpec>","parent":null,"children":[],"decl_id":null,"docs":" A canvas that can be rendered to instead of the screen (sometimes referred\n to as \"render target\" or \"render to texture\"). Set the canvas with the\n `ggez::graphics::set_canvas()` function, and then anything you\n draw will be drawn to the canvas instead of the screen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":97051,"byte_end":97054,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas>::new","value":"fn (ctx: &mut Context, width: u32, height: u32, samples: conf::NumSamples) -> GameResult<Canvas>","parent":null,"children":[],"decl_id":null,"docs":" Create a new canvas with the given size and number of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":98995,"byte_end":99011,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"with_window_size","qualname":"<Canvas>::with_window_size","value":"fn (ctx: &mut Context) -> GameResult<Canvas>","parent":null,"children":[],"decl_id":null,"docs":" Create a new canvas with the current window dimensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":99303,"byte_end":99312,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"get_image","qualname":"<Canvas>::get_image","value":"fn (&self) -> &Image","parent":null,"children":[],"decl_id":null,"docs":" Gets the backend `Image` that is being rendered to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":99435,"byte_end":99445,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Canvas>::into_inner","value":"fn (self) -> Image","parent":null,"children":[],"decl_id":null,"docs":" Destroys the Canvas and returns the `Image` it contains.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":684},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":100406,"byte_end":100416,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"set_canvas","qualname":"::graphics::canvas::set_canvas","value":"fn (ctx: &mut Context, target: Option<&Canvas>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the canvas to render to. Specifying `Option::None` will cause all\n rendering to be done directly to the screen.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101211,"byte_end":101233,"line_start":19,"line_end":19,"column_start":12,"column_end":34},"name":"GraphicsContextGeneric","qualname":"::graphics::context::GraphicsContextGeneric","value":"GraphicsContextGeneric { foreground_color, background_color, modelview_stack, white_image, screen_rect, dpi, color_format, depth_format, backend_spec, window, multisample_samples, device, factory, encoder, screen_render_target, depth_view, data, quad_slice, quad_vertex_buffer, default_sampler_info, samplers, current_shader, shaders, glyph_brush }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173}],"decl_id":null,"docs":" A structure that contains graphics state.\n For instance, background and foreground colors,\n window info, DPI, rendering pipeline state, etc.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101324,"byte_end":101340,"line_start":24,"line_end":24,"column_start":9,"column_end":25},"name":"foreground_color","qualname":"::graphics::context::GraphicsContextGeneric::foreground_color","value":"graphics::types::Color","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":121},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101357,"byte_end":101373,"line_start":25,"line_end":25,"column_start":9,"column_end":25},"name":"background_color","qualname":"::graphics::context::GraphicsContextGeneric::background_color","value":"graphics::types::Color","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101444,"byte_end":101459,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"name":"modelview_stack","qualname":"::graphics::context::GraphicsContextGeneric::modelview_stack","value":"std::vec::Vec<nalgebra::Matrix<f32, nalgebra::U4, nalgebra::U4, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f32, nalgebra::U4, nalgebra::U4>>::Buffer>>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101483,"byte_end":101494,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"white_image","qualname":"::graphics::context::GraphicsContextGeneric::white_image","value":"graphics::image::ImageGeneric<gfx_device_gl::Resources>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101511,"byte_end":101522,"line_start":30,"line_end":30,"column_start":9,"column_end":20},"name":"screen_rect","qualname":"::graphics::context::GraphicsContextGeneric::screen_rect","value":"graphics::types::Rect","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":133},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101538,"byte_end":101541,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"dpi","qualname":"::graphics::context::GraphicsContextGeneric::dpi","value":"(f32, f32, f32)","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":135},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101568,"byte_end":101580,"line_start":32,"line_end":32,"column_start":9,"column_end":21},"name":"color_format","qualname":"::graphics::context::GraphicsContextGeneric::color_format","value":"gfx::format::Format","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":137},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101611,"byte_end":101623,"line_start":33,"line_end":33,"column_start":9,"column_end":21},"name":"depth_format","qualname":"::graphics::context::GraphicsContextGeneric::depth_format","value":"gfx::format::Format","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":139},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101655,"byte_end":101667,"line_start":35,"line_end":35,"column_start":9,"column_end":21},"name":"backend_spec","qualname":"::graphics::context::GraphicsContextGeneric::backend_spec","value":"B","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101680,"byte_end":101686,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"window","qualname":"::graphics::context::GraphicsContextGeneric::window","value":"sdl2::video::Window","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101717,"byte_end":101736,"line_start":37,"line_end":37,"column_start":9,"column_end":28},"name":"multisample_samples","qualname":"::graphics::context::GraphicsContextGeneric::multisample_samples","value":"u8","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101814,"byte_end":101820,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"device","qualname":"::graphics::context::GraphicsContextGeneric::device","value":"std::boxed::Box<<B as graphics::BackendSpec>::Device>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101846,"byte_end":101853,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"factory","qualname":"::graphics::context::GraphicsContextGeneric::factory","value":"std::boxed::Box<<B as graphics::BackendSpec>::Factory>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101880,"byte_end":101887,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"encoder","qualname":"::graphics::context::GraphicsContextGeneric::encoder","value":"gfx::Encoder<<B as graphics::BackendSpec>::Resources, <B as graphics::BackendSpec>::CommandBuffer>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":153},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":101943,"byte_end":101963,"line_start":43,"line_end":43,"column_start":9,"column_end":29},"name":"screen_render_target","qualname":"::graphics::context::GraphicsContextGeneric::screen_render_target","value":"gfx::handle::RawRenderTargetView<<B as graphics::BackendSpec>::Resources>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":155},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102045,"byte_end":102055,"line_start":45,"line_end":45,"column_start":9,"column_end":19},"name":"depth_view","qualname":"::graphics::context::GraphicsContextGeneric::depth_view","value":"gfx::handle::RawDepthStencilView<<B as graphics::BackendSpec>::Resources>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102017,"byte_end":102036,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102114,"byte_end":102118,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"data","qualname":"::graphics::context::GraphicsContextGeneric::data","value":"graphics::pipe::Data<<B as graphics::BackendSpec>::Resources>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102154,"byte_end":102164,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"quad_slice","qualname":"::graphics::context::GraphicsContextGeneric::quad_slice","value":"gfx::Slice<<B as graphics::BackendSpec>::Resources>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102200,"byte_end":102218,"line_start":49,"line_end":49,"column_start":9,"column_end":27},"name":"quad_vertex_buffer","qualname":"::graphics::context::GraphicsContextGeneric::quad_vertex_buffer","value":"gfx::handle::Buffer<<B as graphics::BackendSpec>::Resources, graphics::Vertex>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102272,"byte_end":102292,"line_start":51,"line_end":51,"column_start":9,"column_end":29},"name":"default_sampler_info","qualname":"::graphics::context::GraphicsContextGeneric::default_sampler_info","value":"gfx::texture::SamplerInfo","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102324,"byte_end":102332,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"name":"samplers","qualname":"::graphics::context::GraphicsContextGeneric::samplers","value":"graphics::SamplerCache<B>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":169},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102390,"byte_end":102404,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"name":"current_shader","qualname":"::graphics::context::GraphicsContextGeneric::current_shader","value":"std::rc::Rc<std::cell::RefCell<std::option::Option<usize>>>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102445,"byte_end":102452,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"shaders","qualname":"::graphics::context::GraphicsContextGeneric::shaders","value":"std::vec::Vec<std::boxed::Box<graphics::shader::ShaderHandle<B> + 'static>>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":173},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102490,"byte_end":102501,"line_start":58,"line_end":58,"column_start":9,"column_end":20},"name":"glyph_brush","qualname":"::graphics::context::GraphicsContextGeneric::glyph_brush","value":"gfx_glyph::GlyphBrush<'static, <B as graphics::BackendSpec>::Resources, <B as graphics::BackendSpec>::Factory>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2576},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117257,"byte_end":117266,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"DrawParam","qualname":"::graphics::drawparam::DrawParam","value":"DrawParam { src, dest, rotation, scale, offset, shear, color }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":859}],"decl_id":null,"docs":" A struct containing all the necessary info for drawing a Drawable.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117246,"byte_end":118244,"line_start":12,"line_end":32,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":847},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117408,"byte_end":117411,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"src","qualname":"::graphics::drawparam::DrawParam::src","value":"graphics::types::Rect","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" a portion of the drawable to clip, as a fraction of the whole image.\n Defaults to the whole image (1.0) if omitted.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117493,"byte_end":117497,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"dest","qualname":"::graphics::drawparam::DrawParam::dest","value":"nalgebra::Point<f32, nalgebra::U2>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" the position to draw the graphic expressed as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":851},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117562,"byte_end":117570,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"name":"rotation","qualname":"::graphics::drawparam::DrawParam::rotation","value":"f32","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" orientation of the graphic in radians.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":853},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117636,"byte_end":117641,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"scale","qualname":"::graphics::drawparam::DrawParam::scale","value":"nalgebra::Point<f32, nalgebra::U2>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" x/y scale factors expressed as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":117998,"byte_end":118004,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"offset","qualname":"::graphics::drawparam::DrawParam::offset","value":"nalgebra::Point<f32, nalgebra::U2>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" specifies an offset from the center for transform operations like scale/rotation,\n with `0,0` meaning the origin and `1,1` meaning the opposite corner from the origin.\n By default these operations are done from the top-left corner, so to rotate something\n from the center specify `Point2::new(0.5, 0.5)` here.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118073,"byte_end":118078,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"shear","qualname":"::graphics::drawparam::DrawParam::shear","value":"nalgebra::Point<f32, nalgebra::U2>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" x/y shear factors expressed as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118221,"byte_end":118226,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::drawparam::DrawParam::color","value":"std::option::Option<graphics::types::Color>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" A color to draw the target with.\n If `None`, the color set by `graphics::set_color()` is used; default white.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118728,"byte_end":118739,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"into_matrix","qualname":"<DrawParam>::into_matrix","value":"fn (self) -> Matrix4","parent":null,"children":[],"decl_id":null,"docs":" Turn the DrawParam into a model matrix, combining\n destination, rotation, scale, offset and shear.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2594},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120054,"byte_end":120066,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"ImageGeneric","qualname":"::graphics::image::ImageGeneric","value":"ImageGeneric {  }","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":875}],"decl_id":null,"docs":" Generic in-GPU-memory image data available to be drawn on the screen.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":808},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120747,"byte_end":120752,"line_start":38,"line_end":38,"column_start":10,"column_end":15},"name":"Image","qualname":"::graphics::image::Image","value":"ImageGeneric<gfx_device_gl::Resources>","parent":null,"children":[],"decl_id":null,"docs":" In-GPU-memory image data available to be drawn on the screen,\n using the OpenGL backend.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120981,"byte_end":120984,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Png","qualname":"::graphics::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":2600},"children":[],"decl_id":null,"docs":" .png image format (defaults to RGBA with 8-bit channels.)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2600},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120897,"byte_end":120908,"line_start":42,"line_end":42,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::graphics::image::ImageFormat","value":"ImageFormat::{Png}","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" The supported formats for saving an image.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120888,"byte_end":120987,"line_start":42,"line_end":45,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120888,"byte_end":120987,"line_start":42,"line_end":45,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":121071,"byte_end":121074,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Image>::new","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Image>","parent":null,"children":[],"decl_id":null,"docs":" Load a new image from the file at the given path.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":121587,"byte_end":121597,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"from_rgba8","qualname":"<Image>::from_rgba8","value":"fn (context: &mut Context, width: u16, height: u16, rgba: &[u8]) -> GameResult<Image>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Image` from the given buffer of `u8` RGBA values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":122065,"byte_end":122073,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<Image>::to_rgba8","value":"fn (&self, ctx: &mut Context) -> GameResult<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Dumps the `Image`'s data to a `Vec` of `u8` RGBA values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":124281,"byte_end":124287,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"encode","qualname":"<Image>::encode","value":"fn <P> (&self, ctx: &mut Context, format: ImageFormat, path: P) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the `Image` to the given file format and\n write it out to the given path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":128281,"byte_end":128286,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"solid","qualname":"<Image>::solid","value":"fn (context: &mut Context, size: u16, color: Color) -> GameResult<Image>","parent":null,"children":[],"decl_id":null,"docs":" A little helper function that creates a new Image that is just\n a solid square of the given size and color.  Mainly useful for\n debugging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":128821,"byte_end":128826,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"width","qualname":"<Image>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the width of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":128920,"byte_end":128926,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"height","qualname":"<Image>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the height of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129024,"byte_end":129034,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"get_filter","qualname":"<Image>::get_filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129159,"byte_end":129169,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Image>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129312,"byte_end":129326,"line_start":269,"line_end":269,"column_start":12,"column_end":26},"name":"get_dimensions","qualname":"<Image>::get_dimensions","value":"fn (&self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the dimensions of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129495,"byte_end":129503,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"get_wrap","qualname":"<Image>::get_wrap","value":"fn (&self) -> (WrapMode, WrapMode)","parent":null,"children":[],"decl_id":null,"docs":" Gets the `Image`'s `WrapMode` along the X and Y axes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129688,"byte_end":129696,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"set_wrap","qualname":"<Image>::set_wrap","value":"fn (&mut self, wrap_x: WrapMode, wrap_y: WrapMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Image`'s `WrapMode` along the X and Y axes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134454,"byte_end":134465,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"MeshBuilder","qualname":"::graphics::mesh::MeshBuilder","value":"MeshBuilder {  }","parent":null,"children":[{"krate":0,"index":881}],"decl_id":null,"docs":" A builder for creating `Mesh`es.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134728,"byte_end":134731,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<MeshBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new MeshBuilder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134858,"byte_end":134862,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"line","qualname":"<MeshBuilder>::line","value":"fn (&mut self, points: &[Point2], width: f32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a line of one or more connected segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":135160,"byte_end":135166,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"circle","qualname":"<MeshBuilder>::circle","value":"fn (&mut self, mode: DrawMode, point: Point2, radius: f32, tolerance: f32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a circle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":136867,"byte_end":136874,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"ellipse","qualname":"<MeshBuilder>::ellipse","value":"fn (&mut self, mode: DrawMode, point: Point2, radius1: f32, radius2: f32, tolerance: f32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for an ellipse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":138415,"byte_end":138423,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"polyline","qualname":"<MeshBuilder>::polyline","value":"fn (&mut self, mode: DrawMode, points: &[Point2]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a series of connected lines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":139661,"byte_end":139668,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"polygon","qualname":"<MeshBuilder>::polygon","value":"fn (&mut self, mode: DrawMode, points: &[Point2]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a closed polygon\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":140936,"byte_end":140945,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"triangles","qualname":"<MeshBuilder>::triangles","value":"fn (&mut self, triangles: &[Point2]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mesh` from a raw list of triangles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":142753,"byte_end":142758,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"build","qualname":"<MeshBuilder>::build","value":"fn (&self, ctx: &mut Context) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Takes the accumulated geometry and load it into GPU memory,\n creating a single `Mesh`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2630},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":143837,"byte_end":143841,"line_start":303,"line_end":303,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::graphics::mesh::Mesh","value":"Mesh {  }","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889}],"decl_id":null,"docs":" 2D polygon mesh.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":144116,"byte_end":144124,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"new_line","qualname":"<Mesh>::new_line","value":"fn (ctx: &mut Context, points: &[Point2], width: f32) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a line of one or more connected segments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":144370,"byte_end":144380,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"new_circle","qualname":"<Mesh>::new_circle","value":"fn (ctx: &mut Context, mode: DrawMode, point: Point2, radius: f32, tolerance: f32) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for a circle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":144703,"byte_end":144714,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"new_ellipse","qualname":"<Mesh>::new_ellipse","value":"fn (ctx: &mut Context, mode: DrawMode, point: Point2, radius1: f32, radius2: f32, tolerance: f32) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for an ellipse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":145085,"byte_end":145097,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"new_polyline","qualname":"<Mesh>::new_polyline","value":"fn (ctx: &mut Context, mode: DrawMode, points: &[Point2]) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for series of connected lines\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":145335,"byte_end":145346,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"new_polygon","qualname":"<Mesh>::new_polygon","value":"fn (ctx: &mut Context, mode: DrawMode, points: &[Point2]) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new mesh for closed polygon\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":145596,"byte_end":145610,"line_start":360,"line_end":360,"column_start":12,"column_end":26},"name":"from_triangles","qualname":"<Mesh>::from_triangles","value":"fn (ctx: &mut Context, triangles: &[Point2]) -> GameResult<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mesh` from a raw list of triangles.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2646},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147194,"byte_end":147204,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"EmptyConst","qualname":"::graphics::shader::EmptyConst","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type for empty shader data for shaders that do not require any additional\n data to be sent to the GPU\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147183,"byte_end":147205,"line_start":29,"line_end":29,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147569,"byte_end":147572,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Add","qualname":"::graphics::shader::BlendMode::Add","value":"BlendMode::Add","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, add their values together, saturating at 1.0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147669,"byte_end":147677,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::graphics::shader::BlendMode::Subtract","value":"BlendMode::Subtract","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, subtract the source value from the destination value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147985,"byte_end":147990,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Alpha","qualname":"::graphics::shader::BlendMode::Alpha","value":"BlendMode::Alpha","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, add the value of the source times its alpha channel with the value of the destination multiplied by the inverse of the source alpha channel. Has the usual transparency effect: mixes the two colors using a fraction of each one specified by the alpha of the source.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148348,"byte_end":148354,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"Invert","qualname":"::graphics::shader::BlendMode::Invert","value":"BlendMode::Invert","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, subtract the destination color from a constant color using the source color as weight. Has an invert effect with the constant color as base and source color controlling displacement from the base color. A white source color and a white value results in plain invert. The output alpha is same as destination alpha.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148430,"byte_end":148438,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::graphics::shader::BlendMode::Multiply","value":"BlendMode::Multiply","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, multiply their values together.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148506,"byte_end":148513,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"Replace","qualname":"::graphics::shader::BlendMode::Replace","value":"BlendMode::Replace","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the source value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148582,"byte_end":148589,"line_start":55,"line_end":55,"column_start":5,"column_end":12},"name":"Lighten","qualname":"::graphics::shader::BlendMode::Lighten","value":"BlendMode::Lighten","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the lighter value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148657,"byte_end":148663,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Darken","qualname":"::graphics::shader::BlendMode::Darken","value":"BlendMode::Darken","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" When combining two fragments, choose the darker value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2658},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147470,"byte_end":147479,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"name":"BlendMode","qualname":"::graphics::shader::BlendMode","value":"BlendMode::{Add, Subtract, Alpha, Invert, Multiply, Replace, Lighten, Darken}","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907}],"decl_id":null,"docs":" An enum for specifying default and custom blend modes\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147461,"byte_end":148666,"line_start":41,"line_end":58,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147461,"byte_end":148666,"line_start":41,"line_end":58,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":998},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":152115,"byte_end":152123,"line_start":161,"line_end":161,"column_start":10,"column_end":18},"name":"ShaderId","qualname":"::graphics::shader::ShaderId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" An ID used by the `GraphicsContext` to uniquely identify a shader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":152411,"byte_end":152424,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"ShaderGeneric","qualname":"::graphics::shader::ShaderGeneric","value":"ShaderGeneric {  }","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919}],"decl_id":null,"docs":" A `ShaderGeneric` reprensents a handle user-defined shader that can be used\n with a ggez graphics context that is generic over `gfx::Resources`","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1000},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":152686,"byte_end":152692,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"Shader","qualname":"::graphics::shader::Shader","value":"ShaderGeneric<graphics::GlBackendSpec, C>","parent":null,"children":[],"decl_id":null,"docs":" A `Shader` represents a handle to a user-defined shader that can be used\n with a ggez graphics context\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":155307,"byte_end":155310,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"new","qualname":"<Shader<C>>::new","value":"fn <P, S> (ctx: &mut Context, vertex_path: P, pixel_path: P, consts: C, name: S, blend_modes: Option<&[BlendMode]>) -> GameResult<Shader<C>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Shader` given a gfx pipeline object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":156468,"byte_end":156475,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Shader<C>>::from_u8","value":"fn <S> (ctx: &mut Context, vertex_source: &[u8], pixel_source: &[u8], consts: C, name: S, blend_modes: Option<&[BlendMode]>) -> GameResult<Shader<C>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Shader` directly from source given a gfx pipeline\n object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":157254,"byte_end":157258,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"send","qualname":"<Shader<C>>::send","value":"fn (&self, ctx: &mut Context, consts: C) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Send data to the GPU for use with the `Shader`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":157579,"byte_end":157588,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"shader_id","qualname":"<Shader<C>>::shader_id","value":"fn (&self) -> ShaderId","parent":null,"children":[],"decl_id":null,"docs":" Gets the shader ID for the `Shader` which is used by the\n `GraphicsContext` for identifying shaders in its cache\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1024},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158483,"byte_end":158495,"line_start":369,"line_end":369,"column_start":11,"column_end":23},"name":"ShaderHandle","qualname":"::graphics::shader::ShaderHandle","value":"ShaderHandle<Spec: graphics::BackendSpec>: fmt::Debug","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030}],"decl_id":null,"docs":" A trait that is used to create trait objects to abstract away the\n Structure<ConstFormat> type of the constant data for drawing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158583,"byte_end":158587,"line_start":371,"line_end":371,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::shader::ShaderHandle::draw","value":"fn (&self, &mut Encoder<Spec::Resources, Spec::CommandBuffer>, &Slice<Spec::Resources>, &graphics::pipe::Data<Spec::Resources>) -> GameResult<()>","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":" Draw with the current Shader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158823,"byte_end":158837,"line_start":379,"line_end":379,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::shader::ShaderHandle::set_blend_mode","value":"fn (&mut self, mode: BlendMode) -> GameResult<()>","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":" Sets the shader program's blend mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158946,"byte_end":158960,"line_start":382,"line_end":382,"column_start":8,"column_end":22},"name":"get_blend_mode","qualname":"::graphics::shader::ShaderHandle::get_blend_mode","value":"fn (&self) -> BlendMode","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":" Gets the shader program's current blend mode\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2688},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":160118,"byte_end":160128,"line_start":419,"line_end":419,"column_start":12,"column_end":22},"name":"ShaderLock","qualname":"::graphics::shader::ShaderLock","value":"ShaderLock {  }","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":927}],"decl_id":null,"docs":" A lock for RAII shader regions. The shader automatically gets cleared once\n the lock goes out of scope, restoring the previous shader (if any).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":160397,"byte_end":160407,"line_start":431,"line_end":431,"column_start":8,"column_end":18},"name":"use_shader","qualname":"::graphics::shader::use_shader","value":"fn <C> (ctx: &mut Context, ps: &Shader<C>) -> ShaderLock","parent":null,"children":[],"decl_id":null,"docs":" Use a shader until the returned lock goes out of scope\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1046},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":160785,"byte_end":160795,"line_start":446,"line_end":446,"column_start":8,"column_end":18},"name":"set_shader","qualname":"::graphics::shader::set_shader","value":"fn <C> (ctx: &mut Context, ps: &Shader<C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current  shader for the Context to render with\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":161205,"byte_end":161217,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"clear_shader","qualname":"::graphics::shader::clear_shader","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the the current shader for the Context, restoring the default shader.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":987},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":165344,"byte_end":165351,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"TTFFont","qualname":"::graphics::text::Font::TTFFont","value":"Font::TTFFont { font, points, scale }","parent":{"krate":0,"index":2716},"children":[],"decl_id":null,"docs":" A truetype font\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":165620,"byte_end":165637,"line_start":28,"line_end":28,"column_start":5,"column_end":22},"name":"BitmapFontVariant","qualname":"::graphics::text::Font::BitmapFontVariant","value":"Font::BitmapFontVariant(BitmapFont)","parent":{"krate":0,"index":2716},"children":[],"decl_id":null,"docs":" A bitmap font where letter widths are infered\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":999},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":165720,"byte_end":165729,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"GlyphFont","qualname":"::graphics::text::Font::GlyphFont","value":"Font::GlyphFont(FontId)","parent":{"krate":0,"index":2716},"children":[],"decl_id":null,"docs":" A TrueType font stored in `GraphicsContext::glyph_brush`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2716},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":165309,"byte_end":165313,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Font","qualname":"::graphics::text::Font","value":"Font::{TTFFont, BitmapFontVariant, GlyphFont}","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":995},{"krate":0,"index":999}],"decl_id":null,"docs":" A font that defines the shape of characters drawn on the screen.\n Can be created from a .ttf file or from an image (bitmap fonts).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2722},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":165827,"byte_end":165837,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"BitmapFont","qualname":"::graphics::text::BitmapFont","value":"BitmapFont {  }","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013}],"decl_id":null,"docs":" A bitmap font where letter widths are infered\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":167533,"byte_end":167536,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Font>::new","value":"fn <P> (context: &mut Context, path: P, points: u32) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Load a new TTF font from the given file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":168186,"byte_end":168192,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"new_px","qualname":"<Font>::new_px","value":"fn <P> (context: &mut Context, path: P, pixels: u32) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Load a new TTF font from the given file, returning a font that draws\n lines that are the given number of pixels high.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":168641,"byte_end":168651,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"fn (name: &str, bytes: &[u8], points: u32, dpi: (f32, f32)) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Loads a new TTF font from data copied out of the given buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":169718,"byte_end":169731,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"from_bytes_px","qualname":"<Font>::from_bytes_px","value":"fn (name: &str, bytes: &[u8], pixels: u32) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Loads a new TTF font from data copied out of the given buffer, taking font size in pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":170898,"byte_end":170908,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"new_bitmap","qualname":"<Font>::new_bitmap","value":"fn <P> (context: &mut Context, path: P, glyphs: &str) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a bitmap font from a long image of its alphabet, specified by `path`.\n The width of each individual chars is assumed to be to be\n image(path).width/glyphs.chars().count()\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":172120,"byte_end":172150,"line_start":203,"line_end":203,"column_start":12,"column_end":42},"name":"new_variable_width_bitmap_font","qualname":"<Font>::new_variable_width_bitmap_font","value":"fn <P> (context: &mut Context, path: P, glyphs: &str, space_width: usize, letter_separation: usize) -> GameResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a bitmap font from a long image of its alphabet.\n Each letter must be separated from the last by a fully transparent column of pixels.\n The width of each letter is infered from these letter boundaries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":174491,"byte_end":174505,"line_start":262,"line_end":262,"column_start":12,"column_end":26},"name":"new_glyph_font","qualname":"<Font>::new_glyph_font","value":"fn <P> (context: &mut Context, path: P) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Loads a new TrueType font from given file and into `GraphicsContext::glyph_brush`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":174960,"byte_end":174980,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"get_glyph_font_by_id","qualname":"<Font>::get_glyph_font_by_id","value":"fn (context: &mut Context, font_id: FontId) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a loaded font from `GraphicsContext::glyph_brush`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":175835,"byte_end":175847,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"default_font","qualname":"<Font>::default_font","value":"fn () -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns baked-in default font (currently DejaVuSerif.ttf).\n Note it does create a new `Font` object with every call;\n although the actual data should be shared.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":176427,"byte_end":176437,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"get_height","qualname":"<Font>::get_height","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the height of the Font in pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":176781,"byte_end":176790,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"get_width","qualname":"<Font>::get_width","value":"fn (&self, text: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width a line of text needs, in pixels.\n Does not handle line-breaks.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":177852,"byte_end":177860,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"get_wrap","qualname":"<Font>::get_wrap","value":"fn (&self, text: &str, wrap_limit: usize) -> (usize, Vec<String>)","parent":null,"children":[],"decl_id":null,"docs":" Breaks the given text into lines that will not exceed `wrap_limit` pixels\n in length when drawn with the given font.\n It accounts for newlines correctly but does not\n try to break words or handle hyphenated words; it just breaks\n at whitespace.  (It also doesn't preserve whitespace.)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2732},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":180333,"byte_end":180337,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"Text","qualname":"::graphics::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019}],"decl_id":null,"docs":" Drawable text created from a `Font`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":187973,"byte_end":187976,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"fn (context: &mut Context, text: &str, font: &Font) -> GameResult<Text>","parent":null,"children":[],"decl_id":null,"docs":" Renders a new `Text` from the given `Font`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":188528,"byte_end":188533,"line_start":635,"line_end":635,"column_start":12,"column_end":17},"name":"width","qualname":"<Text>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the rendered text, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":188657,"byte_end":188663,"line_start":640,"line_end":640,"column_start":12,"column_end":18},"name":"height","qualname":"<Text>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the rendered text, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":188781,"byte_end":188789,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"contents","qualname":"<Text>::contents","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string that the text represents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":188901,"byte_end":188915,"line_start":650,"line_end":650,"column_start":12,"column_end":26},"name":"get_dimensions","qualname":"<Text>::get_dimensions","value":"fn (&self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the dimensions of the rendered text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189044,"byte_end":189054,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"get_filter","qualname":"<Text>::get_filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the the rendered text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189185,"byte_end":189195,"line_start":660,"line_end":660,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Text>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the the rendered text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189367,"byte_end":189376,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"get_image","qualname":"<Text>::get_image","value":"fn (&self) -> &Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Image` contained\n by the `Text` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189528,"byte_end":189541,"line_start":672,"line_end":672,"column_start":12,"column_end":25},"name":"get_image_mut","qualname":"<Text>::get_image_mut","value":"fn (&mut self) -> &mut Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable  reference to the `Image` contained\n by the `Text` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189681,"byte_end":189691,"line_start":678,"line_end":678,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Text>::into_inner","value":"fn (self) -> Image","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the `Image` contained\n by the `Text` object.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1214},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195145,"byte_end":195151,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Layout","qualname":"::graphics::text_cached::Layout","value":"gfx_glyph::Layout<gfx_glyph::BuiltInLineBreaker>","parent":null,"children":[],"decl_id":null,"docs":" Aliased type from `gfx_glyph`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195312,"byte_end":195330,"line_start":22,"line_end":22,"column_start":11,"column_end":29},"name":"DEFAULT_FONT_SCALE","qualname":"::graphics::text_cached::DEFAULT_FONT_SCALE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default scale, used as `Scale::uniform(DEFAULT_FONT_SCALE)` when no explicit scale is given.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2738},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195620,"byte_end":195632,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"TextFragment","qualname":"::graphics::text_cached::TextFragment","value":"TextFragment { text, color, font_id, scale }","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027}],"decl_id":null,"docs":" A piece of text with optional color, font and font scale information.\n These options take precedence over any similar field/argument.\n Can be implicitly constructed from `String`, `(String, Color)`, and `(String, FontId, Scale)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1021},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195671,"byte_end":195675,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"text","qualname":"::graphics::text_cached::TextFragment::text","value":"std::string::String","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Text string itself.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1023},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195745,"byte_end":195750,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"color","qualname":"::graphics::text_cached::TextFragment::color","value":"std::option::Option<graphics::types::Color>","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Fragment's color, defaults to text's color.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1025},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195831,"byte_end":195838,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"font_id","qualname":"::graphics::text_cached::TextFragment::font_id","value":"std::option::Option<gfx_glyph::FontId>","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Fragment's font ID, defaults to text's font ID.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1027},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195916,"byte_end":195921,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"scale","qualname":"::graphics::text_cached::TextFragment::scale","value":"std::option::Option<rusttype::Scale>","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Fragment's scale, defaults to text's scale.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":198499,"byte_end":198509,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"TextCached","qualname":"::graphics::text_cached::TextCached","value":"TextCached {  }","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047}],"decl_id":null,"docs":" Drawable text.\n Can be either monolithic, or consist of differently-formatted fragments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":199827,"byte_end":199830,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<TextCached>::new","value":"fn <F> (fragment: F) -> GameResult<TextCached>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TextCached` from a `TextFragment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":200080,"byte_end":200089,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"new_empty","qualname":"<TextCached>::new_empty","value":"fn () -> GameResult<TextCached>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `TextCached`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":200206,"byte_end":200218,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"add_fragment","qualname":"<TextCached>::add_fragment","value":"fn <F> (&mut self, fragment: F) -> &mut TextCached","parent":null,"children":[],"decl_id":null,"docs":" Appends a `TextFragment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":200608,"byte_end":200624,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"replace_fragment","qualname":"<TextCached>::replace_fragment","value":"fn <F> (&mut self, old_index: usize, new_fragment: F) -> &mut TextCached","parent":null,"children":[],"decl_id":null,"docs":" Replaces a `TextFragment` without having to rebuild the entire `TextCached`.\n Useful for things like animating specific words, or highlighting them on mouseover.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":200927,"byte_end":200936,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"fragments","qualname":"<TextCached>::fragments","value":"fn (&self) -> &[TextFragment]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice with all fragments, for reading.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":201195,"byte_end":201205,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<TextCached>::set_bounds","value":"fn (&mut self, bounds: Point2, layout: Option<Layout>) -> &mut TextCached","parent":null,"children":[],"decl_id":null,"docs":" Specifies rectangular dimensions to try and fit contents inside of, by wrapping.\n Alignment within bounds can be changed by passing a `Layout`; defaults to top left corner.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":201726,"byte_end":201734,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"set_font","qualname":"<TextCached>::set_font","value":"fn <FI> (&mut self, font_id: FI, font_scale: Scale) -> &mut TextCached","parent":null,"children":[],"decl_id":null,"docs":" Specifies text's font and font scale; used for fragments that don't have their own.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":204513,"byte_end":204521,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"contents","qualname":"<TextCached>::contents","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the string that the text represents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":206490,"byte_end":206495,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"width","qualname":"<TextCached>::width","value":"fn (&self, context: &Context) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of formatted and wrapped text, in screen coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":206836,"byte_end":206842,"line_start":390,"line_end":390,"column_start":12,"column_end":18},"name":"height","qualname":"<TextCached>::height","value":"fn (&self, context: &Context) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of formatted and wrapped text, in screen coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":207343,"byte_end":207348,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"queue","qualname":"<TextCached>::queue","value":"fn (&self, context: &mut Context, relative_dest: Point2, color: Option<Color>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Queues the `TextCached` to be drawn by `draw_queued()`.\n `relative_dest` is relative to the `DrawParam::dest` passed to `draw_queued()`.\n Note, any `TextCached` drawn via `graphics::draw()` will also draw the queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":207735,"byte_end":207744,"line_start":409,"line_end":409,"column_start":12,"column_end":21},"name":"queue_raw","qualname":"<TextCached>::queue_raw","value":"fn <'a, S, G> (context: &mut Context, section: S, custom_layout: Option<&G>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Exposes `gfx_glyph`'s `GlyphBrush::queue()` and `GlyphBrush::queue_custom_layout()`,\n in case `ggez`' API is insufficient.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":208334,"byte_end":208345,"line_start":424,"line_end":424,"column_start":12,"column_end":23},"name":"draw_queued","qualname":"<TextCached>::draw_queued","value":"fn <D> (context: &mut Context, param: D) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws all of `queue()`d `TextCached`.\n `DrawParam` apply to everything in the queue; offset is in screen coordinates;\n color is ignored - specify it when `queue()`ing instead.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1324},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":211900,"byte_end":211906,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point2","qualname":"::graphics::types::Point2","value":"na::Point2<f32>","parent":null,"children":[],"decl_id":null,"docs":" A 2 dimensional point representing a location\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1326},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":211999,"byte_end":212006,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::graphics::types::Vector2","value":"na::Vector2<f32>","parent":null,"children":[],"decl_id":null,"docs":" A 2 dimensional vector representing an offset of a location\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1328},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212107,"byte_end":212114,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::graphics::types::Matrix4","value":"na::Matrix4<f32>","parent":null,"children":[],"decl_id":null,"docs":" A 4 dimensional matrix representing an arbitrary 3d transformation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2764},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212338,"byte_end":212342,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Rect","qualname":"::graphics::types::Rect","value":"Rect { x, y, w, h }","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055}],"decl_id":null,"docs":" A simple 2D rectangle.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212327,"byte_end":212577,"line_start":17,"line_end":26,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1049},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212404,"byte_end":212405,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::graphics::types::Rect::x","value":"f32","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":" X coordinate of the left edge of the rect.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1051},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212470,"byte_end":212471,"line_start":21,"line_end":21,"column_start":9,"column_end":10},"name":"y","qualname":"::graphics::types::Rect::y","value":"f32","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":" Y coordinate of the top edge of the rect.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1053},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212518,"byte_end":212519,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"w","qualname":"::graphics::types::Rect::w","value":"f32","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":" Total width of the rect\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1055},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212568,"byte_end":212569,"line_start":25,"line_end":25,"column_start":9,"column_end":10},"name":"h","qualname":"::graphics::types::Rect::h","value":"f32","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":" Total height of the rect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212629,"byte_end":212632,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Rect>::new","value":"fn (x: f32, y: f32, w: f32, h: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new rect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212837,"byte_end":212845,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"fraction","qualname":"<Rect>::fraction","value":"fn (x: f32, y: f32, w: f32, h: f32, reference: &Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rect a la Love2D's love.graphics.newQuad,\n as a fraction of the reference rect's size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213125,"byte_end":213132,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"new_i32","qualname":"<Rect>::new_i32","value":"fn (x: i32, y: i32, w: i32, h: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new rect from i32 coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213368,"byte_end":213372,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"zero","qualname":"<Rect>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with all values zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213502,"byte_end":213505,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"one","qualname":"<Rect>::one","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` at 0,0 with width and height 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213635,"byte_end":213640,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"point","qualname":"<Rect>::point","value":"fn (&self) -> Point2","parent":null,"children":[],"decl_id":null,"docs":" Gets the `Rect`'s x and y coordinates as a `Point2`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213758,"byte_end":213762,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"left","qualname":"<Rect>::left","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the left edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213857,"byte_end":213862,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"right","qualname":"<Rect>::right","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the right edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":213964,"byte_end":213967,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"top","qualname":"<Rect>::top","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the top edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":214063,"byte_end":214069,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Rect>::bottom","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom edge of the `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":214181,"byte_end":214189,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"fn (&self, point: Point2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Rect` contains a `Point`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":214421,"byte_end":214429,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Rect>::overlaps","value":"fn (&self, other: &Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Rect` overlaps another `Rect`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":214677,"byte_end":214686,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"translate","qualname":"<Rect>::translate","value":"fn (&mut self, offset: Vector2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Translates the `Rect` by an offset of (x, y)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":214835,"byte_end":214842,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Rect>::move_to","value":"fn (&mut self, destination: Point2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the `Rect`'s origin to (x, y)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215050,"byte_end":215055,"line_start":116,"line_end":116,"column_start":12,"column_end":17},"name":"scale","qualname":"<Rect>::scale","value":"fn (&mut self, sx: f32, sy: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scales the `Rect` by a factor of (sx, sy),\n growing towards the bottom-left\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2786},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215520,"byte_end":215525,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"Color","qualname":"::graphics::types::Color","value":"Color { r, g, b, a }","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063}],"decl_id":null,"docs":" A RGBA color in the `sRGB` color space represented as `f32`'s in the range `[0.0-1.0]`\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215509,"byte_end":215686,"line_start":136,"line_end":145,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1057},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215558,"byte_end":215559,"line_start":138,"line_end":138,"column_start":9,"column_end":10},"name":"r","qualname":"::graphics::types::Color::r","value":"f32","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Red component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215598,"byte_end":215599,"line_start":140,"line_end":140,"column_start":9,"column_end":10},"name":"g","qualname":"::graphics::types::Color::g","value":"f32","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Green component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215637,"byte_end":215638,"line_start":142,"line_end":142,"column_start":9,"column_end":10},"name":"b","qualname":"::graphics::types::Color::b","value":"f32","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Blue component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1063},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215677,"byte_end":215678,"line_start":144,"line_end":144,"column_start":9,"column_end":10},"name":"a","qualname":"::graphics::types::Color::a","value":"f32","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Alpha component\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1370},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215708,"byte_end":215713,"line_start":148,"line_end":148,"column_start":11,"column_end":16},"name":"WHITE","qualname":"::graphics::types::WHITE","value":"Color","parent":null,"children":[],"decl_id":null,"docs":" White\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1372},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215803,"byte_end":215808,"line_start":156,"line_end":156,"column_start":11,"column_end":16},"name":"BLACK","qualname":"::graphics::types::BLACK","value":"Color","parent":null,"children":[],"decl_id":null,"docs":" Black\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215968,"byte_end":215971,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<Color>::new","value":"fn (r: f32, g: f32, b: f32, a: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Color from four f32's in the range [0.0-1.0]\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":216126,"byte_end":216135,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Color>::from_rgba","value":"fn (r: u8, g: u8, b: u8, a: u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Create a new Color from four u8's in the range `[0-255]`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":216349,"byte_end":216357,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Color>::from_rgb","value":"fn (r: u8, g: u8, b: u8) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Create a new Color from three u8's in the range `[0-255]`,\n with the alpha component fixed to 255 (opaque)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":216535,"byte_end":216542,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<Color>::to_rgba","value":"fn (self) -> (u8, u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple of four u8's in the range `[0-255]` with the Color's\n components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":216706,"byte_end":216712,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<Color>::to_rgb","value":"fn (self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple of three u8's in the range `[0-255]` with the Color's\n components.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":216844,"byte_end":216857,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"from_rgba_u32","qualname":"<Color>::from_rgba_u32","value":"fn (c: u32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Convert a packed u32 containing 0xRRGGBBAA into a Color.conf\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":217290,"byte_end":217302,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"from_rgb_u32","qualname":"<Color>::from_rgb_u32","value":"fn (c: u32) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Convert a packed u32 containing 0x00RRGGBB into a Color.\n This lets you do things like `Color::from_rgb_u32(0xCD09AA)` easily if you want.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":217599,"byte_end":217610,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"to_rgba_u32","qualname":"<Color>::to_rgba_u32","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a Color into a packed u32, containing 0xRRGGBBAA as bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":217952,"byte_end":217962,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"to_rgb_u32","qualname":"<Color>::to_rgb_u32","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a Color into a packed u32, containing 0x00RRGGBB as bytes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1065},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220166,"byte_end":220167,"line_start":291,"line_end":291,"column_start":9,"column_end":10},"name":"r","qualname":"::graphics::types::LinearColor::r","value":"f32","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Red component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220206,"byte_end":220207,"line_start":293,"line_end":293,"column_start":9,"column_end":10},"name":"g","qualname":"::graphics::types::LinearColor::g","value":"f32","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Green component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1069},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220245,"byte_end":220246,"line_start":295,"line_end":295,"column_start":9,"column_end":10},"name":"b","qualname":"::graphics::types::LinearColor::b","value":"f32","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Blue component\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1071},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220285,"byte_end":220286,"line_start":297,"line_end":297,"column_start":9,"column_end":10},"name":"a","qualname":"::graphics::types::LinearColor::a","value":"f32","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Alpha component\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1073},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221602,"byte_end":221606,"line_start":351,"line_end":351,"column_start":5,"column_end":9},"name":"Line","qualname":"::graphics::types::DrawMode::Line","value":"DrawMode::Line(f32)","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" A stroked line with the given width\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221641,"byte_end":221645,"line_start":353,"line_end":353,"column_start":5,"column_end":9},"name":"Fill","qualname":"::graphics::types::DrawMode::Fill","value":"DrawMode::Fill","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" A filled shape.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2822},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221543,"byte_end":221551,"line_start":349,"line_end":349,"column_start":10,"column_end":18},"name":"DrawMode","qualname":"::graphics::types::DrawMode","value":"DrawMode::{Line, Fill}","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1077}],"decl_id":null,"docs":" Specifies whether a shape should be drawn\n filled or as an outline.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221534,"byte_end":221648,"line_start":349,"line_end":354,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1079},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221810,"byte_end":221816,"line_start":360,"line_end":360,"column_start":5,"column_end":11},"name":"Linear","qualname":"::graphics::types::FilterMode::Linear","value":"FilterMode::Linear","parent":{"krate":0,"index":2834},"children":[],"decl_id":null,"docs":" Use linear interpolation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221865,"byte_end":221872,"line_start":362,"line_end":362,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::graphics::types::FilterMode::Nearest","value":"FilterMode::Nearest","parent":{"krate":0,"index":2834},"children":[],"decl_id":null,"docs":" Use nearest-neighbor interpolation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2834},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221760,"byte_end":221770,"line_start":358,"line_end":358,"column_start":10,"column_end":20},"name":"FilterMode","qualname":"::graphics::types::FilterMode","value":"FilterMode::{Linear, Nearest}","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081}],"decl_id":null,"docs":" Specifies what blending method to use when scaling up/down images.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221751,"byte_end":221875,"line_start":358,"line_end":363,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":1446},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":222408,"byte_end":222416,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"name":"WrapMode","qualname":"::graphics::types::WrapMode","value":"gfx::texture::WrapMode","parent":null,"children":[],"decl_id":null,"docs":" Specifies how to wrap textures.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1450},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spritebatch","qualname":"::graphics::spritebatch","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/graphics/spritebatch.rs","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1472},{"krate":0,"index":2846},{"krate":0,"index":2852},{"krate":0,"index":2848},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2862},{"krate":0,"index":2902},{"krate":0,"index":2898},{"krate":0,"index":2894},{"krate":0,"index":2888},{"krate":0,"index":2884},{"krate":0,"index":2872},{"krate":0,"index":2868},{"krate":0,"index":2864},{"krate":0,"index":1474},{"krate":0,"index":1498},{"krate":0,"index":1506}],"decl_id":null,"docs":" A `SpriteBatch` is a way to efficiently draw a large\n number of copies of the same image, or part of the same image.  It's\n useful for implementing tiled maps, spritesheets, particles, and\n other such things.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":226363,"byte_end":226374,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"SpriteBatch","qualname":"::graphics::spritebatch::SpriteBatch","value":"SpriteBatch {  }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087}],"decl_id":null,"docs":" A `SpriteBatch` draws a number of copies of the same image, using a single draw call.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":226868,"byte_end":226884,"line_start":43,"line_end":43,"column_start":12,"column_end":28},"name":"BoundSpriteBatch","qualname":"::graphics::spritebatch::BoundSpriteBatch","value":"BoundSpriteBatch {  }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1093}],"decl_id":null,"docs":" A drawable combination of a `SpriteBatch` and a specific `Image`.\n It is not always convenient for a `SpriteBatch` to own the image\n it is drawing, so this structure lets you override the image with\n a borrowed one.","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":226826,"byte_end":226839,"line_start":41,"line_end":41,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2862},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227093,"byte_end":227102,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"SpriteIdx","qualname":"::graphics::spritebatch::SpriteIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index of a particular sprite in a `SpriteBatch`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227082,"byte_end":227110,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227082,"byte_end":227110,"line_start":50,"line_end":50,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227373,"byte_end":227376,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<SpriteBatch>::new","value":"fn (image: graphics::Image) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpriteBatch`, drawing with the given image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227663,"byte_end":227666,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"add","qualname":"<SpriteBatch>::add","value":"fn (&mut self, param: graphics::DrawParam) -> SpriteIdx","parent":null,"children":[],"decl_id":null,"docs":" Adds a new sprite to the sprite batch.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227881,"byte_end":227884,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"set","qualname":"<SpriteBatch>::set","value":"fn (&mut self, handle: SpriteIdx, param: graphics::DrawParam) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Alters a sprite in the batch to use the given draw params\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":230418,"byte_end":230423,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"clear","qualname":"<SpriteBatch>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all data from the sprite batch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":230523,"byte_end":230533,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SpriteBatch>::into_inner","value":"fn (self) -> graphics::Image","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the contained `Image`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":230661,"byte_end":230670,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"set_image","qualname":"<SpriteBatch>::set_image","value":"fn (&mut self, image: graphics::Image) -> graphics::Image","parent":null,"children":[],"decl_id":null,"docs":" Replaces the contained `Image`, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":230861,"byte_end":230871,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"get_filter","qualname":"<SpriteBatch>::get_filter","value":"fn (&self) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the filter mode for the SpriteBatch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":230994,"byte_end":231004,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<SpriteBatch>::set_filter","value":"fn (&mut self, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the filter mode for the SpriteBatch.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":231220,"byte_end":231230,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"with_image","qualname":"<SpriteBatch>::with_image","value":"fn <'a> (&'a mut self, image: &'a graphics::Image) -> BoundSpriteBatch<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create an object which draws the current sprite batch with a different image.\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":231170,"byte_end":231183,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"allow(deprecated)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":231188,"byte_end":231208,"line_start":164,"line_end":164,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1532},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67092,"byte_end":67103,"line_start":61,"line_end":61,"column_start":11,"column_end":22},"name":"BackendSpec","qualname":"::graphics::BackendSpec","value":"BackendSpec: fmt::Debug","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544}],"decl_id":null,"docs":" A marker trait saying that something is a label for a particular backend,\n with associated gfx-rs types for that backend.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67148,"byte_end":67159,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"name":"SurfaceType","qualname":"::graphics::BackendSpec::SurfaceType","value":"type SurfaceType: gfx::format::Formatted;","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Surface type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1536},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67220,"byte_end":67229,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"Resources","qualname":"::graphics::BackendSpec::Resources","value":"type Resources: gfx::Resources;","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" gfx resource type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1538},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67281,"byte_end":67288,"line_start":67,"line_end":67,"column_start":10,"column_end":17},"name":"Factory","qualname":"::graphics::BackendSpec::Factory","value":"type Factory: gfx::Factory<Self::Resources>;","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" gfx factory type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1540},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67362,"byte_end":67375,"line_start":69,"line_end":69,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::graphics::BackendSpec::CommandBuffer","value":"type CommandBuffer: gfx::CommandBuffer<Self::Resources>;","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" gfx command buffer type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1542},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67447,"byte_end":67453,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Device","qualname":"::graphics::BackendSpec::Device","value":"type Device: gfx::Device<Resources = Self::Resources, CommandBuffer = Self::CommandBuffer>;","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" gfx device type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67690,"byte_end":67718,"line_start":75,"line_end":75,"column_start":8,"column_end":36},"name":"raw_to_typed_shader_resource","qualname":"::graphics::BackendSpec::raw_to_typed_shader_resource","value":"fn (texture_view: gfx::handle::RawShaderResourceView<Self::Resources>) -> gfx::handle::ShaderResourceView<<Self as BackendSpec>::Resources,\n                                <<Self as BackendSpec>::SurfaceType as\n                                gfx::format::Formatted>::View>","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" A helper function to take a RawShaderResourceView and turn it into a typed one based on\n the surface type defined in a `BackendSpec`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":68744,"byte_end":68757,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"GlBackendSpec","qualname":"::graphics::GlBackendSpec","value":"GlBackendSpec {  }","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1105}],"decl_id":null,"docs":" A backend specification for OpenGL.\n This is different from `conf::Backend` because\n this needs to be its own struct to implement traits upon,\n and because there may need to be a layer of translation\n between what the user specifies in the config, and what the\n graphics backend init code actually gets.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":68733,"byte_end":68839,"line_start":100,"line_end":105,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":68733,"byte_end":68839,"line_start":100,"line_end":105,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":72116,"byte_end":72128,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"SamplerCache","qualname":"::graphics::SamplerCache","value":"SamplerCache {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" A structure for conveniently storing Sampler's, based off\n their `SamplerInfo`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1590},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":73657,"byte_end":73663,"line_start":269,"line_end":269,"column_start":10,"column_end":16},"name":"Result","qualname":"::graphics::TransformRawRenderTargetViewToRenderTargetView::Result","value":"type Result;","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1592},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":73721,"byte_end":73726,"line_start":273,"line_end":273,"column_start":8,"column_end":13},"name":"clear","qualname":"::graphics::clear","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the screen to the background color.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1596},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":74281,"byte_end":74285,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::draw","value":"fn (ctx: &mut Context, drawable: &Drawable, dest: Point2, rotation: f32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws the given `Drawable` object to the screen by calling its\n `draw()` method.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1598},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":74511,"byte_end":74518,"line_start":290,"line_end":290,"column_start":8,"column_end":15},"name":"draw_ex","qualname":"::graphics::draw_ex","value":"fn (ctx: &mut Context, drawable: &Drawable, params: DrawParam) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws the given `Drawable` object to the screen by calling its `draw_ex()` method.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1600},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":74815,"byte_end":74822,"line_start":298,"line_end":298,"column_start":8,"column_end":15},"name":"present","qualname":"::graphics::present","value":"fn (ctx: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Tells the graphics system to actually put everything on the screen.\n Call this at the end of your `EventHandler`'s `draw()` method.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1602},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":75413,"byte_end":75423,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"screenshot","qualname":"::graphics::screenshot","value":"fn (ctx: &mut Context) -> GameResult<Image>","parent":null,"children":[],"decl_id":null,"docs":" Take a screenshot by outputting the current render surface\n (screen or selected canvas) to a PNG file.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1606},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":77940,"byte_end":77946,"line_start":399,"line_end":399,"column_start":8,"column_end":14},"name":"circle","qualname":"::graphics::circle","value":"fn (ctx: &mut Context, mode: DrawMode, point: Point2, radius: f32, tolerance: f32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draw a circle.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1608},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":78468,"byte_end":78475,"line_start":416,"line_end":416,"column_start":8,"column_end":15},"name":"ellipse","qualname":"::graphics::ellipse","value":"fn (ctx: &mut Context, mode: DrawMode, point: Point2, radius1: f32, radius2: f32, tolerance: f32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draw an ellipse.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1610},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":78937,"byte_end":78941,"line_start":432,"line_end":432,"column_start":8,"column_end":12},"name":"line","qualname":"::graphics::line","value":"fn (ctx: &mut Context, points: &[Point2], width: f32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws a line of one or more connected segments.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1612},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":79283,"byte_end":79289,"line_start":441,"line_end":441,"column_start":8,"column_end":14},"name":"points","qualname":"::graphics::points","value":"fn (ctx: &mut Context, points: &[Point2], point_size: f32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws points (as rectangles)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1614},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":79686,"byte_end":79693,"line_start":453,"line_end":453,"column_start":8,"column_end":15},"name":"polygon","qualname":"::graphics::polygon","value":"fn (ctx: &mut Context, mode: DrawMode, vertices: &[Point2]) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws a closed polygon","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1616},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":80485,"byte_end":80494,"line_start":474,"line_end":474,"column_start":8,"column_end":17},"name":"rectangle","qualname":"::graphics::rectangle","value":"fn (ctx: &mut Context, mode: DrawMode, rect: Rect) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Draws a rectangle.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1618},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":81051,"byte_end":81071,"line_start":493,"line_end":493,"column_start":8,"column_end":28},"name":"get_background_color","qualname":"::graphics::get_background_color","value":"fn (ctx: &Context) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the current background color.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1620},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":81187,"byte_end":81196,"line_start":498,"line_end":498,"column_start":8,"column_end":17},"name":"get_color","qualname":"::graphics::get_color","value":"fn (ctx: &Context) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the current foreground color.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1622},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":81318,"byte_end":81336,"line_start":503,"line_end":503,"column_start":8,"column_end":26},"name":"get_default_filter","qualname":"::graphics::get_default_filter","value":"fn (ctx: &Context) -> FilterMode","parent":null,"children":[],"decl_id":null,"docs":" Get the default filter mode for new images.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1624},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":81633,"byte_end":81650,"line_start":511,"line_end":511,"column_start":8,"column_end":25},"name":"get_renderer_info","qualname":"::graphics::get_renderer_info","value":"fn (ctx: &Context) -> GameResult<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string that tells a little about the obtained rendering mode.\n It is supposed to be human-readable and will change; do not try to parse\n information out of it!\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1626},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":82289,"byte_end":82311,"line_start":531,"line_end":531,"column_start":8,"column_end":30},"name":"get_screen_coordinates","qualname":"::graphics::get_screen_coordinates","value":"fn (ctx: &Context) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle defining the coordinate system of the screen.\n It will be `Rect { x: left, y: top, w: width, h: height }`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1628},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":82426,"byte_end":82446,"line_start":536,"line_end":536,"column_start":8,"column_end":28},"name":"set_background_color","qualname":"::graphics::set_background_color","value":"fn (ctx: &mut Context, color: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the background color.  Default: blue.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1630},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":82645,"byte_end":82654,"line_start":542,"line_end":542,"column_start":8,"column_end":17},"name":"set_color","qualname":"::graphics::set_color","value":"fn (ctx: &mut Context, color: Color) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the foreground color, which will be used for drawing\n rectangles, lines, etc.  Default: white.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1632},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":82923,"byte_end":82941,"line_start":551,"line_end":551,"column_start":8,"column_end":26},"name":"set_default_filter","qualname":"::graphics::set_default_filter","value":"fn (ctx: &mut Context, mode: FilterMode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the default filter mode used to scale images.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1634},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":83891,"byte_end":83913,"line_start":571,"line_end":571,"column_start":8,"column_end":30},"name":"set_screen_coordinates","qualname":"::graphics::set_screen_coordinates","value":"fn (context: &mut Context, rect: Rect) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the bounds of the screen viewport.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1636},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":84344,"byte_end":84358,"line_start":583,"line_end":583,"column_start":8,"column_end":22},"name":"set_projection","qualname":"::graphics::set_projection","value":"fn (context: &mut Context, proj: Matrix4) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw projection matrix to the given homogeneous\n transformation matrix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":84704,"byte_end":84724,"line_start":592,"line_end":592,"column_start":8,"column_end":28},"name":"transform_projection","qualname":"::graphics::transform_projection","value":"fn (context: &mut Context, transform: Matrix4) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Premultiplies the given transformation matrix with the current projection matrix","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1640},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":84954,"byte_end":84968,"line_start":599,"line_end":599,"column_start":8,"column_end":22},"name":"get_projection","qualname":"::graphics::get_projection","value":"fn (context: &Context) -> Matrix4","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the context's raw projection matrix\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":85542,"byte_end":85556,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"push_transform","qualname":"::graphics::push_transform","value":"fn (context: &mut Context, transform: Option<Matrix4>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a homogeneous transform matrix to the top of the transform\n (model) matrix stack of the `Context`. If no matrix is given, then\n pushes a copy of the current transform matrix to the top of the stack.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1644},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":86143,"byte_end":86156,"line_start":630,"line_end":630,"column_start":8,"column_end":21},"name":"pop_transform","qualname":"::graphics::pop_transform","value":"fn (context: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pops the transform matrix off the top of the transform\n (model) matrix stack of the `Context`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1646},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":86605,"byte_end":86618,"line_start":643,"line_end":643,"column_start":8,"column_end":21},"name":"set_transform","qualname":"::graphics::set_transform","value":"fn (context: &mut Context, transform: Matrix4) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current model transformation to the given homogeneous\n transformation matrix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1648},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":86806,"byte_end":86819,"line_start":649,"line_end":649,"column_start":8,"column_end":21},"name":"get_transform","qualname":"::graphics::get_transform","value":"fn (context: &Context) -> Matrix4","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the context's current transform matrix\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1650},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":87248,"byte_end":87257,"line_start":661,"line_end":661,"column_start":8,"column_end":17},"name":"transform","qualname":"::graphics::transform","value":"fn (context: &mut Context, transform: Matrix4) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Premultiplies the given transform with the current model transform.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1652},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":87651,"byte_end":87657,"line_start":671,"line_end":671,"column_start":8,"column_end":14},"name":"origin","qualname":"::graphics::origin","value":"fn (context: &mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current model transform to the origin transform (no transformation)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":87968,"byte_end":87989,"line_start":679,"line_end":679,"column_start":8,"column_end":29},"name":"apply_transformations","qualname":"::graphics::apply_transformations","value":"fn (context: &mut Context) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the new total transformation (Model-View-Projection) matrix\n based on the matrices at the top of the transform and view matrix stacks\n and sends it to the graphics card.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1656},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":88209,"byte_end":88223,"line_start":686,"line_end":686,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::set_blend_mode","value":"fn (ctx: &mut Context, mode: BlendMode) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend mode of the currently active shader program\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1658},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":88694,"byte_end":88702,"line_start":696,"line_end":696,"column_start":8,"column_end":16},"name":"set_mode","qualname":"::graphics::set_mode","value":"fn (context: &mut Context, mode: WindowMode) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the window mode, such as the size and other properties.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1660},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":89048,"byte_end":89062,"line_start":709,"line_end":709,"column_start":8,"column_end":22},"name":"set_fullscreen","qualname":"::graphics::set_fullscreen","value":"fn (context: &mut Context, fullscreen: bool) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Toggles the fullscreen state of the window subsystem","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1662},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":89484,"byte_end":89497,"line_start":724,"line_end":724,"column_start":8,"column_end":21},"name":"is_fullscreen","qualname":"::graphics::is_fullscreen","value":"fn (context: &mut Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Queries the fullscreen state of the window subsystem.\n If true, then the game is running in fullscreen mode.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":89723,"byte_end":89737,"line_start":731,"line_end":731,"column_start":8,"column_end":22},"name":"set_resolution","qualname":"::graphics::set_resolution","value":"fn (context: &mut Context, width: u32, height: u32) -> GameResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the window resolution based on the specified width and height","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1666},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":90095,"byte_end":90115,"line_start":740,"line_end":740,"column_start":8,"column_end":28},"name":"get_fullscreen_modes","qualname":"::graphics::get_fullscreen_modes","value":"fn (context: &Context, display_idx: i32) -> GameResult<Vec<(u32, u32)>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Vec` of `(width, height)` tuples describing what\n fullscreen resolutions are available for the given display.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1668},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":90673,"byte_end":90690,"line_start":755,"line_end":755,"column_start":8,"column_end":25},"name":"get_display_count","qualname":"::graphics::get_display_count","value":"fn (context: &Context) -> GameResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of connected displays.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1670},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":91067,"byte_end":91077,"line_start":764,"line_end":764,"column_start":8,"column_end":18},"name":"get_window","qualname":"::graphics::get_window","value":"fn (context: &Context) -> &sdl2::video::Window","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the SDL window.\n Ideally you should not need to use this because ggez\n would provide all the functions you need without having\n to dip into SDL itself.  But life isn't always ideal.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":91236,"byte_end":91250,"line_start":770,"line_end":770,"column_start":8,"column_end":22},"name":"get_window_mut","qualname":"::graphics::get_window_mut","value":"fn (context: &mut Context) -> &mut sdl2::video::Window","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the SDL window.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1674},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":91439,"byte_end":91447,"line_start":776,"line_end":776,"column_start":8,"column_end":16},"name":"get_size","qualname":"::graphics::get_size","value":"fn (context: &Context) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the window in pixels as (width, height).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1676},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":91739,"byte_end":91756,"line_start":783,"line_end":783,"column_start":8,"column_end":25},"name":"get_drawable_size","qualname":"::graphics::get_drawable_size","value":"fn (context: &Context) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the window's underlying drawable in pixels as (width, height).\n This may return a different value than `get_size()` when run on a platform with high-DPI support\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1678},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":91939,"byte_end":91950,"line_start":789,"line_end":789,"column_start":8,"column_end":19},"name":"get_factory","qualname":"::graphics::get_factory","value":"fn (context: &mut Context) -> &mut gfx_device_gl::Factory","parent":null,"children":[],"decl_id":null,"docs":" Returns the gfx-rs `Factory` object for ggez's rendering context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1680},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":92147,"byte_end":92157,"line_start":795,"line_end":795,"column_start":8,"column_end":18},"name":"get_device","qualname":"::graphics::get_device","value":"fn (context: &mut Context) -> &mut gfx_device_gl::Device","parent":null,"children":[],"decl_id":null,"docs":" Returns the gfx-rs `Device` object for ggez's rendering context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1682},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":92357,"byte_end":92368,"line_start":801,"line_end":801,"column_start":8,"column_end":19},"name":"get_encoder","qualname":"::graphics::get_encoder","value":"fn (context: &mut Context) -> &mut gfx::Encoder<gfx_device_gl::Resources, gfx_device_gl::CommandBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Returns the gfx-rs `Encoder` object for ggez's rendering context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":92622,"byte_end":92636,"line_start":809,"line_end":809,"column_start":8,"column_end":22},"name":"get_depth_view","qualname":"::graphics::get_depth_view","value":"fn (context: &mut Context) -> gfx::handle::RawDepthStencilView<gfx_device_gl::Resources>","parent":null,"children":[],"decl_id":null,"docs":" Returns the gfx-rs depth target object for ggez's rendering context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1686},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":92881,"byte_end":92905,"line_start":817,"line_end":817,"column_start":8,"column_end":32},"name":"get_screen_render_target","qualname":"::graphics::get_screen_render_target","value":"fn (context: &Context) -> gfx::handle::RawRenderTargetView<gfx_device_gl::Resources>","parent":null,"children":[],"decl_id":null,"docs":" Returns the gfx-rs color target object for ggez's rendering context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1688},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":93385,"byte_end":93400,"line_start":830,"line_end":830,"column_start":8,"column_end":23},"name":"get_gfx_objects","qualname":"::graphics::get_gfx_objects","value":"fn (context: &mut Context) -> (&mut <GlBackendSpec as BackendSpec>::Factory,\n &mut <GlBackendSpec as BackendSpec>::Device,\n &mut gfx::Encoder<<GlBackendSpec as BackendSpec>::Resources,\n                   <GlBackendSpec as BackendSpec>::CommandBuffer>,\n gfx::handle::RawDepthStencilView<<GlBackendSpec as BackendSpec>::Resources>,\n gfx::handle::RawRenderTargetView<<GlBackendSpec as BackendSpec>::Resources>)","parent":null,"children":[],"decl_id":null,"docs":" Returns raw `gfx-rs` state objects, if you want to use `gfx-rs` to write\n your own graphics pipeline then this gets you the interfaces you need\n to do so.\n Returns all the relevant objects at once;\n getting them one by one is awkward 'cause it tends to create double-borrows\n on the Context object.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1690},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":94155,"byte_end":94163,"line_start":852,"line_end":852,"column_start":11,"column_end":19},"name":"Drawable","qualname":"::graphics::Drawable","value":"Drawable","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698}],"decl_id":null,"docs":" All types that can be drawn on the screen implement the `Drawable` trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":94356,"byte_end":94363,"line_start":857,"line_end":857,"column_start":8,"column_end":15},"name":"draw_ex","qualname":"::graphics::Drawable::draw_ex","value":"fn (&self, ctx: &mut Context, param: DrawParam) -> GameResult<()>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":" Actually draws the object to the screen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":94847,"byte_end":94851,"line_start":868,"line_end":868,"column_start":8,"column_end":12},"name":"draw","qualname":"::graphics::Drawable::draw","value":"fn (&self, ctx: &mut Context, dest: Point2, rotation: f32) -> GameResult<()>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":" Draws the drawable onto the rendering target.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":95342,"byte_end":95356,"line_start":883,"line_end":883,"column_start":8,"column_end":22},"name":"set_blend_mode","qualname":"::graphics::Drawable::set_blend_mode","value":"fn (&mut self, mode: Option<BlendMode>) -> ()","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":" Sets the blend mode to be used when drawing this drawable.\n This overrides the general `graphics::set_blend_mode()`.\n If `None` is set, defers to the blend mode set by\n `graphics::set_blend_mode()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":95469,"byte_end":95483,"line_start":886,"line_end":886,"column_start":8,"column_end":22},"name":"get_blend_mode","qualname":"::graphics::Drawable::get_blend_mode","value":"fn (&self) -> Option<BlendMode>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":" Gets the blend mode to be used when drawing this drawable.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1700},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"input","qualname":"::input","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/input.rs","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1722},{"krate":0,"index":1726}],"decl_id":null,"docs":" Misc. input functions, currently just for handling gamepads.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1716},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235592,"byte_end":235606,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"GamepadContext","qualname":"::input::GamepadContext","value":"GamepadContext {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":393}],"decl_id":null,"docs":" To use gamepads (or joysticks) we need to \"open\" them\n and keep them around, so this structure hangs on to\n their state for us.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":236039,"byte_end":236042,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<GamepadContext>::new","value":"fn (sdl_context: &Sdl) -> GameResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create new GamepadContext\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1726},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":236835,"byte_end":236846,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"get_gamepad","qualname":"::input::get_gamepad","value":"fn (ctx: &Context, instance_id: i32) -> Option<&GameController>","parent":null,"children":[],"decl_id":null,"docs":" returns the `GameController` associated with an instance id.\n The `instance_id` can be obtained from `GamepadEvents` in the `EventHandler`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1728},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mouse","qualname":"::mouse","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/mouse.rs","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":3130},{"krate":0,"index":3136},{"krate":0,"index":3132},{"krate":0,"index":1738},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758}],"decl_id":null,"docs":" Mouse utility functions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237186,"byte_end":237198,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"MouseContext","qualname":"::mouse::MouseContext","value":"MouseContext {  }","parent":null,"children":[{"krate":0,"index":1255}],"decl_id":null,"docs":" Stores state information for the mouse,\n what little of it there is.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237300,"byte_end":237303,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<MouseContext>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MouseContext`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1748},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237664,"byte_end":237675,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"get_grabbed","qualname":"::mouse::get_grabbed","value":"fn (ctx: &Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether or not the mouse is \"grabbed\", ie, confined to the window.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1750},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237823,"byte_end":237834,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"set_grabbed","qualname":"::mouse::set_grabbed","value":"fn (ctx: &mut Context, grabbed: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the mouse is \"grabbed\", ie, confined to the window.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1752},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":238197,"byte_end":238214,"line_start":49,"line_end":49,"column_start":8,"column_end":25},"name":"get_relative_mode","qualname":"::mouse::get_relative_mode","value":"fn (ctx: &Context) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether or not the mouse is in relative mode.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1754},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":238564,"byte_end":238581,"line_start":58,"line_end":58,"column_start":8,"column_end":25},"name":"set_relative_mode","qualname":"::mouse::set_relative_mode","value":"fn (ctx: &Context, mode: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the mouse is in relative mode.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1756},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":238819,"byte_end":238831,"line_start":65,"line_end":65,"column_start":8,"column_end":20},"name":"get_position","qualname":"::mouse::get_position","value":"fn (ctx: &Context) -> GameResult<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Get the current position of the mouse cursor, in pixels.\n Complement to `set_position()`.\n Uses strictly window-only coordinates.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1758},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":239098,"byte_end":239110,"line_start":72,"line_end":72,"column_start":8,"column_end":20},"name":"set_position","qualname":"::mouse::set_position","value":"fn (ctx: &Context, point: Point2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current position of the mouse cursor, in pixels.\n Uses strictly window-only coordinates.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1760},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/finch/.cargo/git/checkouts/ggez-a47dcb84b0414bcd/f21ece9/src/timer.rs","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":3140},{"krate":0,"index":3146},{"krate":0,"index":3142},{"krate":0,"index":1772},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816}],"decl_id":null,"docs":" Timing and measurement functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3150},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":241722,"byte_end":241733,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"TimeContext","qualname":"::timer::TimeContext","value":"TimeContext {  }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277}],"decl_id":null,"docs":" A structure that contains our time-tracking state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":242107,"byte_end":242110,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<TimeContext>::new","value":"fn () -> TimeContext","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimeContext` and initializes the start to this instant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":242763,"byte_end":242767,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"tick","qualname":"<TimeContext>::tick","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the state of the TimeContext to record that\n another frame has taken place.  Necessary for the FPS\n tracking and `check_update_time()` functions to work.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1794},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":243272,"byte_end":243281,"line_start":129,"line_end":129,"column_start":8,"column_end":17},"name":"get_delta","qualname":"::timer::get_delta","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Get the time between the start of the last frame and the current one;\n in other words, the length of the last frame.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1796},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":243469,"byte_end":243486,"line_start":136,"line_end":136,"column_start":8,"column_end":25},"name":"get_average_delta","qualname":"::timer::get_average_delta","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Gets the average time of a frame, averaged\n over the last 200 frames.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1798},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":243951,"byte_end":243966,"line_start":151,"line_end":151,"column_start":8,"column_end":23},"name":"duration_to_f64","qualname":"::timer::duration_to_f64","value":"fn (d: time::Duration) -> f64","parent":null,"children":[],"decl_id":null,"docs":" A convenience function to convert a Rust `Duration` type\n to a (less precise but more useful) f64.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1800},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":244273,"byte_end":244288,"line_start":161,"line_end":161,"column_start":8,"column_end":23},"name":"f64_to_duration","qualname":"::timer::f64_to_duration","value":"fn (t: f64) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" A convenience function to create a Rust `Duration` type\n from a (less precise but more useful) f64.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1804},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":244846,"byte_end":244853,"line_start":179,"line_end":179,"column_start":8,"column_end":15},"name":"get_fps","qualname":"::timer::get_fps","value":"fn (ctx: &Context) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Gets the FPS of the game, averaged over the last\n 200 frames.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1806},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":245124,"byte_end":245144,"line_start":187,"line_end":187,"column_start":8,"column_end":28},"name":"get_time_since_start","qualname":"::timer::get_time_since_start","value":"fn (ctx: &Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time since the game was initialized,\n as reported by the system clock.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1808},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":245999,"byte_end":246016,"line_start":212,"line_end":212,"column_start":8,"column_end":25},"name":"check_update_time","qualname":"::timer::check_update_time","value":"fn (ctx: &mut Context, target_fps: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This function will return true if the time since the\n last `update()` call has been equal to or greater to\n the update FPS indicated by the `target_fps`.\n It keeps track of fractional frames, so if you want\n 60 fps (16.67 ms/frame) and the game stutters so that\n there is 40 ms between `update()` calls, this will return\n `true` twice, and take the remaining 6.67 ms into account\n in the next frame.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1810},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":246883,"byte_end":246908,"line_start":235,"line_end":235,"column_start":8,"column_end":33},"name":"get_remaining_update_time","qualname":"::timer::get_remaining_update_time","value":"fn (ctx: &mut Context) -> time::Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional amount of a frame not consumed\n by  `check_update_time()`.  For example, if the desired\n update frame time is 40 ms (25 fps), and 45 ms have\n passed since the last frame, `check_update_time()` will\n return `true` and `get_remaining_update_time()` will\n return 5 ms -- the amount of time \"overflowing\" from one\n frame to the next.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1812},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":247156,"byte_end":247161,"line_start":242,"line_end":242,"column_start":8,"column_end":13},"name":"sleep","qualname":"::timer::sleep","value":"fn (duration: time::Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses the current thread for the target duration.\n Just calls `std::thread::sleep()` so it's as accurate\n as that is (which is usually not very).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1814},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":247357,"byte_end":247366,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"yield_now","qualname":"::timer::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields the current timeslice to the OS.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1816},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":247573,"byte_end":247582,"line_start":258,"line_end":258,"column_start":8,"column_end":17},"name":"get_ticks","qualname":"::timer::get_ticks","value":"fn (ctx: &Context) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of times the game has gone through its event loop.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1860},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248603,"byte_end":248608,"line_start":30,"line_end":30,"column_start":11,"column_end":16},"name":"VFile","qualname":"::vfs::VFile","value":"VFile: Read + Write + Seek + Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248924,"byte_end":248935,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::vfs::OpenOptions","value":"OpenOptions {  }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287}],"decl_id":null,"docs":" Options for opening files","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248913,"byte_end":249028,"line_start":43,"line_end":49,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249090,"byte_end":249093,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249183,"byte_end":249187,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Open for reading\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249315,"byte_end":249320,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Open for writing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249475,"byte_end":249481,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Create the file if it does not exist yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249628,"byte_end":249634,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Append at the end of the file\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249794,"byte_end":249802,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Truncate the file to 0 bytes after opening\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6160,"byte_end":6172,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6543,"byte_end":6555,"line_start":40,"line_end":40,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6814,"byte_end":6823,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7613,"byte_end":7622,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7732,"byte_end":7741,"line_start":84,"line_end":84,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7844,"byte_end":7853,"line_start":90,"line_end":90,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7954,"byte_end":7963,"line_start":96,"line_end":96,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":8830,"byte_end":8836,"line_start":121,"line_end":121,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":11361,"byte_end":11367,"line_start":211,"line_end":211,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12545,"byte_end":12559,"line_start":31,"line_end":31,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12868,"byte_end":12885,"line_start":41,"line_end":41,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14573,"byte_end":14583,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16844,"byte_end":16855,"line_start":176,"line_end":176,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18720,"byte_end":18730,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19744,"byte_end":19748,"line_start":287,"line_end":287,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22552,"byte_end":22559,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":23805,"byte_end":23812,"line_start":95,"line_end":95,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28359,"byte_end":28373,"line_start":226,"line_end":226,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":31100,"byte_end":31107,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33568,"byte_end":33577,"line_start":51,"line_end":51,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34115,"byte_end":34124,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35397,"byte_end":35406,"line_start":98,"line_end":98,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35532,"byte_end":35541,"line_start":104,"line_end":104,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35683,"byte_end":35692,"line_start":110,"line_end":110,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36115,"byte_end":36124,"line_start":122,"line_end":122,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36684,"byte_end":36693,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36884,"byte_end":36893,"line_start":144,"line_end":144,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37068,"byte_end":37077,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37196,"byte_end":37205,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37408,"byte_end":37417,"line_start":164,"line_end":164,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37639,"byte_end":37648,"line_start":171,"line_end":171,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37850,"byte_end":37859,"line_start":178,"line_end":178,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38048,"byte_end":38057,"line_start":185,"line_end":185,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38294,"byte_end":38303,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38703,"byte_end":38712,"line_start":204,"line_end":204,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38918,"byte_end":38927,"line_start":211,"line_end":211,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39167,"byte_end":39176,"line_start":222,"line_end":222,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39397,"byte_end":39406,"line_start":229,"line_end":229,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39558,"byte_end":39567,"line_start":235,"line_end":235,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39712,"byte_end":39721,"line_start":241,"line_end":241,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39866,"byte_end":39875,"line_start":247,"line_end":247,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":40126,"byte_end":40135,"line_start":257,"line_end":257,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46107,"byte_end":46113,"line_start":170,"line_end":170,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46231,"byte_end":46237,"line_start":176,"line_end":176,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52032,"byte_end":52036,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52323,"byte_end":52327,"line_start":75,"line_end":75,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52505,"byte_end":52509,"line_start":83,"line_end":83,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52805,"byte_end":52815,"line_start":97,"line_end":97,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":96960,"byte_end":96966,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":672},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":99615,"byte_end":99621,"line_start":121,"line_end":121,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102564,"byte_end":102586,"line_start":61,"line_end":61,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102784,"byte_end":102806,"line_start":71,"line_end":71,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":103195,"byte_end":103210,"line_start":85,"line_end":85,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118263,"byte_end":118272,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118591,"byte_end":118600,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120994,"byte_end":120999,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":826},{"krate":0,"index":830},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129871,"byte_end":129876,"line_start":285,"line_end":285,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":130208,"byte_end":130213,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134544,"byte_end":134555,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134669,"byte_end":134680,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":143202,"byte_end":143215,"line_start":280,"line_end":280,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":143458,"byte_end":143471,"line_start":289,"line_end":289,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":144026,"byte_end":144030,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":145797,"byte_end":145801,"line_start":367,"line_end":367,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147232,"byte_end":147242,"line_start":31,"line_end":31,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147337,"byte_end":147347,"line_start":37,"line_end":37,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148693,"byte_end":148698,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":151278,"byte_end":151284,"line_start":128,"line_end":128,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":154898,"byte_end":154904,"line_start":253,"line_end":253,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":157664,"byte_end":157677,"line_start":341,"line_end":341,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158110,"byte_end":158123,"line_start":357,"line_end":357,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":159022,"byte_end":159035,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":160228,"byte_end":160238,"line_start":424,"line_end":424,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":161546,"byte_end":161555,"line_start":468,"line_end":468,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":162051,"byte_end":162060,"line_start":490,"line_end":490,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":166255,"byte_end":166265,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":167466,"byte_end":167470,"line_start":76,"line_end":76,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":179909,"byte_end":179913,"line_start":398,"line_end":398,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":185597,"byte_end":185617,"line_start":553,"line_end":553,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":186215,"byte_end":186235,"line_start":569,"line_end":569,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":187707,"byte_end":187711,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189757,"byte_end":189761,"line_start":683,"line_end":683,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":190095,"byte_end":190099,"line_start":695,"line_end":695,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195958,"byte_end":195970,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196170,"byte_end":196182,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196353,"byte_end":196365,"line_start":59,"line_end":59,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196597,"byte_end":196609,"line_start":69,"line_end":69,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196904,"byte_end":196916,"line_start":83,"line_end":83,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197111,"byte_end":197123,"line_start":92,"line_end":92,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197373,"byte_end":197385,"line_start":102,"line_end":102,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197695,"byte_end":197704,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197908,"byte_end":197912,"line_start":126,"line_end":126,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":198203,"byte_end":198216,"line_start":142,"line_end":142,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":198873,"byte_end":198883,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":199320,"byte_end":199330,"line_start":181,"line_end":181,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":199749,"byte_end":199759,"line_start":195,"line_end":195,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":211101,"byte_end":211111,"line_start":500,"line_end":500,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212584,"byte_end":212588,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215164,"byte_end":215168,"line_start":122,"line_end":122,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215883,"byte_end":215888,"line_start":163,"line_end":163,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218209,"byte_end":218214,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218611,"byte_end":218616,"line_start":242,"line_end":242,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218910,"byte_end":218915,"line_start":251,"line_end":251,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220317,"byte_end":220328,"line_start":300,"line_end":300,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220885,"byte_end":220890,"line_start":321,"line_end":321,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221947,"byte_end":221957,"line_start":368,"line_end":368,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":222160,"byte_end":222172,"line_start":377,"line_end":377,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227117,"byte_end":227128,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":231427,"byte_end":231443,"line_start":172,"line_end":172,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":233344,"byte_end":233355,"line_start":222,"line_end":222,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":68870,"byte_end":68883,"line_start":107,"line_end":107,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":69061,"byte_end":69074,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":71079,"byte_end":71097,"line_start":183,"line_end":183,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":71440,"byte_end":71458,"line_start":196,"line_end":196,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":72252,"byte_end":72264,"line_start":223,"line_end":223,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":72752,"byte_end":72761,"line_start":245,"line_end":245,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235837,"byte_end":235851,"line_start":23,"line_end":23,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235977,"byte_end":235991,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237236,"byte_end":237248,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237511,"byte_end":237523,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":240505,"byte_end":240514,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":242003,"byte_end":242014,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":243071,"byte_end":243082,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248660,"byte_end":248661,"line_start":32,"line_end":32,"column_start":19,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249035,"byte_end":249046,"line_start":51,"line_end":51,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":252692,"byte_end":252708,"line_start":168,"line_end":168,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":254165,"byte_end":254175,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":255442,"byte_end":255452,"line_start":258,"line_end":258,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":255611,"byte_end":255621,"line_start":264,"line_end":264,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":260070,"byte_end":260079,"line_start":396,"line_end":396,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":260650,"byte_end":260659,"line_start":421,"line_end":421,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":264565,"byte_end":264570,"line_start":546,"line_end":546,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":265669,"byte_end":265683,"line_start":581,"line_end":581,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":265907,"byte_end":265921,"line_start":591,"line_end":591,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266044,"byte_end":266058,"line_start":597,"line_end":597,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266260,"byte_end":266274,"line_start":607,"line_end":607,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266394,"byte_end":266408,"line_start":613,"line_end":613,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266642,"byte_end":266653,"line_start":626,"line_end":626,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":267469,"byte_end":267480,"line_start":651,"line_end":651,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":267665,"byte_end":267670,"line_start":663,"line_end":663,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5335,"byte_end":5340,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":38}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5350,"byte_end":5354,"line_start":127,"line_end":127,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5377,"byte_end":5382,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":284}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5392,"byte_end":5397,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":404}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5407,"byte_end":5417,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":514}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5427,"byte_end":5435,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":598}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":66703,"byte_end":66714,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1450}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5445,"byte_end":5450,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1700}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5460,"byte_end":5465,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1728}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5475,"byte_end":5480,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1760}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6160,"byte_end":6172,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6543,"byte_end":6555,"line_start":40,"line_end":40,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":58},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":6814,"byte_end":6823,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7613,"byte_end":7622,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7732,"byte_end":7741,"line_start":84,"line_end":84,"column_start":24,"column_end":33},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7844,"byte_end":7853,"line_start":90,"line_end":90,"column_start":26,"column_end":35},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":7954,"byte_end":7963,"line_start":96,"line_end":96,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2606}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":8830,"byte_end":8836,"line_start":121,"line_end":121,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,97,117,100,105,111,46,114,115],"byte_start":11361,"byte_end":11367,"line_start":211,"line_end":211,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12545,"byte_end":12559,"line_start":31,"line_end":31,"column_start":34,"column_end":48},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":12868,"byte_end":12885,"line_start":41,"line_end":41,"column_start":31,"column_end":48},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":45,"index":3798},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":14573,"byte_end":14583,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":2128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":16844,"byte_end":16855,"line_start":176,"line_end":176,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":2208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":18720,"byte_end":18730,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":2388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,102,46,114,115],"byte_start":19744,"byte_end":19748,"line_start":287,"line_end":287,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":2460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":22552,"byte_end":22559,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":226},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":23805,"byte_end":23812,"line_start":95,"line_end":95,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":28359,"byte_end":28373,"line_start":226,"line_end":226,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":2530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,99,111,110,116,101,120,116,46,114,115],"byte_start":31100,"byte_end":31107,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":2536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33568,"byte_end":33577,"line_start":51,"line_end":51,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34115,"byte_end":34124,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35397,"byte_end":35406,"line_start":98,"line_end":98,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35532,"byte_end":35541,"line_start":104,"line_end":104,"column_start":42,"column_end":51},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":35683,"byte_end":35692,"line_start":110,"line_end":110,"column_start":40,"column_end":49},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36115,"byte_end":36124,"line_start":122,"line_end":122,"column_start":48,"column_end":57},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36684,"byte_end":36693,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36884,"byte_end":36893,"line_start":144,"line_end":144,"column_start":29,"column_end":38},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37068,"byte_end":37077,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37196,"byte_end":37205,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37408,"byte_end":37417,"line_start":164,"line_end":164,"column_start":33,"column_end":42},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37639,"byte_end":37648,"line_start":171,"line_end":171,"column_start":38,"column_end":47},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":37850,"byte_end":37859,"line_start":178,"line_end":178,"column_start":29,"column_end":38},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38048,"byte_end":38057,"line_start":185,"line_end":185,"column_start":34,"column_end":43},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38294,"byte_end":38303,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38703,"byte_end":38712,"line_start":204,"line_end":204,"column_start":36,"column_end":45},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":38918,"byte_end":38927,"line_start":211,"line_end":211,"column_start":43,"column_end":52},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39167,"byte_end":39176,"line_start":222,"line_end":222,"column_start":35,"column_end":44},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39397,"byte_end":39406,"line_start":229,"line_end":229,"column_start":44,"column_end":53},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39558,"byte_end":39567,"line_start":235,"line_end":235,"column_start":39,"column_end":48},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39712,"byte_end":39721,"line_start":241,"line_end":241,"column_start":37,"column_end":46},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":39866,"byte_end":39875,"line_start":247,"line_end":247,"column_start":39,"column_end":48},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":40126,"byte_end":40135,"line_start":257,"line_end":257,"column_start":41,"column_end":50},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46107,"byte_end":46113,"line_start":170,"line_end":170,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":498},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,101,118,101,110,116,46,114,115],"byte_start":46231,"byte_end":46237,"line_start":176,"line_end":176,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52032,"byte_end":52036,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":542},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52323,"byte_end":52327,"line_start":75,"line_end":75,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":542},"to":{"krate":1,"index":4264}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52505,"byte_end":52509,"line_start":83,"line_end":83,"column_start":20,"column_end":24},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":542},"to":{"krate":1,"index":4296}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,102,105,108,101,115,121,115,116,101,109,46,114,115],"byte_start":52805,"byte_end":52815,"line_start":97,"line_end":97,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":2564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":96960,"byte_end":96966,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,97,110,118,97,115,46,114,115],"byte_start":99615,"byte_end":99621,"line_start":121,"line_end":121,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":662},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102564,"byte_end":102586,"line_start":61,"line_end":61,"column_start":12,"column_end":34},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":102784,"byte_end":102806,"line_start":71,"line_end":71,"column_start":27,"column_end":49},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":712},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,99,111,110,116,101,120,116,46,114,115],"byte_start":103195,"byte_end":103210,"line_start":85,"line_end":85,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118263,"byte_end":118272,"line_start":34,"line_end":34,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":2576},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,100,114,97,119,112,97,114,97,109,46,114,115],"byte_start":118591,"byte_end":118600,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":2576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":120994,"byte_end":120999,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":129871,"byte_end":129876,"line_start":285,"line_end":285,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":808},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,105,109,97,103,101,46,114,115],"byte_start":130208,"byte_end":130213,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":808},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134544,"byte_end":134555,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":134669,"byte_end":134680,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":143202,"byte_end":143215,"line_start":280,"line_end":280,"column_start":54,"column_end":67},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":902},"to":{"krate":66,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":143458,"byte_end":143471,"line_start":289,"line_end":289,"column_start":56,"column_end":69},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":902},"to":{"krate":66,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":144026,"byte_end":144030,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":2630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,101,115,104,46,114,115],"byte_start":145797,"byte_end":145801,"line_start":367,"line_end":367,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":2630},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147232,"byte_end":147242,"line_start":31,"line_end":31,"column_start":26,"column_end":36},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":2646},"to":{"krate":12,"index":536}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":147337,"byte_end":147347,"line_start":37,"line_end":37,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":2646},"to":{"krate":18,"index":1028}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":148693,"byte_end":148698,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":16,"index":668},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":151278,"byte_end":151284,"line_start":128,"line_end":128,"column_start":15,"column_end":21},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":154898,"byte_end":154904,"line_start":253,"line_end":253,"column_start":9,"column_end":15},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":157664,"byte_end":157677,"line_start":341,"line_end":341,"column_start":30,"column_end":43},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158110,"byte_end":158123,"line_start":357,"line_end":357,"column_start":30,"column_end":43},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1018},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":158531,"byte_end":158536,"line_start":369,"line_end":369,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":7730},"to":{"krate":0,"index":1024}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":159022,"byte_end":159035,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1018},"to":{"krate":0,"index":1024}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":160228,"byte_end":160238,"line_start":424,"line_end":424,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":2688},"to":{"krate":2,"index":1998}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":161546,"byte_end":161555,"line_start":468,"line_end":468,"column_start":36,"column_end":45},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":2704},"to":{"krate":12,"index":1052}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,104,97,100,101,114,46,114,115],"byte_start":162051,"byte_end":162060,"line_start":490,"line_end":490,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":2710},"to":{"krate":12,"index":1046}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":166255,"byte_end":166265,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":167466,"byte_end":167470,"line_start":76,"line_end":76,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":2716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":179909,"byte_end":179913,"line_start":398,"line_end":398,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":2716},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":185597,"byte_end":185617,"line_start":553,"line_end":553,"column_start":23,"column_end":43},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":186215,"byte_end":186235,"line_start":569,"line_end":569,"column_start":10,"column_end":30},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":187707,"byte_end":187711,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":2732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":189757,"byte_end":189761,"line_start":683,"line_end":683,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":2732},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,46,114,115],"byte_start":190095,"byte_end":190099,"line_start":695,"line_end":695,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":2732},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":195958,"byte_end":195970,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196170,"byte_end":196182,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196353,"byte_end":196365,"line_start":59,"line_end":59,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196597,"byte_end":196609,"line_start":69,"line_end":69,"column_start":40,"column_end":52},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":196904,"byte_end":196916,"line_start":83,"line_end":83,"column_start":28,"column_end":40},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197111,"byte_end":197123,"line_start":92,"line_end":92,"column_start":37,"column_end":49},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197373,"byte_end":197385,"line_start":102,"line_end":102,"column_start":45,"column_end":57},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197695,"byte_end":197704,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":2576},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":197908,"byte_end":197912,"line_start":126,"line_end":126,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":2716},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":198203,"byte_end":198216,"line_start":142,"line_end":142,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":198873,"byte_end":198883,"line_start":167,"line_end":167,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":2564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":199320,"byte_end":199330,"line_start":181,"line_end":181,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":199749,"byte_end":199759,"line_start":195,"line_end":195,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":2758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,101,120,116,95,99,97,99,104,101,100,46,114,115],"byte_start":211101,"byte_end":211111,"line_start":500,"line_end":500,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":2758},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":212584,"byte_end":212588,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215164,"byte_end":215168,"line_start":122,"line_end":122,"column_start":25,"column_end":29},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":215883,"byte_end":215888,"line_start":163,"line_end":163,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":2786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218209,"byte_end":218214,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218611,"byte_end":218616,"line_start":242,"line_end":242,"column_start":29,"column_end":34},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":218910,"byte_end":218915,"line_start":251,"line_end":251,"column_start":25,"column_end":30},"kind":{"variant":"Impl","fields":[102]},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220317,"byte_end":220328,"line_start":300,"line_end":300,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":2804},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":220885,"byte_end":220890,"line_start":321,"line_end":321,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[104]},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":221947,"byte_end":221957,"line_start":368,"line_end":368,"column_start":29,"column_end":39},"kind":{"variant":"Impl","fields":[105]},"from":{"krate":0,"index":2834},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,116,121,112,101,115,46,114,115],"byte_start":222160,"byte_end":222172,"line_start":377,"line_end":377,"column_start":27,"column_end":39},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":18,"index":6574},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":227117,"byte_end":227128,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[107]},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":231427,"byte_end":231443,"line_start":172,"line_end":172,"column_start":33,"column_end":49},"kind":{"variant":"Impl","fields":[108]},"from":{"krate":0,"index":2856},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,98,97,116,99,104,46,114,115],"byte_start":233344,"byte_end":233355,"line_start":222,"line_end":222,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":0,"index":2846},"to":{"krate":0,"index":1690}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":67110,"byte_end":67115,"line_start":61,"line_end":61,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":7730},"to":{"krate":0,"index":1532}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":68870,"byte_end":68883,"line_start":107,"line_end":107,"column_start":30,"column_end":43},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":2904},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":69061,"byte_end":69074,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":2904},"to":{"krate":0,"index":1532}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":71079,"byte_end":71097,"line_start":183,"line_end":183,"column_start":18,"column_end":36},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":71440,"byte_end":71458,"line_start":196,"line_end":196,"column_start":26,"column_end":44},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":72252,"byte_end":72264,"line_start":223,"line_end":223,"column_start":9,"column_end":21},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,103,114,97,112,104,105,99,115,47,109,111,100,46,114,115],"byte_start":72752,"byte_end":72761,"line_start":245,"line_end":245,"column_start":43,"column_end":52},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235837,"byte_end":235851,"line_start":23,"line_end":23,"column_start":21,"column_end":35},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":0,"index":1716},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":235977,"byte_end":235991,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":1716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237236,"byte_end":237248,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[118]},"from":{"krate":0,"index":3130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,109,111,117,115,101,46,114,115],"byte_start":237511,"byte_end":237523,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[119]},"from":{"krate":0,"index":3130},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":240505,"byte_end":240514,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[120]},"from":{"krate":0,"index":3140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":242003,"byte_end":242014,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[121]},"from":{"krate":0,"index":3150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,116,105,109,101,114,46,114,115],"byte_start":243071,"byte_end":243082,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[122]},"from":{"krate":0,"index":3150},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248610,"byte_end":248614,"line_start":30,"line_end":30,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":4264},"to":{"krate":0,"index":1860}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248617,"byte_end":248622,"line_start":30,"line_end":30,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":4296},"to":{"krate":0,"index":1860}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248625,"byte_end":248629,"line_start":30,"line_end":30,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":4314},"to":{"krate":0,"index":1860}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248632,"byte_end":248637,"line_start":30,"line_end":30,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":7730},"to":{"krate":0,"index":1860}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":248660,"byte_end":248661,"line_start":32,"line_end":32,"column_start":19,"column_end":20},"kind":{"variant":"Impl","fields":[123]},"from":{"krate":0,"index":401},"to":{"krate":0,"index":1860}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":249035,"byte_end":249046,"line_start":51,"line_end":51,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[124]},"from":{"krate":0,"index":3156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":250237,"byte_end":250242,"line_start":99,"line_end":99,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":7730},"to":{"krate":0,"index":1880}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":252692,"byte_end":252708,"line_start":168,"line_end":168,"column_start":20,"column_end":36},"kind":{"variant":"Impl","fields":[125]},"from":{"krate":0,"index":3184},"to":{"krate":0,"index":1904}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":254165,"byte_end":254175,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[126]},"from":{"krate":0,"index":3178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":255442,"byte_end":255452,"line_start":258,"line_end":258,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[127]},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":255611,"byte_end":255621,"line_start":264,"line_end":264,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[128]},"from":{"krate":0,"index":3178},"to":{"krate":0,"index":1880}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":260070,"byte_end":260079,"line_start":396,"line_end":396,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[129]},"from":{"krate":0,"index":3194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":260650,"byte_end":260659,"line_start":421,"line_end":421,"column_start":14,"column_end":23},"kind":{"variant":"Impl","fields":[130]},"from":{"krate":0,"index":3194},"to":{"krate":0,"index":1880}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":264565,"byte_end":264570,"line_start":546,"line_end":546,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[131]},"from":{"krate":0,"index":3200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":265669,"byte_end":265683,"line_start":581,"line_end":581,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[132]},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":265907,"byte_end":265921,"line_start":591,"line_end":591,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[133]},"from":{"krate":0,"index":3206},"to":{"krate":1,"index":4264}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266044,"byte_end":266058,"line_start":597,"line_end":597,"column_start":20,"column_end":34},"kind":{"variant":"Impl","fields":[134]},"from":{"krate":0,"index":3206},"to":{"krate":1,"index":4296}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266260,"byte_end":266274,"line_start":607,"line_end":607,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[135]},"from":{"krate":0,"index":3206},"to":{"krate":1,"index":4314}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266394,"byte_end":266408,"line_start":613,"line_end":613,"column_start":16,"column_end":30},"kind":{"variant":"Impl","fields":[136]},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":7730}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":266642,"byte_end":266653,"line_start":626,"line_end":626,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[137]},"from":{"krate":0,"index":3212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":267469,"byte_end":267480,"line_start":651,"line_end":651,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[138]},"from":{"krate":0,"index":3212},"to":{"krate":0,"index":1904}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,103,105,116,47,99,104,101,99,107,111,117,116,115,47,103,103,101,122,45,97,52,55,100,99,98,56,52,98,48,52,49,52,98,99,100,47,102,50,49,101,99,101,57,47,115,114,99,47,118,102,115,46,114,115],"byte_start":267665,"byte_end":267670,"line_start":663,"line_end":663,"column_start":14,"column_end":19},"kind":{"variant":"Impl","fields":[139]},"from":{"krate":0,"index":3200},"to":{"krate":0,"index":1880}}]}