{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"ogg","disambiguator":[9281107331316722350,12664064622217373135]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","num":10,"id":{"name":"byteorder","disambiguator":[14438063634380407648,1727586884181737438]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":38214,"line_start":9,"line_end":1111,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":38214,"line_start":9,"line_end":1111,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/ogg-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":26},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":116},{"krate":0,"index":124},{"krate":0,"index":120},{"krate":0,"index":118},{"krate":0,"index":98},{"krate":0,"index":108}],"decl_id":null,"docs":"Ogg container decoder and encoder","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":259,"byte_end":280,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"allow(unused_parens)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":316,"byte_end":340,"line_start":11,"line_end":11,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":111},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5704,"byte_end":5725,"line_start":150,"line_end":150,"column_start":2,"column_end":23},"name":"NoCapturePatternFound","qualname":"::OggReadError::NoCapturePatternFound","value":"OggReadError::NoCapturePatternFound","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The capture pattern for a new page was not found\n where one was expected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":113},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5801,"byte_end":5823,"line_start":153,"line_end":153,"column_start":2,"column_end":24},"name":"InvalidStreamStructVer","qualname":"::OggReadError::InvalidStreamStructVer","value":"OggReadError::InvalidStreamStructVer(u8)","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Invalid stream structure version, with the given one\n attached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5897,"byte_end":5909,"line_start":155,"line_end":155,"column_start":2,"column_end":14},"name":"HashMismatch","qualname":"::OggReadError::HashMismatch","value":"OggReadError::HashMismatch(u32, u32)","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Mismatch of the hash value with (expected, calculated) value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":123},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5946,"byte_end":5955,"line_start":157,"line_end":157,"column_start":2,"column_end":11},"name":"ReadError","qualname":"::OggReadError::ReadError","value":"OggReadError::ReadError(std::io::Error)","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" I/O error occured.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":127},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6029,"byte_end":6040,"line_start":159,"line_end":159,"column_start":2,"column_end":13},"name":"InvalidData","qualname":"::OggReadError::InvalidData","value":"OggReadError::InvalidData","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Some constraint required by the spec was not met.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5605,"byte_end":5617,"line_start":147,"line_end":147,"column_start":10,"column_end":22},"name":"OggReadError","qualname":"::OggReadError","value":"OggReadError::{NoCapturePatternFound, InvalidStreamStructVer, HashMismatch, ReadError, InvalidData}","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":123},{"krate":0,"index":127}],"decl_id":null,"docs":" Error that can be raised when decoding an Ogg transport.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7125,"byte_end":7133,"line_start":198,"line_end":198,"column_start":10,"column_end":18},"name":"IoResult","qualname":"::IoResult","value":"result::Result<T, std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Ogg version of the `std::io::Result` type.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7673,"byte_end":7679,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"Packet","qualname":"::Packet","value":"Packet { data, first_packet, last_packet, absgp_page, stream_serial }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29}],"decl_id":null,"docs":"Ogg packet representation.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7723,"byte_end":7727,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"name":"data","qualname":"::Packet::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" The data the `Packet` contains\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7814,"byte_end":7826,"line_start":213,"line_end":213,"column_start":6,"column_end":18},"name":"first_packet","qualname":"::Packet::first_packet","value":"bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" `true` iff this packet is the first one in the logical bitstream.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7908,"byte_end":7919,"line_start":215,"line_end":215,"column_start":6,"column_end":17},"name":"last_packet","qualname":"::Packet::last_packet","value":"bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" `true` iff this packet is the last one in the logical bitstream\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":27},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8074,"byte_end":8084,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"name":"absgp_page","qualname":"::Packet::absgp_page","value":"u64","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Absolute granule position of the last page the packet was in.\n The meaning of the absolute granule position is defined by the codec.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":29},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8160,"byte_end":8173,"line_start":220,"line_end":220,"column_start":6,"column_end":19},"name":"stream_serial","qualname":"::Packet::stream_serial","value":"u32","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Serial number. Uniquely identifying the logical bitstream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10871,"byte_end":10883,"line_start":286,"line_end":286,"column_start":12,"column_end":24},"name":"PacketReader","qualname":"::PacketReader","value":"PacketReader {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59}],"decl_id":null,"docs":"Reader for packets from an Ogg stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11839,"byte_end":11842,"line_start":308,"line_end":308,"column_start":9,"column_end":12},"name":"new","qualname":"<PacketReader<T>>::new","value":"fn (rdr: T) -> PacketReader<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `PacketReader` with a given `Read`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11994,"byte_end":12004,"line_start":312,"line_end":312,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PacketReader<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12088,"byte_end":12099,"line_start":316,"line_end":316,"column_start":9,"column_end":20},"name":"read_packet","qualname":"<PacketReader<T>>::read_packet","value":"fn (&mut self) -> Result<Packet, OggReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reads a packet, and returns it on success.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25655,"byte_end":25665,"line_start":716,"line_end":716,"column_start":9,"column_end":19},"name":"seek_bytes","qualname":"<PacketReader<T>>::seek_bytes","value":"fn (&mut self, pos: SeekFrom) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Seeks the underlying reader","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26055,"byte_end":26067,"line_start":732,"line_end":732,"column_start":12,"column_end":24},"name":"PacketWriter","qualname":"::PacketWriter","value":"PacketWriter {  }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89}],"decl_id":null,"docs":"Writer for packets into an Ogg stream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27624,"byte_end":27636,"line_start":784,"line_end":784,"column_start":2,"column_end":14},"name":"NormalPacket","qualname":"::PacketWriteEndInfo::NormalPacket","value":"PacketWriteEndInfo::NormalPacket","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" No ends here, just a normal packet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":131},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27671,"byte_end":27678,"line_start":786,"line_end":786,"column_start":2,"column_end":9},"name":"EndPage","qualname":"::PacketWriteEndInfo::EndPage","value":"PacketWriteEndInfo::EndPage","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" Force-end the current page\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":133},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27716,"byte_end":27725,"line_start":788,"line_end":788,"column_start":2,"column_end":11},"name":"EndStream","qualname":"::PacketWriteEndInfo::EndStream","value":"PacketWriteEndInfo::EndStream","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" End the whole logical stream.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27562,"byte_end":27580,"line_start":782,"line_end":782,"column_start":10,"column_end":28},"name":"PacketWriteEndInfo","qualname":"::PacketWriteEndInfo","value":"PacketWriteEndInfo::{NormalPacket, EndPage, EndStream}","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"decl_id":null,"docs":" Specifies whether to end something with the write of the packet.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27553,"byte_end":27728,"line_start":782,"line_end":789,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27776,"byte_end":27779,"line_start":792,"line_end":792,"column_start":9,"column_end":12},"name":"new","qualname":"<PacketWriter<T>>::new","value":"fn (wtr: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27883,"byte_end":27893,"line_start":798,"line_end":798,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PacketWriter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27959,"byte_end":27971,"line_start":804,"line_end":804,"column_start":9,"column_end":21},"name":"write_packet","qualname":"<PacketWriter<T>>::write_packet","value":"fn (&mut self, pck_cont: Rc<[u8]>, serial: u32, inf: PacketWriteEndInfo, absgp: u64) -> IoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a packet","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6072,"byte_end":6084,"line_start":162,"line_end":162,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6672,"byte_end":6684,"line_start":182,"line_end":182,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6860,"byte_end":6872,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9760,"byte_end":9768,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11754,"byte_end":11766,"line_start":306,"line_end":306,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27750,"byte_end":27762,"line_start":791,"line_end":791,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6072,"byte_end":6084,"line_start":162,"line_end":162,"column_start":28,"column_end":40},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":110},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6672,"byte_end":6684,"line_start":182,"line_end":182,"column_start":28,"column_end":40},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":110},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6860,"byte_end":6872,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":110},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9760,"byte_end":9768,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11754,"byte_end":11766,"line_start":306,"line_end":306,"column_start":30,"column_end":42},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,103,103,45,48,46,52,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27750,"byte_end":27762,"line_start":791,"line_end":791,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}}]}