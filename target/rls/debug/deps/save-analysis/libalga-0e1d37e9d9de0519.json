{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"alga","disambiguator":[1653964578025287319,14871484964014010487]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":10,"id":{"name":"approx","disambiguator":[6631750352163537324,6920142491406799587]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":11,"id":{"name":"num_complex","disambiguator":[6810041517253359695,3749048568698899420]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":12,"id":{"name":"num_traits","disambiguator":[2584151480832829812,14924738239749212241]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":13,"id":{"name":"serde","disambiguator":[4747145166383964478,10492233300533012407]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","num":14,"id":{"name":"num_traits","disambiguator":[17789237823785518920,1720329206679913962]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":620,"byte_end":988,"line_start":15,"line_end":33,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11088,"byte_end":11096,"line_start":159,"line_end":159,"column_start":26,"column_end":34},"alias_span":null,"name":"Additive","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11098,"byte_end":11107,"line_start":159,"line_end":159,"column_start":36,"column_end":45},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11109,"byte_end":11118,"line_start":159,"line_end":159,"column_start":47,"column_end":56},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11120,"byte_end":11129,"line_start":159,"line_end":159,"column_start":58,"column_end":67},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11131,"byte_end":11140,"line_start":159,"line_end":159,"column_start":69,"column_end":78},"alias_span":null,"name":"ClosedNeg","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11142,"byte_end":11151,"line_start":159,"line_end":159,"column_start":80,"column_end":89},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11153,"byte_end":11160,"line_start":159,"line_end":159,"column_start":91,"column_end":98},"alias_span":null,"name":"Inverse","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":1938},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11187,"byte_end":11201,"line_start":160,"line_end":160,"column_start":26,"column_end":40},"alias_span":null,"name":"Multiplicative","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11203,"byte_end":11211,"line_start":160,"line_end":160,"column_start":42,"column_end":50},"alias_span":null,"name":"Operator","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11239,"byte_end":11241,"line_start":161,"line_end":161,"column_start":26,"column_end":28},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11243,"byte_end":11251,"line_start":161,"line_end":161,"column_start":30,"column_end":38},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11277,"byte_end":11285,"line_start":162,"line_end":162,"column_start":24,"column_end":32},"alias_span":null,"name":"SubsetOf","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11287,"byte_end":11297,"line_start":162,"line_end":162,"column_start":34,"column_end":44},"alias_span":null,"name":"SupersetOf","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11330,"byte_end":11343,"line_start":164,"line_end":164,"column_start":30,"column_end":43},"alias_span":null,"name":"AbstractGroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11345,"byte_end":11365,"line_start":164,"line_end":164,"column_start":45,"column_end":65},"alias_span":null,"name":"AbstractGroupAbelian","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11367,"byte_end":11379,"line_start":164,"line_end":164,"column_start":67,"column_end":79},"alias_span":null,"name":"AbstractLoop","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11381,"byte_end":11394,"line_start":164,"line_end":164,"column_start":81,"column_end":94},"alias_span":null,"name":"AbstractMagma","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11425,"byte_end":11439,"line_start":165,"line_end":165,"column_start":30,"column_end":44},"alias_span":null,"name":"AbstractMonoid","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11441,"byte_end":11459,"line_start":165,"line_end":165,"column_start":46,"column_end":64},"alias_span":null,"name":"AbstractQuasigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11461,"byte_end":11478,"line_start":165,"line_end":165,"column_start":66,"column_end":83},"alias_span":null,"name":"AbstractSemigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11511,"byte_end":11524,"line_start":166,"line_end":166,"column_start":31,"column_end":44},"alias_span":null,"name":"AbstractField","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11526,"byte_end":11538,"line_start":166,"line_end":166,"column_start":46,"column_end":58},"alias_span":null,"name":"AbstractRing","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11540,"byte_end":11563,"line_start":166,"line_end":166,"column_start":60,"column_end":83},"alias_span":null,"name":"AbstractRingCommutative","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11588,"byte_end":11602,"line_start":167,"line_end":167,"column_start":23,"column_end":37},"alias_span":null,"name":"AbstractModule","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11628,"byte_end":11643,"line_start":168,"line_end":168,"column_start":25,"column_end":40},"alias_span":null,"name":"JoinSemilattice","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11645,"byte_end":11652,"line_start":168,"line_end":168,"column_start":42,"column_end":49},"alias_span":null,"name":"Lattice","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11654,"byte_end":11669,"line_start":168,"line_end":168,"column_start":51,"column_end":66},"alias_span":null,"name":"MeetSemilattice","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11700,"byte_end":11713,"line_start":169,"line_end":169,"column_start":29,"column_end":42},"alias_span":null,"name":"AdditiveGroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3262},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11715,"byte_end":11735,"line_start":169,"line_end":169,"column_start":44,"column_end":64},"alias_span":null,"name":"AdditiveGroupAbelian","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3246},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11737,"byte_end":11749,"line_start":169,"line_end":169,"column_start":66,"column_end":78},"alias_span":null,"name":"AdditiveLoop","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3238},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11751,"byte_end":11764,"line_start":169,"line_end":169,"column_start":80,"column_end":93},"alias_span":null,"name":"AdditiveMagma","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3254},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11794,"byte_end":11808,"line_start":170,"line_end":170,"column_start":29,"column_end":43},"alias_span":null,"name":"AdditiveMonoid","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3242},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11810,"byte_end":11828,"line_start":170,"line_end":170,"column_start":45,"column_end":63},"alias_span":null,"name":"AdditiveQuasigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3250},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11830,"byte_end":11847,"line_start":170,"line_end":170,"column_start":65,"column_end":82},"alias_span":null,"name":"AdditiveSemigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3302},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11849,"byte_end":11854,"line_start":170,"line_end":170,"column_start":84,"column_end":89},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11856,"byte_end":11862,"line_start":170,"line_end":170,"column_start":91,"column_end":97},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3286},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11892,"byte_end":11911,"line_start":171,"line_end":171,"column_start":29,"column_end":48},"alias_span":null,"name":"MultiplicativeGroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11913,"byte_end":11939,"line_start":171,"line_end":171,"column_start":50,"column_end":76},"alias_span":null,"name":"MultiplicativeGroupAbelian","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11941,"byte_end":11959,"line_start":171,"line_end":171,"column_start":78,"column_end":96},"alias_span":null,"name":"MultiplicativeLoop","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11989,"byte_end":12008,"line_start":172,"line_end":172,"column_start":29,"column_end":48},"alias_span":null,"name":"MultiplicativeMagma","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12010,"byte_end":12030,"line_start":172,"line_end":172,"column_start":50,"column_end":70},"alias_span":null,"name":"MultiplicativeMonoid","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3270},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12032,"byte_end":12056,"line_start":172,"line_end":172,"column_start":72,"column_end":96},"alias_span":null,"name":"MultiplicativeQuasigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3278},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12086,"byte_end":12109,"line_start":173,"line_end":173,"column_start":29,"column_end":52},"alias_span":null,"name":"MultiplicativeSemigroup","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12111,"byte_end":12115,"line_start":173,"line_end":173,"column_start":54,"column_end":58},"alias_span":null,"name":"Ring","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3298},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12117,"byte_end":12132,"line_start":173,"line_end":173,"column_start":60,"column_end":75},"alias_span":null,"name":"RingCommutative","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12155,"byte_end":12159,"line_start":174,"line_end":174,"column_start":21,"column_end":25},"alias_span":null,"name":"Real","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70486,"byte_end":70497,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"AffineSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70499,"byte_end":70513,"line_start":3,"line_end":3,"column_start":37,"column_end":51},"alias_span":null,"name":"EuclideanSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70515,"byte_end":70534,"line_start":3,"line_end":3,"column_start":53,"column_end":72},"alias_span":null,"name":"FiniteDimInnerSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1102},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70536,"byte_end":70556,"line_start":3,"line_end":3,"column_start":74,"column_end":94},"alias_span":null,"name":"FiniteDimVectorSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70581,"byte_end":70591,"line_start":4,"line_end":4,"column_start":24,"column_end":34},"alias_span":null,"name":"InnerSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70593,"byte_end":70604,"line_start":4,"line_end":4,"column_start":36,"column_end":47},"alias_span":null,"name":"NormedSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70606,"byte_end":70617,"line_start":4,"line_end":4,"column_start":49,"column_end":60},"alias_span":null,"name":"VectorSpace","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70651,"byte_end":70671,"line_start":5,"line_end":5,"column_start":32,"column_end":52},"alias_span":null,"name":"AffineTransformation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70673,"byte_end":70687,"line_start":5,"line_end":5,"column_start":54,"column_end":68},"alias_span":null,"name":"DirectIsometry","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1242},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70689,"byte_end":70697,"line_start":5,"line_end":5,"column_start":70,"column_end":78},"alias_span":null,"name":"Isometry","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70730,"byte_end":70754,"line_start":6,"line_end":6,"column_start":32,"column_end":56},"alias_span":null,"name":"OrthogonalTransformation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70756,"byte_end":70780,"line_start":6,"line_end":6,"column_start":58,"column_end":82},"alias_span":null,"name":"ProjectiveTransformation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70782,"byte_end":70790,"line_start":6,"line_end":6,"column_start":84,"column_end":92},"alias_span":null,"name":"Rotation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1248},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70823,"byte_end":70830,"line_start":7,"line_end":7,"column_start":32,"column_end":39},"alias_span":null,"name":"Scaling","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70832,"byte_end":70842,"line_start":7,"line_end":7,"column_start":41,"column_end":51},"alias_span":null,"name":"Similarity","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70844,"byte_end":70858,"line_start":7,"line_end":7,"column_start":53,"column_end":67},"alias_span":null,"name":"Transformation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1258},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70860,"byte_end":70871,"line_start":7,"line_end":7,"column_start":69,"column_end":80},"alias_span":null,"name":"Translation","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70897,"byte_end":70919,"line_start":8,"line_end":8,"column_start":24,"column_end":46},"alias_span":null,"name":"InversibleSquareMatrix","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1344},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70921,"byte_end":70927,"line_start":8,"line_end":8,"column_start":48,"column_end":54},"alias_span":null,"name":"Matrix","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70929,"byte_end":70938,"line_start":8,"line_end":8,"column_start":56,"column_end":65},"alias_span":null,"name":"MatrixMut","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70940,"byte_end":70952,"line_start":8,"line_end":8,"column_start":67,"column_end":79},"alias_span":null,"name":"SquareMatrix","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1396},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":70954,"byte_end":70969,"line_start":8,"line_end":8,"column_start":81,"column_end":96},"alias_span":null,"name":"SquareMatrixMut","value":"","parent":{"krate":0,"index":982}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":620,"byte_end":988,"line_start":15,"line_end":33,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":982}],"decl_id":null,"docs":" Traits for algebra.\n","sig":null,"attributes":[{"value":"deny(non_camel_case_types)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":647,"byte_end":677,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":679,"byte_end":702,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":704,"byte_end":736,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"deny(unused_results)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":738,"byte_end":762,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":764,"byte_end":786,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"general","qualname":"::general","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":88},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":212},{"krate":0,"index":262},{"krate":0,"index":282},{"krate":0,"index":488},{"krate":0,"index":576},{"krate":0,"index":740},{"krate":0,"index":770},{"krate":0,"index":818},{"krate":0,"index":870}],"decl_id":null,"docs":" Fundamental algebraic structures.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12635,"byte_end":12648,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"AbstractMagma","qualname":"::general::one_operator::AbstractMagma","value":"AbstractMagma<O: Operator>: Sized + Clone","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" Types that are closed under a given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12717,"byte_end":12724,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"operate","qualname":"::general::one_operator::AbstractMagma::operate","value":"fn (&self, right: &Self) -> Self","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Performs an operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12814,"byte_end":12816,"line_start":20,"line_end":20,"column_start":8,"column_end":10},"name":"op","qualname":"::general::one_operator::AbstractMagma::op","value":"fn (&self, _: O, lhs: &Self) -> Self","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Performs specific operation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12797,"byte_end":12806,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13117,"byte_end":13135,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"AbstractQuasigroup","qualname":"::general::one_operator::AbstractQuasigroup","value":"AbstractQuasigroup<O: Operator>: PartialEq + AbstractMagma<O> + Inverse<O>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166}],"decl_id":null,"docs":" A magma with the divisibility property.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13336,"byte_end":13367,"line_start":36,"line_end":36,"column_start":8,"column_end":39},"name":"prop_inv_is_latin_square_approx","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns `true` if latin squareness holds for the given arguments. Approximate\n equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13714,"byte_end":13738,"line_start":48,"line_end":48,"column_start":8,"column_end":32},"name":"prop_inv_is_latin_square","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns `true` if latin squareness holds for the given arguments.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":14969,"byte_end":14986,"line_start":95,"line_end":95,"column_start":11,"column_end":28},"name":"AbstractSemigroup","qualname":"::general::one_operator::AbstractSemigroup","value":"AbstractSemigroup<O: Operator>: PartialEq + AbstractMagma<O>","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" An associative magma.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15166,"byte_end":15192,"line_start":98,"line_end":98,"column_start":8,"column_end":34},"name":"prop_is_associative_approx","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Returns `true` if associativity holds for the given arguments. Approximate equality is used\n for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15457,"byte_end":15476,"line_start":107,"line_end":107,"column_start":8,"column_end":27},"name":"prop_is_associative","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Returns `true` if associativity holds for the given arguments.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16672,"byte_end":16684,"line_start":149,"line_end":149,"column_start":11,"column_end":23},"name":"AbstractLoop","qualname":"::general::one_operator::AbstractLoop","value":"AbstractLoop<O: Operator>: AbstractQuasigroup<O> + Identity<O>","parent":null,"children":[],"decl_id":null,"docs":" A quasigroup with an unique identity element.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17939,"byte_end":17953,"line_start":194,"line_end":194,"column_start":11,"column_end":25},"name":"AbstractMonoid","qualname":"::general::one_operator::AbstractMonoid","value":"AbstractMonoid<O: Operator>: AbstractSemigroup<O> + Identity<O>","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"decl_id":null,"docs":" A semigroup equipped with an identity element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":18162,"byte_end":18208,"line_start":197,"line_end":197,"column_start":8,"column_end":54},"name":"prop_operating_identity_element_is_noop_approx","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop_approx","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Checks whether operating with the identity element is a no-op for the given\n argument. Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":18528,"byte_end":18567,"line_start":208,"line_end":208,"column_start":8,"column_end":47},"name":"prop_operating_identity_element_is_noop","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Checks whether operating with the identity element is a no-op for the given\n argument.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19697,"byte_end":19710,"line_start":250,"line_end":250,"column_start":11,"column_end":24},"name":"AbstractGroup","qualname":"::general::one_operator::AbstractGroup","value":"AbstractGroup<O: Operator>: AbstractLoop<O> + AbstractMonoid<O>","parent":null,"children":[],"decl_id":null,"docs":" A group is a loop and a monoid at the same time.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21061,"byte_end":21081,"line_start":297,"line_end":297,"column_start":11,"column_end":31},"name":"AbstractGroupAbelian","qualname":"::general::one_operator::AbstractGroupAbelian","value":"AbstractGroupAbelian<O: Operator>: AbstractGroup<O>","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":198}],"decl_id":null,"docs":" An commutative group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21262,"byte_end":21288,"line_start":300,"line_end":300,"column_start":8,"column_end":34},"name":"prop_is_commutative_approx","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Returns `true` if the operator is commutative for the given argument tuple. Approximate\n equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21533,"byte_end":21552,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"prop_is_commutative","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Returns `true` if the operator is commutative for the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":236},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24615,"byte_end":24627,"line_start":14,"line_end":14,"column_start":11,"column_end":23},"name":"AbstractRing","qualname":"::general::two_operators::AbstractRing","value":"AbstractRing<A: Operator = Additive, M: Operator = Multiplicative>: AbstractGroupAbelian<A> + AbstractMonoid<M>","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240}],"decl_id":null,"docs":" A ring is the combination of an abelian group and a multiplicative monoid structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24912,"byte_end":24952,"line_start":18,"line_end":18,"column_start":8,"column_end":48},"name":"prop_mul_and_add_are_distributive_approx","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication and addition operators are distributive for\n the given argument tuple. Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":25536,"byte_end":25569,"line_start":35,"line_end":35,"column_start":8,"column_end":41},"name":"prop_mul_and_add_are_distributive","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication and addition operators are distributive for\n the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27621,"byte_end":27644,"line_start":107,"line_end":107,"column_start":11,"column_end":34},"name":"AbstractRingCommutative","qualname":"::general::two_operators::AbstractRingCommutative","value":"AbstractRingCommutative<A: Operator = Additive, M: Operator = Multiplicative>: AbstractRing<A, M>","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248}],"decl_id":null,"docs":" A ring with a commutative multiplication.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27888,"byte_end":27918,"line_start":111,"line_end":111,"column_start":8,"column_end":38},"name":"prop_mul_is_commutative_approx","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication operator is commutative for the given argument tuple.\n Approximate equality is used for verifications.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":28269,"byte_end":28292,"line_start":123,"line_end":123,"column_start":8,"column_end":31},"name":"prop_mul_is_commutative","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Returns `true` if the multiplication operator is commutative for the given argument tuple.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30124,"byte_end":30137,"line_start":186,"line_end":186,"column_start":11,"column_end":24},"name":"AbstractField","qualname":"::general::two_operators::AbstractField","value":"AbstractField<A: Operator = Additive, M: Operator = Multiplicative>: AbstractRingCommutative<A, M> + AbstractGroupAbelian<M>","parent":null,"children":[],"decl_id":null,"docs":" A field is a commutative ring, and an abelian group under both operators.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33434,"byte_end":33448,"line_start":20,"line_end":20,"column_start":11,"column_end":25},"name":"AbstractModule","qualname":"::general::module::AbstractModule","value":"AbstractModule<OpGroup: Operator = Additive, OpAdd: Operator = Additive, OpMul: Operator =\n Multiplicative>: AbstractGroupAbelian<OpGroup>","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":280}],"decl_id":null,"docs":" A module combines two sets: one with an abelian group structure and another with a\n commutative ring structure.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33635,"byte_end":33647,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"AbstractRing","qualname":"::general::module::AbstractModule::AbstractRing","value":"type AbstractRing: AbstractRingCommutative<OpAdd, OpMul>;","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33769,"byte_end":33780,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"multiply_by","qualname":"::general::module::AbstractModule::multiply_by","value":"fn (&self, r: Self::AbstractRing) -> Self","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Multiplies an element of the ring with an element of the module.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34363,"byte_end":34371,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"Identity","qualname":"::general::identity::Identity","value":"Identity<O: Operator>","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356}],"decl_id":null,"docs":" A type that is equipped with identity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34424,"byte_end":34432,"line_start":18,"line_end":18,"column_start":8,"column_end":16},"name":"identity","qualname":"::general::identity::Identity::identity","value":"fn () -> Self","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" The identity element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34493,"byte_end":34495,"line_start":22,"line_end":22,"column_start":8,"column_end":10},"name":"id","qualname":"::general::identity::Identity::id","value":"fn (_: O) -> Self","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Specific identity.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34476,"byte_end":34485,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35708,"byte_end":35710,"line_start":64,"line_end":64,"column_start":12,"column_end":14},"name":"Id","qualname":"::general::identity::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":" The universal identity element wrt. a given operator, usually noted `Id` with a\n context-dependent subscript.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35669,"byte_end":35679,"line_start":62,"line_end":62,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35862,"byte_end":35865,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Id<O>>::new","value":"fn () -> Id<O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity element.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35841,"byte_end":35850,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39506,"byte_end":39514,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"Operator","qualname":"::general::operator::Operator","value":"Operator: Copy","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" Trait implemented by types representing abstract operators.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39590,"byte_end":39604,"line_start":10,"line_end":10,"column_start":8,"column_end":22},"name":"operator_token","qualname":"::general::operator::Operator::operator_token","value":"fn () -> Self","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Returns the structure that identifies the operator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39807,"byte_end":39814,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Inverse","qualname":"::general::operator::Inverse","value":"Inverse<O: Operator>: Sized","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":524}],"decl_id":null,"docs":" Trait used to define the inverse element relative to the given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39913,"byte_end":39920,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"inverse","qualname":"::general::operator::Inverse::inverse","value":"fn (&self) -> Self","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" Returns the inverse of `self`, relative to the operator `O`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39996,"byte_end":40007,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::general::operator::Inverse::inverse_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" In-place inversin of `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39979,"byte_end":39988,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40184,"byte_end":40192,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Additive","qualname":"::general::operator::Additive","value":"","parent":null,"children":[],"decl_id":null,"docs":" The addition operator, commonly symbolized by `+`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40173,"byte_end":40193,"line_start":35,"line_end":35,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1938},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40291,"byte_end":40305,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"Multiplicative","qualname":"::general::operator::Multiplicative","value":"","parent":null,"children":[],"decl_id":null,"docs":" The multiplication operator, commonly symbolized by `×`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40280,"byte_end":40306,"line_start":39,"line_end":39,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":556},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41889,"byte_end":41898,"line_start":120,"line_end":120,"column_start":11,"column_end":20},"name":"ClosedAdd","qualname":"::general::operator::ClosedAdd","value":"ClosedAdd<Right = Self>: Sized + Add<Right, Output = Self> + AddAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Add` and `AddAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42064,"byte_end":42073,"line_start":125,"line_end":125,"column_start":11,"column_end":20},"name":"ClosedSub","qualname":"::general::operator::ClosedSub","value":"ClosedSub<Right = Self>: Sized + Sub<Right, Output = Self> + SubAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Sub` and `SubAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42239,"byte_end":42248,"line_start":130,"line_end":130,"column_start":11,"column_end":20},"name":"ClosedMul","qualname":"::general::operator::ClosedMul","value":"ClosedMul<Right = Self>: Sized + Mul<Right, Output = Self> + MulAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Mul` and `MulAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42414,"byte_end":42423,"line_start":135,"line_end":135,"column_start":11,"column_end":20},"name":"ClosedDiv","qualname":"::general::operator::ClosedDiv","value":"ClosedDiv<Right = Self>: Sized + Div<Right, Output = Self> + DivAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Div` and `DivAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42574,"byte_end":42583,"line_start":140,"line_end":140,"column_start":11,"column_end":20},"name":"ClosedNeg","qualname":"::general::operator::ClosedNeg","value":"ClosedNeg: Sized + Neg<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Neg` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43844,"byte_end":43848,"line_start":20,"line_end":20,"column_start":11,"column_end":15},"name":"Real","qualname":"::general::real::Real","value":"Real: SubsetOf<Self> + SupersetOf<f64> + Field + Copy + Num + FromPrimitive +\nNeg<Output = Self> + AddAssign + MulAssign + SubAssign + DivAssign +\nApproxEq<Epsilon = Self> + Lattice + PartialEq + Signed + Send + Sync + Any +\n'static + Debug + Display + Bounded","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736}],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43330,"byte_end":43352,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44390,"byte_end":44395,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"floor","qualname":"::general::real::Real::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44418,"byte_end":44422,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"ceil","qualname":"::general::real::Real::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44445,"byte_end":44450,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"round","qualname":"::general::real::Real::round","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44473,"byte_end":44478,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"trunc","qualname":"::general::real::Real::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44501,"byte_end":44506,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"fract","qualname":"::general::real::Real::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44529,"byte_end":44532,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"abs","qualname":"::general::real::Real::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44555,"byte_end":44561,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"signum","qualname":"::general::real::Real::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44584,"byte_end":44600,"line_start":51,"line_end":51,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::general::real::Real::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44623,"byte_end":44639,"line_start":52,"line_end":52,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::general::real::Real::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44662,"byte_end":44669,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::general::real::Real::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44710,"byte_end":44715,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"recip","qualname":"::general::real::Real::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44738,"byte_end":44742,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"powi","qualname":"::general::real::Real::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44773,"byte_end":44777,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"powf","qualname":"::general::real::Real::powf","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44809,"byte_end":44813,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::general::real::Real::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44836,"byte_end":44839,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"exp","qualname":"::general::real::Real::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44862,"byte_end":44866,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"exp2","qualname":"::general::real::Real::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44889,"byte_end":44891,"line_start":60,"line_end":60,"column_start":8,"column_end":10},"name":"ln","qualname":"::general::real::Real::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44914,"byte_end":44917,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"log","qualname":"::general::real::Real::log","value":"fn (self, base: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44952,"byte_end":44956,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"log2","qualname":"::general::real::Real::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44979,"byte_end":44984,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"log10","qualname":"::general::real::Real::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45007,"byte_end":45010,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"max","qualname":"::general::real::Real::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45046,"byte_end":45049,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"min","qualname":"::general::real::Real::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45085,"byte_end":45089,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::general::real::Real::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45112,"byte_end":45117,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"hypot","qualname":"::general::real::Real::hypot","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45153,"byte_end":45156,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"sin","qualname":"::general::real::Real::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45179,"byte_end":45182,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"cos","qualname":"::general::real::Real::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45205,"byte_end":45208,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"tan","qualname":"::general::real::Real::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45231,"byte_end":45235,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"asin","qualname":"::general::real::Real::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45258,"byte_end":45262,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"acos","qualname":"::general::real::Real::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45285,"byte_end":45289,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"atan","qualname":"::general::real::Real::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45312,"byte_end":45317,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"atan2","qualname":"::general::real::Real::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45353,"byte_end":45360,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::general::real::Real::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45391,"byte_end":45397,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::general::real::Real::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45420,"byte_end":45425,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::general::real::Real::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45448,"byte_end":45452,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"sinh","qualname":"::general::real::Real::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45475,"byte_end":45479,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"cosh","qualname":"::general::real::Real::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45502,"byte_end":45506,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"tanh","qualname":"::general::real::Real::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45529,"byte_end":45534,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"asinh","qualname":"::general::real::Real::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45557,"byte_end":45562,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"acosh","qualname":"::general::real::Real::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45585,"byte_end":45590,"line_start":83,"line_end":83,"column_start":8,"column_end":13},"name":"atanh","qualname":"::general::real::Real::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45614,"byte_end":45616,"line_start":85,"line_end":85,"column_start":8,"column_end":10},"name":"pi","qualname":"::general::real::Real::pi","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45635,"byte_end":45641,"line_start":86,"line_end":86,"column_start":8,"column_end":14},"name":"two_pi","qualname":"::general::real::Real::two_pi","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45660,"byte_end":45669,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"frac_pi_2","qualname":"::general::real::Real::frac_pi_2","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45688,"byte_end":45697,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"frac_pi_3","qualname":"::general::real::Real::frac_pi_3","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45716,"byte_end":45725,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"frac_pi_4","qualname":"::general::real::Real::frac_pi_4","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45744,"byte_end":45753,"line_start":90,"line_end":90,"column_start":8,"column_end":17},"name":"frac_pi_6","qualname":"::general::real::Real::frac_pi_6","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45772,"byte_end":45781,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"frac_pi_8","qualname":"::general::real::Real::frac_pi_8","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45800,"byte_end":45809,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"frac_1_pi","qualname":"::general::real::Real::frac_1_pi","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45828,"byte_end":45837,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"frac_2_pi","qualname":"::general::real::Real::frac_2_pi","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45856,"byte_end":45870,"line_start":94,"line_end":94,"column_start":8,"column_end":22},"name":"frac_2_sqrt_pi","qualname":"::general::real::Real::frac_2_sqrt_pi","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45890,"byte_end":45891,"line_start":96,"line_end":96,"column_start":8,"column_end":9},"name":"e","qualname":"::general::real::Real::e","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45910,"byte_end":45916,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"log2_e","qualname":"::general::real::Real::log2_e","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45935,"byte_end":45942,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"log10_e","qualname":"::general::real::Real::log10_e","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45961,"byte_end":45965,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"ln_2","qualname":"::general::real::Real::ln_2","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45984,"byte_end":45989,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"ln_10","qualname":"::general::real::Real::ln_10","value":"fn () -> Self","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":748},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52629,"byte_end":52644,"line_start":4,"line_end":4,"column_start":11,"column_end":26},"name":"MeetSemilattice","qualname":"::general::lattice::MeetSemilattice","value":"MeetSemilattice: Sized","parent":null,"children":[{"krate":0,"index":750}],"decl_id":null,"docs":" A set where every two elements have an infimum (i.e. greatest lower bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52716,"byte_end":52720,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"meet","qualname":"::general::lattice::MeetSemilattice::meet","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":" Returns the meet (aka. infimum) of two values.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":752},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52845,"byte_end":52860,"line_start":10,"line_end":10,"column_start":11,"column_end":26},"name":"JoinSemilattice","qualname":"::general::lattice::JoinSemilattice","value":"JoinSemilattice: Sized","parent":null,"children":[{"krate":0,"index":754}],"decl_id":null,"docs":" A set where every two elements have a suppremum (i.e. smallest upper bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52933,"byte_end":52937,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"join","qualname":"::general::lattice::JoinSemilattice::join","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Returns the join (aka. supremum) of two values.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":756},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53065,"byte_end":53072,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Lattice","qualname":"::general::lattice::Lattice","value":"Lattice: MeetSemilattice + JoinSemilattice + PartialOrd","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766}],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53205,"byte_end":53214,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"meet_join","qualname":"::general::lattice::Lattice::meet_join","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Returns the infimum and the supremum simultaneously.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53188,"byte_end":53197,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53400,"byte_end":53411,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::general::lattice::Lattice::partial_min","value":"fn <'a> (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Return the minimum of `self` and `other` if they are comparable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53383,"byte_end":53392,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53784,"byte_end":53795,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::general::lattice::Lattice::partial_max","value":"fn <'a> (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Return the maximum of `self` and `other` if they are comparable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53767,"byte_end":53776,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54163,"byte_end":54176,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::general::lattice::Lattice::partial_sort2","value":"fn <'a> (&'a self, other: &'a Self) -> Option<(&'a Self, &'a Self)>","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54146,"byte_end":54155,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54620,"byte_end":54633,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::general::lattice::Lattice::partial_clamp","value":"fn <'a> (&'a self, min: &'a Self, max: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54603,"byte_end":54612,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":776},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57362,"byte_end":57370,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"SubsetOf","qualname":"::general::subset::SubsetOf","value":"SubsetOf<T>: Sized","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784}],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57476,"byte_end":57487,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"to_superset","qualname":"::general::subset::SubsetOf::to_superset","value":"fn (&self) -> T","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" The inclusion map: converts `self` to the equivalent element of its superset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57703,"byte_end":57716,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"from_superset","qualname":"::general::subset::SubsetOf::from_superset","value":"fn (element: &T) -> Option<Self>","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" The inverse inclusion map: attempts to construct `self` from the equivalent element of its\n superset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":58022,"byte_end":58045,"line_start":39,"line_end":39,"column_start":15,"column_end":38},"name":"from_superset_unchecked","qualname":"::general::subset::SubsetOf::from_superset_unchecked","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" Use with care! Same as `self.to_superset` but without any property checks. Always succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":58172,"byte_end":58184,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SubsetOf::is_in_subset","value":"fn (element: &T) -> bool","parent":{"krate":0,"index":776},"children":[],"decl_id":null,"docs":" Checks if `element` is actually part of the subset `Self` (and can be converted to it).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59356,"byte_end":59366,"line_start":62,"line_end":62,"column_start":11,"column_end":21},"name":"SupersetOf","qualname":"::general::subset::SupersetOf","value":"SupersetOf<T>: Sized","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59580,"byte_end":59589,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"to_subset","qualname":"::general::subset::SupersetOf::to_subset","value":"fn (&self) -> Option<T>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" The inverse inclusion map: attempts to construct `self` from the equivalent element of its\n superset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59849,"byte_end":59861,"line_start":76,"line_end":76,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SupersetOf::is_in_subset","value":"fn (&self) -> bool","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Checks if `self` is actually part of its subset `T` (and can be converted to it).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59991,"byte_end":60010,"line_start":79,"line_end":79,"column_start":15,"column_end":34},"name":"to_subset_unchecked","qualname":"::general::subset::SupersetOf::to_subset_unchecked","value":"fn (&self) -> T","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Use with care! Same as `self.to_subset` but without any property checks. Always succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60118,"byte_end":60129,"line_start":82,"line_end":82,"column_start":8,"column_end":19},"name":"from_subset","qualname":"::general::subset::SupersetOf::from_subset","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" The inclusion map: converts `self` to the equivalent element of its superset.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66721,"byte_end":66727,"line_start":43,"line_end":43,"column_start":11,"column_end":17},"name":"Module","qualname":"::general::specialized::Module","value":"Module: AbstractModule<AbstractRing = <Self as Module>::Ring> + AdditiveGroupAbelian +\nClosedMul<<Self as Module>::Ring>","parent":null,"children":[{"krate":0,"index":868}],"decl_id":null,"docs":" A module which overloads the `*` and `+` operators.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66903,"byte_end":66907,"line_start":48,"line_end":48,"column_start":10,"column_end":14},"name":"Ring","qualname":"::general::specialized::Module::Ring","value":"type Ring: RingCommutative;","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapper","qualname":"::general::wrapper","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":926},{"krate":0,"index":930},{"krate":0,"index":934},{"krate":0,"index":948},{"krate":0,"index":954},{"krate":0,"index":960},{"krate":0,"index":966},{"krate":0,"index":972},{"krate":0,"index":976}],"decl_id":null,"docs":" Wrappers that attach an algebraic structure with a value type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3306},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67414,"byte_end":67421,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Wrapper","qualname":"::general::wrapper::Wrapper","value":"Wrapper { val }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429}],"decl_id":null,"docs":" Wrapper that allows to use operators on algebraic types.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":425},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67441,"byte_end":67444,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"val","qualname":"::general::wrapper::Wrapper::val","value":"T","parent":{"krate":0,"index":3306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68036,"byte_end":68039,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Wrapper<T, A, M>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linear","qualname":"::linear","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/mod.rs","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":1000},{"krate":0,"index":1022},{"krate":0,"index":1034},{"krate":0,"index":1148},{"krate":0,"index":1330},{"krate":0,"index":1406}],"decl_id":null,"docs":" Traits dedicated to linear algebra.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1076},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71307,"byte_end":71318,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"VectorSpace","qualname":"::linear::vector::VectorSpace","value":"VectorSpace: Module<Ring = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":1078}],"decl_id":null,"docs":" A vector space has a module structure over a field instead of a ring.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1078},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71484,"byte_end":71489,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::vector::VectorSpace::Field","value":"type Field: Field;","parent":{"krate":0,"index":1076},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1080},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71538,"byte_end":71549,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"NormedSpace","qualname":"::linear::vector::NormedSpace","value":"NormedSpace: VectorSpace","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092}],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71613,"byte_end":71625,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::linear::vector::NormedSpace::norm_squared","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The squared norm of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71690,"byte_end":71694,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"norm","qualname":"::linear::vector::NormedSpace::norm","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The norm of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71779,"byte_end":71788,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"normalize","qualname":"::linear::vector::NormedSpace::normalize","value":"fn (&self) -> Self","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Returns a normalized version of this vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71875,"byte_end":71888,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"normalize_mut","qualname":"::linear::vector::NormedSpace::normalize_mut","value":"fn (&mut self) -> Self::Field","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Normalizes this vector in-place and returns its norm.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72022,"byte_end":72035,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"try_normalize","qualname":"::linear::vector::NormedSpace::try_normalize","value":"fn (&self, eps: Self::Field) -> Option<Self>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Returns a normalized version of this vector unless its norm as smaller or equal to `eps`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72270,"byte_end":72287,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"try_normalize_mut","qualname":"::linear::vector::NormedSpace::try_normalize_mut","value":"fn (&mut self, eps: Self::Field) -> Option<Self::Field>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Normalizes this vector in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1094},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72589,"byte_end":72599,"line_start":42,"line_end":42,"column_start":11,"column_end":21},"name":"InnerSpace","qualname":"::linear::vector::InnerSpace","value":"InnerSpace: NormedSpace<Field = <Self as InnerSpace>::Real>","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100}],"decl_id":null,"docs":" A vector space aquipped with an inner product.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72743,"byte_end":72747,"line_start":44,"line_end":44,"column_start":10,"column_end":14},"name":"Real","qualname":"::linear::vector::InnerSpace::Real","value":"type Real: Real;","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" The result of inner product (same as the field used by this vector space).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72822,"byte_end":72835,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"inner_product","qualname":"::linear::vector::InnerSpace::inner_product","value":"fn (&self, other: &Self) -> Self::Real","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" Computes the inner product of `self` with `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72942,"byte_end":72947,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"angle","qualname":"::linear::vector::InnerSpace::angle","value":"fn (&self, other: &Self) -> Self::Real","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" Measures the angle between two vectors.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72925,"byte_end":72934,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1102},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73512,"byte_end":73532,"line_start":73,"line_end":73,"column_start":11,"column_end":31},"name":"FiniteDimVectorSpace","qualname":"::linear::vector::FiniteDimVectorSpace","value":"FiniteDimVectorSpace: VectorSpace + Index<usize, Output = <Self as VectorSpace>::Field> +\nIndexMut<usize, Output = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114}],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73715,"byte_end":73724,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::vector::FiniteDimVectorSpace::dimension","value":"fn () -> usize","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The vector space dimension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73963,"byte_end":73978,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"canonical_basis","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis","value":"fn <F> (mut f: F) -> ()","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Applies the given closule to each element of this vector space's canonical basis. Stops if\n `f` returns `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74215,"byte_end":74238,"line_start":92,"line_end":92,"column_start":8,"column_end":31},"name":"canonical_basis_element","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis_element","value":"fn (i: usize) -> Self","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The i-the canonical basis element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74311,"byte_end":74314,"line_start":95,"line_end":95,"column_start":8,"column_end":11},"name":"dot","qualname":"::linear::vector::FiniteDimVectorSpace::dot","value":"fn (&self, other: &Self) -> Self::Field","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" The dot product between two vectors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74422,"byte_end":74441,"line_start":98,"line_end":98,"column_start":15,"column_end":34},"name":"component_unchecked","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked","value":"fn (&self, i: usize) -> &Self::Field","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Same as `&self[i]` but without bound-checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74550,"byte_end":74573,"line_start":101,"line_end":101,"column_start":15,"column_end":38},"name":"component_unchecked_mut","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut Self::Field","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Same as `&mut self[i]` but without bound-checking.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74743,"byte_end":74762,"line_start":106,"line_end":106,"column_start":11,"column_end":30},"name":"FiniteDimInnerSpace","qualname":"::linear::vector::FiniteDimInnerSpace","value":"FiniteDimInnerSpace: InnerSpace + FiniteDimVectorSpace<Field = <Self as InnerSpace>::Real>","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1120}],"decl_id":null,"docs":" A finite-dimensional vector space equipped with an inner product that must coincide\n with the dot product.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75109,"byte_end":75123,"line_start":111,"line_end":111,"column_start":8,"column_end":22},"name":"orthonormalize","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormalize","value":"fn (vs: &mut [Self]) -> usize","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75456,"byte_end":75482,"line_start":117,"line_end":117,"column_start":8,"column_end":34},"name":"orthonormal_subspace_basis","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormal_subspace_basis","value":"fn <F> (vs: &[Self], f: F) -> ()","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75660,"byte_end":75671,"line_start":122,"line_end":122,"column_start":11,"column_end":22},"name":"AffineSpace","qualname":"::linear::vector::AffineSpace","value":"AffineSpace: Sized + Clone + PartialEq + Sub<Self, Output =\n<Self as AffineSpace>::Translation> +\nClosedAdd<<Self as AffineSpace>::Translation>","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128}],"decl_id":null,"docs":" A set points associated with a vector space and a transitive and free additive group action\n (the translation).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75873,"byte_end":75884,"line_start":129,"line_end":129,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::vector::AffineSpace::Translation","value":"type Translation: VectorSpace;","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" The associated vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76051,"byte_end":76063,"line_start":134,"line_end":134,"column_start":8,"column_end":20},"name":"translate_by","qualname":"::linear::vector::AffineSpace::translate_by","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" Same as `*self + *t`. Applies the additive group action of this affine space's associated\n vector space on `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76034,"byte_end":76043,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76299,"byte_end":76307,"line_start":141,"line_end":141,"column_start":8,"column_end":16},"name":"subtract","qualname":"::linear::vector::AffineSpace::subtract","value":"fn (&self, right: &Self) -> Self::Translation","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" Same as `*self - *other`. Returns the unique element `v` of the associated vector space\n such that `self = right + v`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76282,"byte_end":76291,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76477,"byte_end":76491,"line_start":147,"line_end":147,"column_start":11,"column_end":25},"name":"EuclideanSpace","qualname":"::linear::vector::EuclideanSpace","value":"EuclideanSpace: AffineSpace<Translation = <Self as EuclideanSpace>::Coordinates> +\nClosedMul<<Self as EuclideanSpace>::Real> +\nClosedDiv<<Self as EuclideanSpace>::Real> + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146}],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76982,"byte_end":76993,"line_start":155,"line_end":155,"column_start":10,"column_end":21},"name":"Coordinates","qualname":"::linear::vector::EuclideanSpace::Coordinates","value":"type Coordinates: FiniteDimInnerSpace<Real = Self::Real> +\r\n                 // XXX: the following bounds should not be necessary but the compiler does not\r\n                 // seem to be able to find them (from supertraits of VectorSpace)… Also, it won't\r\n                 // find them even if we add ClosedMul instead of Mul and MulAssign separately…\r\n                 Add<Self::Coordinates, Output = Self::Coordinates> +\r\n                 AddAssign<Self::Coordinates> +\r\n                 Sub<Self::Coordinates, Output = Self::Coordinates> +\r\n                 SubAssign<Self::Coordinates> +\r\n                 Mul<Self::Real, Output = Self::Coordinates> +\r\n                 MulAssign<Self::Real>                  +\r\n                 Div<Self::Real, Output = Self::Coordinates> +\r\n                 DivAssign<Self::Real>                  +\r\n                 Neg<Output = Self::Coordinates>;","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The underlying finite vector space.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78216,"byte_end":78220,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Real","qualname":"::linear::vector::EuclideanSpace::Real","value":"type Real: Real;","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The underlying reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78497,"byte_end":78503,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"origin","qualname":"::linear::vector::EuclideanSpace::origin","value":"fn () -> Self","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The preferred origin of this euclidean space.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78651,"byte_end":78659,"line_start":187,"line_end":187,"column_start":8,"column_end":16},"name":"scale_by","qualname":"::linear::vector::EuclideanSpace::scale_by","value":"fn (&self, s: Self::Real) -> Self","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Multiplies the distance of this point to `Self::origin()` by `s`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78633,"byte_end":78642,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78894,"byte_end":78905,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"coordinates","qualname":"::linear::vector::EuclideanSpace::coordinates","value":"fn (&self) -> Self::Coordinates","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the translation from the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78876,"byte_end":78885,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79077,"byte_end":79093,"line_start":200,"line_end":200,"column_start":8,"column_end":24},"name":"from_coordinates","qualname":"::linear::vector::EuclideanSpace::from_coordinates","value":"fn (coords: Self::Coordinates) -> Self","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Builds a point from its coordinates relative to the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79059,"byte_end":79068,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79251,"byte_end":79267,"line_start":206,"line_end":206,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::linear::vector::EuclideanSpace::distance_squared","value":"fn (&self, b: &Self) -> Self::Real","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The distance between two points.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79233,"byte_end":79242,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79416,"byte_end":79424,"line_start":212,"line_end":212,"column_start":8,"column_end":16},"name":"distance","qualname":"::linear::vector::EuclideanSpace::distance","value":"fn (&self, b: &Self) -> Self::Real","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The distance between two points.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79398,"byte_end":79407,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1176},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":79834,"byte_end":79848,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"Transformation","qualname":"::linear::transformation::Transformation","value":"Transformation<E: EuclideanSpace>: MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1180}],"decl_id":null,"docs":" A general transformation acting on an euclidean space. It may not be inversible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":79972,"byte_end":79987,"line_start":10,"line_end":10,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::linear::transformation::Transformation::transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Applies this group's action on a point from the euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80263,"byte_end":80279,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::linear::transformation::Transformation::transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Applies this group's action on a vector from the euclidean space.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1182},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80418,"byte_end":80442,"line_start":20,"line_end":20,"column_start":11,"column_end":35},"name":"ProjectiveTransformation","qualname":"::linear::transformation::ProjectiveTransformation","value":"ProjectiveTransformation<E: EuclideanSpace>: MultiplicativeGroup + Transformation<E>","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1186}],"decl_id":null,"docs":" The most general form of inversible transformations on an euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80598,"byte_end":80621,"line_start":23,"line_end":23,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Applies this group's inverse action on a point from the euclidean space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80905,"byte_end":80929,"line_start":29,"line_end":29,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Applies this group's inverse action on a vector from the euclidean space.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1188},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81158,"byte_end":81178,"line_start":34,"line_end":34,"column_start":11,"column_end":31},"name":"AffineTransformation","qualname":"::linear::transformation::AffineTransformation","value":"AffineTransformation<E: EuclideanSpace>: ProjectiveTransformation<E>","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210}],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1190},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81288,"byte_end":81296,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"name":"Rotation","qualname":"::linear::transformation::AffineTransformation::Rotation","value":"type Rotation: Rotation<E>;","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Type of the first rotation to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1192},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81375,"byte_end":81392,"line_start":38,"line_end":38,"column_start":10,"column_end":27},"name":"NonUniformScaling","qualname":"::linear::transformation::AffineTransformation::NonUniformScaling","value":"type NonUniformScaling: AffineTransformation<E>;","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Type of the non-uniform scaling to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1194},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81505,"byte_end":81516,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::transformation::AffineTransformation::Translation","value":"type Translation: Translation<E>;","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" The type of the pure translation part of this affine transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81698,"byte_end":81707,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"decompose","qualname":"::linear::transformation::AffineTransformation::decompose","value":"fn (&self) -> (Self::Translation, Self::Rotation, Self::NonUniformScaling, Self::Rotation)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Decomposes this affine transformation into a rotation followed by a non-uniform scaling,\n followed by a rotation, followed by a translation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81999,"byte_end":82017,"line_start":58,"line_end":58,"column_start":8,"column_end":26},"name":"append_translation","qualname":"::linear::transformation::AffineTransformation::append_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Appends a translation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82116,"byte_end":82135,"line_start":61,"line_end":61,"column_start":8,"column_end":27},"name":"prepend_translation","qualname":"::linear::transformation::AffineTransformation::prepend_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Prepends a translation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82230,"byte_end":82245,"line_start":64,"line_end":64,"column_start":8,"column_end":23},"name":"append_rotation","qualname":"::linear::transformation::AffineTransformation::append_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Appends a rotation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82338,"byte_end":82354,"line_start":67,"line_end":67,"column_start":8,"column_end":24},"name":"prepend_rotation","qualname":"::linear::transformation::AffineTransformation::prepend_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Prepends a rotation to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82452,"byte_end":82466,"line_start":70,"line_end":70,"column_start":8,"column_end":22},"name":"append_scaling","qualname":"::linear::transformation::AffineTransformation::append_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Appends a scaling factor to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82574,"byte_end":82589,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"prepend_scaling","qualname":"::linear::transformation::AffineTransformation::prepend_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Prepends a scaling factor to this similarity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82908,"byte_end":82933,"line_start":81,"line_end":81,"column_start":8,"column_end":33},"name":"append_rotation_wrt_point","qualname":"::linear::transformation::AffineTransformation::append_rotation_wrt_point","value":"fn (&self, r: &Self::Rotation, p: &E) -> Option<Self>","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Appends to this similarity a rotation centered at the point `p`, i.e., this point is left\n invariant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82891,"byte_end":82900,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1212},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83489,"byte_end":83499,"line_start":98,"line_end":98,"column_start":11,"column_end":21},"name":"Similarity","qualname":"::linear::transformation::Similarity","value":"Similarity<E: EuclideanSpace>: AffineTransformation<E, NonUniformScaling = <Self as Similarity<E>>::Scaling>","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240}],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1214},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83705,"byte_end":83712,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"name":"Scaling","qualname":"::linear::transformation::Similarity::Scaling","value":"type Scaling: Scaling<E>;","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The type of the pure (uniform) scaling part of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83854,"byte_end":83865,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"translation","qualname":"::linear::transformation::Similarity::translation","value":"fn (&self) -> Self::Translation","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The pure translational component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83976,"byte_end":83984,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"rotation","qualname":"::linear::transformation::Similarity::rotation","value":"fn (&self) -> Self::Rotation","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The pure rotational component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84089,"byte_end":84096,"line_start":114,"line_end":114,"column_start":8,"column_end":15},"name":"scaling","qualname":"::linear::transformation::Similarity::scaling","value":"fn (&self) -> Self::Scaling","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The pure scaling component of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84257,"byte_end":84272,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"translate_point","qualname":"::linear::transformation::Similarity::translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation's pure translational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84240,"byte_end":84249,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84441,"byte_end":84453,"line_start":127,"line_end":127,"column_start":8,"column_end":20},"name":"rotate_point","qualname":"::linear::transformation::Similarity::rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation's pure rotational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84424,"byte_end":84433,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84616,"byte_end":84627,"line_start":133,"line_end":133,"column_start":8,"column_end":19},"name":"scale_point","qualname":"::linear::transformation::Similarity::scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation's pure scaling part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84599,"byte_end":84608,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84793,"byte_end":84806,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"rotate_vector","qualname":"::linear::transformation::Similarity::rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation's pure rotational part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84776,"byte_end":84785,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84997,"byte_end":85009,"line_start":145,"line_end":145,"column_start":8,"column_end":20},"name":"scale_vector","qualname":"::linear::transformation::Similarity::scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation's pure scaling part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84980,"byte_end":84989,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85259,"byte_end":85282,"line_start":154,"line_end":154,"column_start":8,"column_end":31},"name":"inverse_translate_point","qualname":"::linear::transformation::Similarity::inverse_translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure translational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85242,"byte_end":85251,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85467,"byte_end":85487,"line_start":160,"line_end":160,"column_start":8,"column_end":28},"name":"inverse_rotate_point","qualname":"::linear::transformation::Similarity::inverse_rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure rotational part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85450,"byte_end":85459,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85666,"byte_end":85685,"line_start":166,"line_end":166,"column_start":8,"column_end":27},"name":"inverse_scale_point","qualname":"::linear::transformation::Similarity::inverse_scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure scaling part to a point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85649,"byte_end":85658,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85867,"byte_end":85888,"line_start":172,"line_end":172,"column_start":8,"column_end":29},"name":"inverse_rotate_vector","qualname":"::linear::transformation::Similarity::inverse_rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure rotational part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85850,"byte_end":85859,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86095,"byte_end":86115,"line_start":178,"line_end":178,"column_start":8,"column_end":28},"name":"inverse_scale_vector","qualname":"::linear::transformation::Similarity::inverse_scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Applies this transformation inverse's pure scaling part to a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86078,"byte_end":86087,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1242},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86326,"byte_end":86334,"line_start":184,"line_end":184,"column_start":11,"column_end":19},"name":"Isometry","qualname":"::linear::transformation::Isometry","value":"Isometry<E: EuclideanSpace>: Similarity<E, Scaling = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the isometry group `E(n)`, i.e., rotations, reflexions, and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1244},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86499,"byte_end":86513,"line_start":187,"line_end":187,"column_start":11,"column_end":25},"name":"DirectIsometry","qualname":"::linear::transformation::DirectIsometry","value":"DirectIsometry<E: EuclideanSpace>: Isometry<E>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the orientation-preserving isometry group `SE(n)`, i.e., rotations and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1246},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86625,"byte_end":86649,"line_start":190,"line_end":190,"column_start":11,"column_end":35},"name":"OrthogonalTransformation","qualname":"::linear::transformation::OrthogonalTransformation","value":"OrthogonalTransformation<E: EuclideanSpace>: Isometry<E, Translation = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotations and scaling `O(n)`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1248},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86773,"byte_end":86780,"line_start":195,"line_end":195,"column_start":11,"column_end":18},"name":"Scaling","qualname":"::linear::transformation::Scaling","value":"Scaling<E: EuclideanSpace>: AffineTransformation<E, NonUniformScaling = Self, Translation = Id, Rotation =\nId> + SubsetOf<E::Real>","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256}],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87014,"byte_end":87021,"line_start":200,"line_end":200,"column_start":8,"column_end":15},"name":"to_real","qualname":"::linear::transformation::Scaling::to_real","value":"fn (&self) -> E::Real","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" Converts this scaling factor to a real. Same as `self.to_superset()`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86997,"byte_end":87006,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87278,"byte_end":87287,"line_start":207,"line_end":207,"column_start":8,"column_end":17},"name":"from_real","qualname":"::linear::transformation::Scaling::from_real","value":"fn (r: E::Real) -> Option<Self>","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" Attempts to convert a real to an element of this scaling subgroup. Same as\n `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87261,"byte_end":87270,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87549,"byte_end":87553,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Scaling::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" Raises the scaling to a power. The result must be equivalent to\n `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87532,"byte_end":87541,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87790,"byte_end":87803,"line_start":221,"line_end":221,"column_start":8,"column_end":21},"name":"scale_between","qualname":"::linear::transformation::Scaling::scale_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a,\n b)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87773,"byte_end":87782,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1258},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87994,"byte_end":88005,"line_start":227,"line_end":227,"column_start":11,"column_end":22},"name":"Translation","qualname":"::linear::transformation::Translation","value":"Translation<E: EuclideanSpace>: DirectIsometry<E, Translation = Self, Rotation = Id>","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266}],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88513,"byte_end":88522,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"to_vector","qualname":"::linear::transformation::Translation::to_vector","value":"fn (&self) -> E::Coordinates","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" Converts this translation to a vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88739,"byte_end":88750,"line_start":238,"line_end":238,"column_start":8,"column_end":19},"name":"from_vector","qualname":"::linear::transformation::Translation::from_vector","value":"fn (v: E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" Attempts to convert a vector to this translation. Returns `None` if the translation\n represented by `v` is not part of the translation subgroup represented by `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88981,"byte_end":88985,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Translation::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" Raises the translation to a power. The result must be equivalent to\n `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88964,"byte_end":88973,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89199,"byte_end":89218,"line_start":249,"line_end":249,"column_start":8,"column_end":27},"name":"translation_between","qualname":"::linear::transformation::Translation::translation_between","value":"fn (a: &E, b: &E) -> Option<Self>","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89182,"byte_end":89191,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1268},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89378,"byte_end":89386,"line_start":255,"line_end":255,"column_start":11,"column_end":19},"name":"Rotation","qualname":"::linear::transformation::Rotation","value":"Rotation<E: EuclideanSpace>: OrthogonalTransformation<E, Rotation = Self> + DirectIsometry<E, Rotation =\nSelf>","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274}],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89658,"byte_end":89662,"line_start":260,"line_end":260,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Rotation::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Raises this rotation to a power. If this is a simple rotation, the result must be\n equivalent to multiplying the rotation angle by `n`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90028,"byte_end":90044,"line_start":266,"line_end":266,"column_start":8,"column_end":24},"name":"rotation_between","qualname":"::linear::transformation::Rotation::rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Computes a simple rotation that makes the angle between `a` and `b` equal to zero, i.e.,\n `b.angle(a * delta_rotation(a, b)) = 0`. If `a` and `b` are collinear, the computed\n rotation may not be unique. Returns `None` if no such simple rotation exists in the\n subgroup represented by `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90354,"byte_end":90377,"line_start":273,"line_end":273,"column_start":8,"column_end":31},"name":"scaled_rotation_between","qualname":"::linear::transformation::Rotation::scaled_rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates, s: E::Real) -> Option<Self>","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Computes the rotation between `a` and `b` and raises it to the power `n`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90337,"byte_end":90346,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1344},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93535,"byte_end":93541,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"Matrix","qualname":"::linear::matrix::Matrix","value":"Matrix: Sized + Clone + Mul<<Self as Matrix>::Row, Output = <Self as Matrix>::Column>","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366}],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1346},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93671,"byte_end":93676,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::matrix::Matrix::Field","value":"type Field: Field;","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The underlying field.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1348},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93736,"byte_end":93739,"line_start":14,"line_end":14,"column_start":10,"column_end":13},"name":"Row","qualname":"::linear::matrix::Matrix::Row","value":"type Row: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The type of rows of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1350},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93838,"byte_end":93844,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Column","qualname":"::linear::matrix::Matrix::Column","value":"type Column: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The type of columns of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1352},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93942,"byte_end":93951,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"Transpose","qualname":"::linear::matrix::Matrix::Transpose","value":"type Transpose: Matrix<Field = Self::Field, Row = Self::Column, Column = Self::Row>;","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The type of the transposed matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94073,"byte_end":94078,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"nrows","qualname":"::linear::matrix::Matrix::nrows","value":"fn (&self) -> usize","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The number of rows of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94150,"byte_end":94158,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"ncolumns","qualname":"::linear::matrix::Matrix::ncolumns","value":"fn (&self) -> usize","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The number of columns of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94221,"byte_end":94224,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"row","qualname":"::linear::matrix::Matrix::row","value":"fn (&self, i: usize) -> Self::Row","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The i-th row of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94304,"byte_end":94310,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"column","qualname":"::linear::matrix::Matrix::column","value":"fn (&self, i: usize) -> Self::Column","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" The i-th column of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94452,"byte_end":94465,"line_start":35,"line_end":35,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::linear::matrix::Matrix::get_unchecked","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" Gets the component at row `i` and column `j` of this matrix without bound checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94586,"byte_end":94589,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"get","qualname":"::linear::matrix::Matrix::get","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" Gets the component at row `i` and column `j` of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94858,"byte_end":94867,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"transpose","qualname":"::linear::matrix::Matrix::transpose","value":"fn (&self) -> Self::Transpose","parent":{"krate":0,"index":1344},"children":[],"decl_id":null,"docs":" Transposes this matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1368},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95011,"byte_end":95020,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"MatrixMut","qualname":"::linear::matrix::MatrixMut","value":"MatrixMut: Matrix","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380}],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95094,"byte_end":95101,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"set_row","qualname":"::linear::matrix::MatrixMut::set_row","value":"fn (&self, i: usize, row: &Self::Row) -> Self","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Sets the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95077,"byte_end":95086,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95292,"byte_end":95303,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"set_row_mut","qualname":"::linear::matrix::MatrixMut::set_row_mut","value":"fn (&mut self, i: usize, row: &Self::Row) -> ()","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" In-place sets the i-th row of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95407,"byte_end":95417,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"set_column","qualname":"::linear::matrix::MatrixMut::set_column","value":"fn (&self, i: usize, col: &Self::Column) -> Self","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Sets the i-th col of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95390,"byte_end":95399,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95614,"byte_end":95628,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"set_column_mut","qualname":"::linear::matrix::MatrixMut::set_column_mut","value":"fn (&mut self, i: usize, col: &Self::Column) -> ()","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" In-place sets the i-th col of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95778,"byte_end":95791,"line_start":76,"line_end":76,"column_start":15,"column_end":28},"name":"set_unchecked","qualname":"::linear::matrix::MatrixMut::set_unchecked","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Sets the component at row `i` and column `j` of this matrix without bound checking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95919,"byte_end":95922,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"set","qualname":"::linear::matrix::MatrixMut::set","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Sets the component at row `i` and column `j` of this matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1382},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96246,"byte_end":96258,"line_start":90,"line_end":90,"column_start":11,"column_end":23},"name":"SquareMatrix","qualname":"::linear::matrix::SquareMatrix","value":"SquareMatrix: Matrix<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self> + MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394}],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1384},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96485,"byte_end":96491,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"Vector","qualname":"::linear::matrix::SquareMatrix::Vector","value":"type Vector: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The type of rows, column, and diagonal of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96581,"byte_end":96589,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"diagonal","qualname":"::linear::matrix::SquareMatrix::diagonal","value":"fn (&self) -> Self::Vector","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96662,"byte_end":96673,"line_start":104,"line_end":104,"column_start":8,"column_end":19},"name":"determinant","qualname":"::linear::matrix::SquareMatrix::determinant","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The determinant of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96814,"byte_end":96825,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"try_inverse","qualname":"::linear::matrix::SquareMatrix::try_inverse","value":"fn (&self) -> Option<Self>","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" Attempts to inverse `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96797,"byte_end":96806,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96925,"byte_end":96934,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::matrix::SquareMatrix::dimension","value":"fn (&self) -> usize","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" The number of rows or column of this matrix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96908,"byte_end":96917,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97034,"byte_end":97047,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"transpose_mut","qualname":"::linear::matrix::SquareMatrix::transpose_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":" In-place transposition.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97017,"byte_end":97026,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1396},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97211,"byte_end":97226,"line_start":125,"line_end":125,"column_start":11,"column_end":26},"name":"SquareMatrixMut","qualname":"::linear::matrix::SquareMatrixMut","value":"SquareMatrixMut: SquareMatrix + MatrixMut<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self>","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402}],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97425,"byte_end":97438,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"from_diagonal","qualname":"::linear::matrix::SquareMatrixMut::from_diagonal","value":"fn (diag: &Self::Vector) -> Self","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Constructs a new diagonal matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97525,"byte_end":97537,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"set_diagonal","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal","value":"fn (&self, diag: &Self::Vector) -> Self","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" Sets the matrix diagonal.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97508,"byte_end":97517,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97717,"byte_end":97733,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"set_diagonal_mut","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal_mut","value":"fn (&mut self, diag: &Self::Vector) -> ()","parent":{"krate":0,"index":1396},"children":[],"decl_id":null,"docs":" In-place sets the matrix diagonal.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1404},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97887,"byte_end":97909,"line_start":149,"line_end":149,"column_start":11,"column_end":33},"name":"InversibleSquareMatrix","qualname":"::linear::matrix::InversibleSquareMatrix","value":"InversibleSquareMatrix: SquareMatrix + MultiplicativeGroup","parent":null,"children":[],"decl_id":null,"docs":" The group of inversible matrix. Commonly known as the General Linear group `GL(n)` by\n algebraists.\n","sig":null,"attributes":[]}],"impls":[{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23564,"byte_end":23571,"line_start":385,"line_end":385,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23811,"byte_end":23818,"line_start":395,"line_end":395,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32487,"byte_end":32494,"line_start":259,"line_end":259,"column_start":66,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32588,"byte_end":32595,"line_start":260,"line_end":260,"column_start":88,"column_end":95},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32669,"byte_end":32676,"line_start":261,"line_end":261,"column_start":68,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34997,"byte_end":35004,"line_start":39,"line_end":39,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35201,"byte_end":35208,"line_start":49,"line_end":49,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35789,"byte_end":35791,"line_start":68,"line_end":68,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35947,"byte_end":35949,"line_start":76,"line_end":76,"column_start":28,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35985,"byte_end":35987,"line_start":78,"line_end":78,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36100,"byte_end":36102,"line_start":85,"line_end":85,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36246,"byte_end":36248,"line_start":91,"line_end":91,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36353,"byte_end":36355,"line_start":98,"line_end":98,"column_start":26,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36396,"byte_end":36398,"line_start":100,"line_end":100,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36550,"byte_end":36552,"line_start":107,"line_end":107,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36659,"byte_end":36661,"line_start":114,"line_end":114,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37206,"byte_end":37208,"line_start":148,"line_end":148,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37311,"byte_end":37313,"line_start":156,"line_end":156,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37397,"byte_end":37399,"line_start":162,"line_end":162,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37502,"byte_end":37504,"line_start":170,"line_end":170,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37588,"byte_end":37590,"line_start":176,"line_end":176,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37693,"byte_end":37695,"line_start":184,"line_end":184,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37801,"byte_end":37803,"line_start":190,"line_end":190,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37926,"byte_end":37928,"line_start":197,"line_end":197,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38120,"byte_end":38122,"line_start":209,"line_end":209,"column_start":44,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38173,"byte_end":38175,"line_start":210,"line_end":210,"column_start":45,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38222,"byte_end":38224,"line_start":211,"line_end":211,"column_start":41,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38269,"byte_end":38271,"line_start":212,"line_end":212,"column_start":39,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38317,"byte_end":38319,"line_start":213,"line_end":213,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38372,"byte_end":38374,"line_start":214,"line_end":214,"column_start":47,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38395,"byte_end":38397,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38476,"byte_end":38478,"line_start":223,"line_end":223,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38701,"byte_end":38703,"line_start":240,"line_end":240,"column_start":63,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39005,"byte_end":39007,"line_start":257,"line_end":257,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39131,"byte_end":39133,"line_start":264,"line_end":264,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39249,"byte_end":39251,"line_start":271,"line_end":271,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40414,"byte_end":40422,"line_start":45,"line_end":45,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40517,"byte_end":40531,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40632,"byte_end":40648,"line_start":59,"line_end":59,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41103,"byte_end":41110,"line_start":80,"line_end":80,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41715,"byte_end":41722,"line_start":112,"line_end":112,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42652,"byte_end":42653,"line_start":142,"line_end":142,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42750,"byte_end":42751,"line_start":147,"line_end":147,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42848,"byte_end":42849,"line_start":152,"line_end":152,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42946,"byte_end":42947,"line_start":157,"line_end":157,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":43030,"byte_end":43031,"line_start":162,"line_end":162,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60201,"byte_end":60203,"line_start":85,"line_end":85,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":62310,"byte_end":62317,"line_start":165,"line_end":165,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67533,"byte_end":67540,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67585,"byte_end":67592,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67723,"byte_end":67730,"line_start":30,"line_end":30,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67893,"byte_end":67900,"line_start":36,"line_end":36,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68006,"byte_end":68013,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68234,"byte_end":68241,"line_start":52,"line_end":52,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68387,"byte_end":68394,"line_start":58,"line_end":58,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69163,"byte_end":69170,"line_start":92,"line_end":92,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69380,"byte_end":69387,"line_start":104,"line_end":104,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69616,"byte_end":69623,"line_start":117,"line_end":117,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69827,"byte_end":69834,"line_start":129,"line_end":129,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70051,"byte_end":70058,"line_start":141,"line_end":141,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70252,"byte_end":70259,"line_start":151,"line_end":151,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90659,"byte_end":90660,"line_start":285,"line_end":285,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91032,"byte_end":91033,"line_start":302,"line_end":302,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91515,"byte_end":91516,"line_start":321,"line_end":321,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":92470,"byte_end":92471,"line_start":367,"line_end":367,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":93014,"byte_end":93015,"line_start":394,"line_end":394,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98408,"byte_end":98410,"line_start":11,"line_end":11,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98666,"byte_end":98668,"line_start":23,"line_end":23,"column_start":57,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98936,"byte_end":98938,"line_start":35,"line_end":35,"column_start":53,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":99791,"byte_end":99793,"line_start":76,"line_end":76,"column_start":43,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100111,"byte_end":100113,"line_start":95,"line_end":95,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100157,"byte_end":100159,"line_start":96,"line_end":96,"column_start":41,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100209,"byte_end":100211,"line_start":97,"line_end":97,"column_start":47,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100271,"byte_end":100273,"line_start":98,"line_end":98,"column_start":57,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100318,"byte_end":100320,"line_start":100,"line_end":100,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100844,"byte_end":100846,"line_start":121,"line_end":121,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":963,"byte_end":970,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12327,"byte_end":12334,"line_start":187,"line_end":187,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":870}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":981,"byte_end":987,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":982}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12663,"byte_end":12668,"line_start":14,"line_end":14,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":156}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12671,"byte_end":12676,"line_start":14,"line_end":14,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2564},"to":{"krate":0,"index":156}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13155,"byte_end":13164,"line_start":33,"line_end":33,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2376},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13167,"byte_end":13180,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":156},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13186,"byte_end":13193,"line_start":33,"line_end":33,"column_start":38,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":520},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15001,"byte_end":15010,"line_start":95,"line_end":95,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2376},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15013,"byte_end":15026,"line_start":95,"line_end":95,"column_start":55,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":156},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16699,"byte_end":16717,"line_start":149,"line_end":149,"column_start":38,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":162},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16723,"byte_end":16731,"line_start":149,"line_end":149,"column_start":62,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":352},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17968,"byte_end":17985,"line_start":194,"line_end":194,"column_start":40,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17991,"byte_end":17999,"line_start":194,"line_end":194,"column_start":63,"column_end":71},"kind":"SuperTrait","from":{"krate":0,"index":352},"to":{"krate":0,"index":182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19725,"byte_end":19737,"line_start":250,"line_end":250,"column_start":39,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":178},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19743,"byte_end":19757,"line_start":250,"line_end":250,"column_start":57,"column_end":71},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21096,"byte_end":21109,"line_start":297,"line_end":297,"column_start":46,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":194}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23564,"byte_end":23571,"line_start":385,"line_end":385,"column_start":62,"column_end":69},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":156}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23811,"byte_end":23818,"line_start":395,"line_end":395,"column_start":56,"column_end":63},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":156}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23945,"byte_end":23952,"line_start":402,"line_end":402,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":194}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":24020,"byte_end":24027,"line_start":403,"line_end":403,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":194}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24688,"byte_end":24708,"line_start":15,"line_end":15,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":236}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24714,"byte_end":24728,"line_start":15,"line_end":15,"column_start":33,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":236}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27705,"byte_end":27717,"line_start":108,"line_end":108,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":236},"to":{"krate":0,"index":244}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30198,"byte_end":30221,"line_start":187,"line_end":187,"column_start":7,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":244},"to":{"krate":0,"index":252}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30230,"byte_end":30250,"line_start":187,"line_end":187,"column_start":39,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":252}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32487,"byte_end":32494,"line_start":259,"line_end":259,"column_start":66,"column_end":73},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":236}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32588,"byte_end":32595,"line_start":260,"line_end":260,"column_start":88,"column_end":95},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":244}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32669,"byte_end":32676,"line_start":261,"line_end":261,"column_start":68,"column_end":75},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":252}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33557,"byte_end":33577,"line_start":24,"line_end":24,"column_start":4,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":276}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34997,"byte_end":35004,"line_start":39,"line_end":39,"column_start":52,"column_end":59},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35201,"byte_end":35208,"line_start":49,"line_end":49,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35789,"byte_end":35791,"line_start":68,"line_end":68,"column_start":19,"column_end":21},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35947,"byte_end":35949,"line_start":76,"line_end":76,"column_start":28,"column_end":30},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1740}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35985,"byte_end":35987,"line_start":78,"line_end":78,"column_start":29,"column_end":31},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":2564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36100,"byte_end":36102,"line_start":85,"line_end":85,"column_start":36,"column_end":38},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36246,"byte_end":36248,"line_start":91,"line_end":91,"column_start":33,"column_end":35},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":2376}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36353,"byte_end":36355,"line_start":98,"line_end":98,"column_start":26,"column_end":28},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":2382}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36396,"byte_end":36398,"line_start":100,"line_end":100,"column_start":34,"column_end":36},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":2430}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36550,"byte_end":36552,"line_start":107,"line_end":107,"column_start":35,"column_end":37},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36659,"byte_end":36661,"line_start":114,"line_end":114,"column_start":32,"column_end":34},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":1924},"to":{"krate":10,"index":24}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37206,"byte_end":37208,"line_start":148,"line_end":148,"column_start":18,"column_end":20},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1810}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37311,"byte_end":37313,"line_start":156,"line_end":156,"column_start":24,"column_end":26},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1862}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37397,"byte_end":37399,"line_start":162,"line_end":162,"column_start":18,"column_end":20},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1818}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37502,"byte_end":37504,"line_start":170,"line_end":170,"column_start":24,"column_end":26},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1868}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37588,"byte_end":37590,"line_start":176,"line_end":176,"column_start":18,"column_end":20},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1794}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37693,"byte_end":37695,"line_start":184,"line_end":184,"column_start":24,"column_end":26},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":1850}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37801,"byte_end":37803,"line_start":190,"line_end":190,"column_start":40,"column_end":42},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":156}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37926,"byte_end":37928,"line_start":197,"line_end":197,"column_start":34,"column_end":36},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38120,"byte_end":38122,"line_start":209,"line_end":209,"column_start":44,"column_end":46},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38173,"byte_end":38175,"line_start":210,"line_end":210,"column_start":45,"column_end":47},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":162}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38222,"byte_end":38224,"line_start":211,"line_end":211,"column_start":41,"column_end":43},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38269,"byte_end":38271,"line_start":212,"line_end":212,"column_start":39,"column_end":41},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38317,"byte_end":38319,"line_start":213,"line_end":213,"column_start":40,"column_end":42},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":190}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38372,"byte_end":38374,"line_start":214,"line_end":214,"column_start":47,"column_end":49},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":194}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38395,"byte_end":38397,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":1924},"to":{"krate":12,"index":154}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38476,"byte_end":38478,"line_start":223,"line_end":223,"column_start":15,"column_end":17},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":1924},"to":{"krate":12,"index":140}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38701,"byte_end":38703,"line_start":240,"line_end":240,"column_start":63,"column_end":65},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":776}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39005,"byte_end":39007,"line_start":257,"line_end":257,"column_start":39,"column_end":41},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":748}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39131,"byte_end":39133,"line_start":264,"line_end":264,"column_start":39,"column_end":41},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":752}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39249,"byte_end":39251,"line_start":271,"line_end":271,"column_start":31,"column_end":33},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":756}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39516,"byte_end":39520,"line_start":8,"line_end":8,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1740},"to":{"krate":0,"index":516}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39829,"byte_end":39834,"line_start":16,"line_end":16,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40414,"byte_end":40422,"line_start":45,"line_end":45,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":516}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40517,"byte_end":40531,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":516}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40632,"byte_end":40648,"line_start":59,"line_end":59,"column_start":19,"column_end":35},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":1946},"to":{"krate":0,"index":516}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41103,"byte_end":41110,"line_start":80,"line_end":80,"column_start":50,"column_end":57},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41715,"byte_end":41722,"line_start":112,"line_end":112,"column_start":62,"column_end":69},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41919,"byte_end":41924,"line_start":121,"line_end":121,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":556}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41927,"byte_end":41930,"line_start":121,"line_end":121,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":1794},"to":{"krate":0,"index":556}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41955,"byte_end":41964,"line_start":121,"line_end":121,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1850},"to":{"krate":0,"index":556}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42094,"byte_end":42099,"line_start":126,"line_end":126,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":558}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42102,"byte_end":42105,"line_start":126,"line_end":126,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":1802},"to":{"krate":0,"index":558}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42130,"byte_end":42139,"line_start":126,"line_end":126,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1856},"to":{"krate":0,"index":558}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42269,"byte_end":42274,"line_start":131,"line_end":131,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42277,"byte_end":42280,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":1810},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42305,"byte_end":42314,"line_start":131,"line_end":131,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1862},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42444,"byte_end":42449,"line_start":136,"line_end":136,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":562}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42452,"byte_end":42455,"line_start":136,"line_end":136,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":1818},"to":{"krate":0,"index":562}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42480,"byte_end":42489,"line_start":136,"line_end":136,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1868},"to":{"krate":0,"index":562}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42585,"byte_end":42590,"line_start":140,"line_end":140,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42593,"byte_end":42596,"line_start":140,"line_end":140,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1838},"to":{"krate":0,"index":564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42652,"byte_end":42653,"line_start":142,"line_end":142,"column_start":37,"column_end":38},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":145},"to":{"krate":0,"index":556}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42750,"byte_end":42751,"line_start":147,"line_end":147,"column_start":37,"column_end":38},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":149},"to":{"krate":0,"index":558}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42848,"byte_end":42849,"line_start":152,"line_end":152,"column_start":37,"column_end":38},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":0,"index":153},"to":{"krate":0,"index":560}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42946,"byte_end":42947,"line_start":157,"line_end":157,"column_start":37,"column_end":38},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":157},"to":{"krate":0,"index":562}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":43030,"byte_end":43031,"line_start":162,"line_end":162,"column_start":23,"column_end":24},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":161},"to":{"krate":0,"index":564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43855,"byte_end":43863,"line_start":21,"line_end":21,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":776},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43876,"byte_end":43886,"line_start":22,"line_end":22,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":786},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43898,"byte_end":43903,"line_start":23,"line_end":23,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":3302},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43910,"byte_end":43914,"line_start":24,"line_end":24,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1740},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43921,"byte_end":43924,"line_start":25,"line_end":25,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":12,"index":1022},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43931,"byte_end":43944,"line_start":26,"line_end":26,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":12,"index":870},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43951,"byte_end":43954,"line_start":27,"line_end":27,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1838},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43976,"byte_end":43985,"line_start":28,"line_end":28,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1850},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43992,"byte_end":44001,"line_start":29,"line_end":29,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1862},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44008,"byte_end":44017,"line_start":30,"line_end":30,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1856},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44024,"byte_end":44033,"line_start":31,"line_end":31,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1868},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44040,"byte_end":44048,"line_start":32,"line_end":32,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":10,"index":24},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44071,"byte_end":44078,"line_start":33,"line_end":33,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":756},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44085,"byte_end":44094,"line_start":34,"line_end":34,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2376},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44101,"byte_end":44107,"line_start":35,"line_end":35,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":12,"index":180},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44114,"byte_end":44118,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1730},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44125,"byte_end":44129,"line_start":37,"line_end":37,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44136,"byte_end":44139,"line_start":38,"line_end":38,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44160,"byte_end":44165,"line_start":40,"line_end":40,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":7730},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44172,"byte_end":44179,"line_start":41,"line_end":41,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":7734},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44186,"byte_end":44193,"line_start":42,"line_end":42,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":12,"index":434},"to":{"krate":0,"index":626}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52646,"byte_end":52651,"line_start":4,"line_end":4,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":748}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52862,"byte_end":52867,"line_start":10,"line_end":10,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":752}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53074,"byte_end":53089,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":748},"to":{"krate":0,"index":756}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53092,"byte_end":53107,"line_start":16,"line_end":16,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":752},"to":{"krate":0,"index":756}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53110,"byte_end":53120,"line_start":16,"line_end":16,"column_start":56,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":2430},"to":{"krate":0,"index":756}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57375,"byte_end":57380,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":776}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59371,"byte_end":59376,"line_start":62,"line_end":62,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":786}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60201,"byte_end":60203,"line_start":85,"line_end":85,"column_start":47,"column_end":49},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":177},"to":{"krate":0,"index":786}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":62310,"byte_end":62317,"line_start":165,"line_end":165,"column_start":56,"column_end":63},"kind":{"variant":"Impl","fields":[217]},"from":{"krate":11,"index":352},"to":{"krate":0,"index":776}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66734,"byte_end":66748,"line_start":44,"line_end":44,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":276},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66794,"byte_end":66814,"line_start":45,"line_end":45,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":3262},"to":{"krate":0,"index":866}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67533,"byte_end":67540,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[218]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1740}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67585,"byte_end":67592,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[219]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":2564}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67723,"byte_end":67730,"line_start":30,"line_end":30,"column_start":42,"column_end":49},"kind":{"variant":"Impl","fields":[220]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":2430}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67893,"byte_end":67900,"line_start":36,"line_end":36,"column_start":40,"column_end":47},"kind":{"variant":"Impl","fields":[221]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":2376}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68006,"byte_end":68013,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":{"variant":"Impl","fields":[222]},"from":{"krate":0,"index":3306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68234,"byte_end":68241,"line_start":52,"line_end":52,"column_start":56,"column_end":63},"kind":{"variant":"Impl","fields":[223]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68387,"byte_end":68394,"line_start":58,"line_end":58,"column_start":38,"column_end":45},"kind":{"variant":"Impl","fields":[224]},"from":{"krate":0,"index":3306},"to":{"krate":10,"index":24}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69163,"byte_end":69170,"line_start":92,"line_end":92,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[225]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1794}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69380,"byte_end":69387,"line_start":104,"line_end":104,"column_start":33,"column_end":40},"kind":{"variant":"Impl","fields":[226]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1838}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69616,"byte_end":69623,"line_start":117,"line_end":117,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[227]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1802}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69827,"byte_end":69834,"line_start":129,"line_end":129,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[228]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1810}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70051,"byte_end":70058,"line_start":141,"line_end":141,"column_start":40,"column_end":47},"kind":{"variant":"Impl","fields":[229]},"from":{"krate":0,"index":3306},"to":{"krate":0,"index":520}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70252,"byte_end":70259,"line_start":151,"line_end":151,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[230]},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":1818}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71320,"byte_end":71326,"line_start":8,"line_end":8,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":866},"to":{"krate":0,"index":1076}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71551,"byte_end":71562,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1076},"to":{"krate":0,"index":1080}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72601,"byte_end":72612,"line_start":42,"line_end":42,"column_start":23,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1080},"to":{"krate":0,"index":1094}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73539,"byte_end":73550,"line_start":74,"line_end":74,"column_start":7,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":1076},"to":{"krate":0,"index":1102}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73557,"byte_end":73562,"line_start":75,"line_end":75,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2064},"to":{"krate":0,"index":1102}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73615,"byte_end":73623,"line_start":76,"line_end":76,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2070},"to":{"krate":0,"index":1102}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74769,"byte_end":74779,"line_start":107,"line_end":107,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":1094},"to":{"krate":0,"index":1116}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74782,"byte_end":74802,"line_start":107,"line_end":107,"column_start":20,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":1102},"to":{"krate":0,"index":1116}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75678,"byte_end":75683,"line_start":123,"line_end":123,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1122}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75690,"byte_end":75695,"line_start":124,"line_end":124,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2564},"to":{"krate":0,"index":1122}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75702,"byte_end":75711,"line_start":125,"line_end":125,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2376},"to":{"krate":0,"index":1122}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75718,"byte_end":75721,"line_start":126,"line_end":126,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1802},"to":{"krate":0,"index":1122}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76493,"byte_end":76504,"line_start":147,"line_end":147,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1122},"to":{"krate":0,"index":1130}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76906,"byte_end":76909,"line_start":153,"line_end":153,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1838},"to":{"krate":0,"index":1130}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":79869,"byte_end":79889,"line_start":8,"line_end":8,"column_start":46,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":3282},"to":{"krate":0,"index":1176}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80468,"byte_end":80487,"line_start":21,"line_end":21,"column_start":7,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":3286},"to":{"krate":0,"index":1182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80490,"byte_end":80504,"line_start":21,"line_end":21,"column_start":29,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":1176},"to":{"krate":0,"index":1182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81199,"byte_end":81223,"line_start":34,"line_end":34,"column_start":52,"column_end":76},"kind":"SuperTrait","from":{"krate":0,"index":1182},"to":{"krate":0,"index":1188}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83525,"byte_end":83545,"line_start":99,"line_end":99,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1188},"to":{"krate":0,"index":1212}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86355,"byte_end":86365,"line_start":184,"line_end":184,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":1212},"to":{"krate":0,"index":1242}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86534,"byte_end":86542,"line_start":187,"line_end":187,"column_start":46,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":1242},"to":{"krate":0,"index":1244}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86675,"byte_end":86683,"line_start":191,"line_end":191,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":1242},"to":{"krate":0,"index":1246}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86806,"byte_end":86826,"line_start":196,"line_end":196,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1188},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86895,"byte_end":86903,"line_start":197,"line_end":197,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":776},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88031,"byte_end":88045,"line_start":228,"line_end":228,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":1244},"to":{"krate":0,"index":1258}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89412,"byte_end":89436,"line_start":256,"line_end":256,"column_start":7,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":1246},"to":{"krate":0,"index":1268}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89459,"byte_end":89473,"line_start":256,"line_end":256,"column_start":54,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":1244},"to":{"krate":0,"index":1268}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90659,"byte_end":90660,"line_start":285,"line_end":285,"column_start":34,"column_end":35},"kind":{"variant":"Impl","fields":[231]},"from":{"krate":0,"index":285},"to":{"krate":0,"index":1176}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91032,"byte_end":91033,"line_start":302,"line_end":302,"column_start":44,"column_end":45},"kind":{"variant":"Impl","fields":[232]},"from":{"krate":0,"index":289},"to":{"krate":0,"index":1182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91515,"byte_end":91516,"line_start":321,"line_end":321,"column_start":40,"column_end":41},"kind":{"variant":"Impl","fields":[233]},"from":{"krate":0,"index":293},"to":{"krate":0,"index":1188}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":92470,"byte_end":92471,"line_start":367,"line_end":367,"column_start":27,"column_end":28},"kind":{"variant":"Impl","fields":[234]},"from":{"krate":0,"index":297},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":93014,"byte_end":93015,"line_start":394,"line_end":394,"column_start":30,"column_end":31},"kind":{"variant":"Impl","fields":[235]},"from":{"krate":0,"index":301},"to":{"krate":0,"index":1212}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93548,"byte_end":93553,"line_start":8,"line_end":8,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":1344}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93556,"byte_end":93561,"line_start":8,"line_end":8,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2564},"to":{"krate":0,"index":1344}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95022,"byte_end":95028,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1344},"to":{"krate":0,"index":1368}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96265,"byte_end":96271,"line_start":91,"line_end":91,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":1344},"to":{"krate":0,"index":1382}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96390,"byte_end":96410,"line_start":96,"line_end":96,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":3282},"to":{"krate":0,"index":1382}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97233,"byte_end":97245,"line_start":126,"line_end":126,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1382},"to":{"krate":0,"index":1396}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97252,"byte_end":97261,"line_start":127,"line_end":127,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":1368},"to":{"krate":0,"index":1396}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97911,"byte_end":97923,"line_start":149,"line_end":149,"column_start":35,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1382},"to":{"krate":0,"index":1404}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97926,"byte_end":97945,"line_start":149,"line_end":149,"column_start":50,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":3286},"to":{"krate":0,"index":1404}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98408,"byte_end":98410,"line_start":11,"line_end":11,"column_start":47,"column_end":49},"kind":{"variant":"Impl","fields":[236]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1176}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98666,"byte_end":98668,"line_start":23,"line_end":23,"column_start":57,"column_end":59},"kind":{"variant":"Impl","fields":[237]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1182}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98936,"byte_end":98938,"line_start":35,"line_end":35,"column_start":53,"column_end":55},"kind":{"variant":"Impl","fields":[238]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1188}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":99791,"byte_end":99793,"line_start":76,"line_end":76,"column_start":43,"column_end":45},"kind":{"variant":"Impl","fields":[239]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1212}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100111,"byte_end":100113,"line_start":95,"line_end":95,"column_start":40,"column_end":42},"kind":{"variant":"Impl","fields":[240]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1248}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100157,"byte_end":100159,"line_start":96,"line_end":96,"column_start":41,"column_end":43},"kind":{"variant":"Impl","fields":[241]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1242}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100209,"byte_end":100211,"line_start":97,"line_end":97,"column_start":47,"column_end":49},"kind":{"variant":"Impl","fields":[242]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1244}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100271,"byte_end":100273,"line_start":98,"line_end":98,"column_start":57,"column_end":59},"kind":{"variant":"Impl","fields":[243]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1246}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100318,"byte_end":100320,"line_start":100,"line_end":100,"column_start":41,"column_end":43},"kind":{"variant":"Impl","fields":[244]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1268}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,52,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100844,"byte_end":100846,"line_start":121,"line_end":121,"column_start":44,"column_end":46},"kind":{"variant":"Impl","fields":[245]},"from":{"krate":0,"index":1924},"to":{"krate":0,"index":1258}}]}