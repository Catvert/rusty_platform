{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[5832876635843094275,5755108136999044766]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":10,"id":{"name":"approx","disambiguator":[6631750352163537324,6920142491406799587]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":11,"id":{"name":"arrayvec","disambiguator":[7478673171645592853,17581657318331931157]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":12,"id":{"name":"nodrop","disambiguator":[12480767916669592376,17366685815635483204]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":13,"id":{"name":"ordered_float","disambiguator":[9897490543735964101,4228555066740804810]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":14,"id":{"name":"num_traits","disambiguator":[17789237823785518920,1720329206679913962]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":15,"id":{"name":"num_traits","disambiguator":[2584151480832829812,14924738239749212241]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":16,"id":{"name":"unreachable","disambiguator":[11581232055785294986,8373192847050036338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":17,"id":{"name":"void","disambiguator":[619724489078363799,6304636562182106116]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":18,"id":{"name":"stb_truetype","disambiguator":[14641348740927467555,17779642664556526763]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[14438063634380407648,1727586884181737438]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/gpu_cache.rs","num":20,"id":{"name":"fnv","disambiguator":[11160403132025241829,7201692895416168774]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/gpu_cache.rs","num":21,"id":{"name":"linked_hash_map","disambiguator":[18220228300022304033,3939081533359333649]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":38142,"line_start":1,"line_end":982,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5564,"byte_end":5569,"line_start":122,"line_end":122,"column_start":20,"column_end":25},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5571,"byte_end":5577,"line_start":122,"line_end":122,"column_start":27,"column_end":33},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5579,"byte_end":5584,"line_start":122,"line_end":122,"column_start":35,"column_end":40},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5586,"byte_end":5590,"line_start":122,"line_end":122,"column_start":42,"column_end":46},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5592,"byte_end":5597,"line_start":122,"line_end":122,"column_start":48,"column_end":53},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5599,"byte_end":5603,"line_start":122,"line_end":122,"column_start":55,"column_end":59},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5605,"byte_end":5611,"line_start":122,"line_end":122,"column_start":61,"column_end":67},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":38142,"line_start":1,"line_end":982,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":162},{"krate":0,"index":230},{"krate":0,"index":396},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":928},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":948},{"krate":0,"index":944},{"krate":0,"index":418},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":952},{"krate":0,"index":992},{"krate":0,"index":988},{"krate":0,"index":984},{"krate":0,"index":978},{"krate":0,"index":974},{"krate":0,"index":970},{"krate":0,"index":958},{"krate":0,"index":954},{"krate":0,"index":994},{"krate":0,"index":1034},{"krate":0,"index":1030},{"krate":0,"index":1026},{"krate":0,"index":1020},{"krate":0,"index":1016},{"krate":0,"index":1012},{"krate":0,"index":1000},{"krate":0,"index":996},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1082},{"krate":0,"index":1078},{"krate":0,"index":1074},{"krate":0,"index":1068},{"krate":0,"index":1056},{"krate":0,"index":1084},{"krate":0,"index":1112},{"krate":0,"index":1108},{"krate":0,"index":1104},{"krate":0,"index":1098},{"krate":0,"index":1086},{"krate":0,"index":440},{"krate":0,"index":444},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1126},{"krate":0,"index":1154},{"krate":0,"index":1150},{"krate":0,"index":1144},{"krate":0,"index":1132},{"krate":0,"index":1128},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":488},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":510},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":516},{"krate":0,"index":522},{"krate":0,"index":1168},{"krate":0,"index":1178},{"krate":0,"index":1174},{"krate":0,"index":1170},{"krate":0,"index":1180},{"krate":0,"index":1186},{"krate":0,"index":1182},{"krate":0,"index":536},{"krate":0,"index":564},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":604}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5000,"byte_end":5024,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"warn(clippy)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5025,"byte_end":5041,"line_start":99,"line_end":99,"column_start":1,"column_end":17}},{"value":"allow(cyclomatic_complexity,\n        doc_markdown,\n        cast_lossless,\n        many_single_char_names)","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5042,"byte_end":5127,"line_start":100,"line_end":100,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":38839,"byte_end":38844,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":38828,"byte_end":38879,"line_start":18,"line_end":21,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":38828,"byte_end":38879,"line_start":18,"line_end":21,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":219},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":38858,"byte_end":38859,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":38872,"byte_end":38873,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39196,"byte_end":39202,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":253}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39185,"byte_end":39237,"line_start":29,"line_end":32,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39185,"byte_end":39237,"line_start":29,"line_end":32,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":251},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39216,"byte_end":39217,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39230,"byte_end":39231,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39307,"byte_end":39312,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39290,"byte_end":39299,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39433,"byte_end":39439,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39416,"byte_end":39425,"line_start":39,"line_end":39,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42105,"byte_end":42109,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":281}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42094,"byte_end":42141,"line_start":144,"line_end":146,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":281},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42120,"byte_end":42121,"line_start":145,"line_end":145,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42305,"byte_end":42310,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":287}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42294,"byte_end":42342,"line_start":150,"line_end":152,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":287},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42321,"byte_end":42322,"line_start":151,"line_end":151,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42508,"byte_end":42512,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42497,"byte_end":42565,"line_start":156,"line_end":159,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42497,"byte_end":42565,"line_start":156,"line_end":159,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42526,"byte_end":42529,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":297},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42549,"byte_end":42552,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42624,"byte_end":42629,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42693,"byte_end":42699,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":172},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":47947,"byte_end":47955,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":47989,"byte_end":47992,"line_start":7,"line_end":7,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpu_cache","qualname":"::gpu_cache","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.5.2/src/gpu_cache.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":268},{"krate":0,"index":276},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":818},{"krate":0,"index":838},{"krate":0,"index":834},{"krate":0,"index":830},{"krate":0,"index":824},{"krate":0,"index":820},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":840},{"krate":0,"index":856},{"krate":0,"index":852},{"krate":0,"index":846},{"krate":0,"index":842},{"krate":0,"index":310},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":860},{"krate":0,"index":866},{"krate":0,"index":862},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":870},{"krate":0,"index":896},{"krate":0,"index":892},{"krate":0,"index":888},{"krate":0,"index":884},{"krate":0,"index":880},{"krate":0,"index":876},{"krate":0,"index":872},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":898},{"krate":0,"index":924},{"krate":0,"index":920},{"krate":0,"index":916},{"krate":0,"index":912},{"krate":0,"index":908},{"krate":0,"index":904},{"krate":0,"index":900},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":368}],"decl_id":null,"docs":" This module provides capabilities for managing a cache of rendered glyphs in\n GPU memory, with the goal of minimisng the size and frequency of glyph\n uploads to GPU memory from the CPU.","sig":null,"attributes":[{"value":"cfg(feature = \"gpu_cache\")","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5495,"byte_end":5524,"line_start":119,"line_end":119,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64017,"byte_end":64030,"line_start":58,"line_end":58,"column_start":10,"column_end":23},"name":"TextureCoords","qualname":"::gpu_cache::TextureCoords","value":"(Rect<f32>, Rect<i32>)","parent":null,"children":[],"decl_id":null,"docs":" Texture coordinates (floating point) of the quad for a glyph in the cache,\n as well as the pixel-space (integer) coordinates that this region should be\n drawn at.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":68055,"byte_end":68060,"line_start":205,"line_end":205,"column_start":12,"column_end":17},"name":"Cache","qualname":"::gpu_cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111}],"decl_id":null,"docs":" An implementation of a dynamic GPU glyph cache. See the module documentation\n for more information.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":69097,"byte_end":69109,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"CacheBuilder","qualname":"::gpu_cache::CacheBuilder","value":"CacheBuilder { width, height, scale_tolerance, position_tolerance, pad_glyphs }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377}],"decl_id":null,"docs":" Builder for a `Cache`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":69431,"byte_end":69436,"line_start":251,"line_end":251,"column_start":9,"column_end":14},"name":"width","qualname":"::gpu_cache::CacheBuilder::width","value":"u32","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Along with `height` specifies the dimensions of the 2D texture that will\n hold the cache contents on the GPU.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":69761,"byte_end":69767,"line_start":258,"line_end":258,"column_start":9,"column_end":15},"name":"height","qualname":"::gpu_cache::CacheBuilder::height","value":"u32","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Along with `width` specifies the dimensions of the 2D texture that will\n hold the cache contents on the GPU.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":70523,"byte_end":70538,"line_start":271,"line_end":271,"column_start":9,"column_end":24},"name":"scale_tolerance","qualname":"::gpu_cache::CacheBuilder::scale_tolerance","value":"f32","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the\n requested glyph in scale to be used in its place. Due to floating\n point inaccuracies that can affect user code it is not recommended\n to set these parameters too close to zero as effectively identical\n glyphs could end up duplicated in the cache.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71475,"byte_end":71493,"line_start":288,"line_end":288,"column_start":9,"column_end":27},"name":"position_tolerance","qualname":"::gpu_cache::CacheBuilder::position_tolerance","value":"f32","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging\n whether an existing glyph in the cache is close enough to the requested\n glyph in subpixel offset to be used in its place. Due to floating point\n inaccuracies that can affect user code it is not recommended to set\n these parameters too close to zero as effectively identical glyphs\n could end up duplicated in the cache.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":377},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71784,"byte_end":71794,"line_start":294,"line_end":294,"column_start":9,"column_end":19},"name":"pad_glyphs","qualname":"::gpu_cache::CacheBuilder::pad_glyphs","value":"bool","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Pack glyphs in texture with a padding of a single zero alpha pixel to\n avoid bleeding from interpolated shader texture lookups near edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72332,"byte_end":72337,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"build","qualname":"<CacheBuilder>::build","value":"fn <'a> (self) -> Cache<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new cache. Note that this is just the CPU side of the\n cache. The GPU texture is managed by the user.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73554,"byte_end":73568,"line_start":358,"line_end":358,"column_start":5,"column_end":19},"name":"GlyphNotCached","qualname":"::gpu_cache::CacheReadErr::GlyphNotCached","value":"CacheReadErr::GlyphNotCached","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":" Indicates that the requested glyph is not present in the cache\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73464,"byte_end":73476,"line_start":356,"line_end":356,"column_start":10,"column_end":22},"name":"CacheReadErr","qualname":"::gpu_cache::CacheReadErr","value":"CacheReadErr::{GlyphNotCached}","parent":null,"children":[{"krate":0,"index":379}],"decl_id":null,"docs":" Returned from `Cache::rect_for`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73455,"byte_end":73571,"line_start":356,"line_end":359,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73455,"byte_end":73571,"line_start":356,"line_end":359,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74165,"byte_end":74178,"line_start":378,"line_end":378,"column_start":5,"column_end":18},"name":"GlyphTooLarge","qualname":"::gpu_cache::CacheWriteErr::GlyphTooLarge","value":"CacheWriteErr::GlyphTooLarge","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" At least one of the queued glyphs is too big to fit into the cache, even\n if all other glyphs are removed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74316,"byte_end":74335,"line_start":381,"line_end":381,"column_start":5,"column_end":24},"name":"NoRoomForWholeQueue","qualname":"::gpu_cache::CacheWriteErr::NoRoomForWholeQueue","value":"CacheWriteErr::NoRoomForWholeQueue","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Not all of the requested glyphs can fit into the cache, even if the\n cache is completely cleared before the attempt.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":898},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74023,"byte_end":74036,"line_start":375,"line_end":375,"column_start":10,"column_end":23},"name":"CacheWriteErr","qualname":"::gpu_cache::CacheWriteErr","value":"CacheWriteErr::{GlyphTooLarge, NoRoomForWholeQueue}","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":383}],"decl_id":null,"docs":" Returned from `Cache::cache_queued`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74014,"byte_end":74338,"line_start":375,"line_end":382,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74014,"byte_end":74338,"line_start":375,"line_end":382,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":75297,"byte_end":75300,"line_start":418,"line_end":418,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache<'font>>::new","value":"fn <'a> (width: u32, height: u32, scale_tolerance: f32, position_tolerance: f32) -> Cache<'a>","parent":null,"children":[],"decl_id":null,"docs":" Legacy `Cache` construction, use `CacheBuilder` for more options.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":75824,"byte_end":75843,"line_start":439,"line_end":439,"column_start":12,"column_end":31},"name":"set_scale_tolerance","qualname":"<Cache<'font>>::set_scale_tolerance","value":"fn (&mut self, tolerance: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the scale tolerance for the cache. See the documentation for\n `CacheBuilder` for more information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":76072,"byte_end":76087,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"scale_tolerance","qualname":"<Cache<'font>>::scale_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scale tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":76365,"byte_end":76387,"line_start":454,"line_end":454,"column_start":12,"column_end":34},"name":"set_position_tolerance","qualname":"<Cache<'font>>::set_position_tolerance","value":"fn (&mut self, tolerance: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the subpixel position tolerance for the cache. See the\n documentation for `CacheBuilder` for more information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":76631,"byte_end":76649,"line_start":460,"line_end":460,"column_start":12,"column_end":30},"name":"position_tolerance","qualname":"<Cache<'font>>::position_tolerance","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current subpixel position tolerance for the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":76869,"byte_end":76879,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<Cache<'font>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the cache texture dimensions assumed by the cache. For proper\n operation this should match the dimensions of the used GPU texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":77182,"byte_end":77193,"line_start":471,"line_end":471,"column_start":12,"column_end":23},"name":"queue_glyph","qualname":"<Cache<'font>>::queue_glyph","value":"fn (&mut self, font_id: usize, glyph: PositionedGlyph<'font>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Queue a glyph for caching by the next call to `cache_queued`. `font_id`\n is used to disambiguate glyphs from different fonts. The user should\n ensure that `font_id` is unique to the font the glyph is from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":77437,"byte_end":77442,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cache<'font>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the cache. Does not affect the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":77763,"byte_end":77774,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"clear_queue","qualname":"<Cache<'font>>::clear_queue","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the glyph queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":78550,"byte_end":78562,"line_start":500,"line_end":500,"column_start":12,"column_end":24},"name":"cache_queued","qualname":"<Cache<'font>>::cache_queued","value":"fn <F> (&mut self, mut uploader: F) -> Result<(), CacheWriteErr>","parent":null,"children":[],"decl_id":null,"docs":" Caches the queued glyphs. If this is unsuccessful, the queue is\n untouched. Any glyphs cached by previous calls to this function may be\n removed from the cache to make room for the newly queued glyphs. Thus if\n you want to ensure that a glyph is in the cache, the most recently\n cached queue must have contained that glyph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":89351,"byte_end":89359,"line_start":740,"line_end":740,"column_start":12,"column_end":20},"name":"rect_for","qualname":"<Cache<'font>>::rect_for","value":"fn <'a> (&'a self, font_id: usize, glyph: &PositionedGlyph) -> Result<Option<TextureCoords>, CacheReadErr>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the (floating point) texture coordinates of the quad for a\n glyph in the cache, as well as the pixel-space (integer) coordinates\n that this region should be drawn at. In the majority of cases these\n pixel-space coordinates should be identical to the bounding box of the\n input glyph. They only differ if the cache has returned a substitute\n glyph that is deemed close enough to the requested glyph as specified by\n the cache tolerance parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5875,"byte_end":5889,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":936},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5998,"byte_end":6002,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" A single font. This may or may not own the font data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6392,"byte_end":6397,"line_start":144,"line_end":144,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6413,"byte_end":6418,"line_start":145,"line_end":145,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":942},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6370,"byte_end":6381,"line_start":143,"line_end":143,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":407}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7384,"byte_end":7393,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7373,"byte_end":7403,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7373,"byte_end":7403,"line_start":180,"line_end":180,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7669,"byte_end":7676,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will not necessarily\n correspond to the correct glyph in a font other than the one that it was obtained from.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7658,"byte_end":7686,"line_start":184,"line_end":184,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7658,"byte_end":7686,"line_start":184,"line_end":184,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8091,"byte_end":8096,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":429}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1048},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8263,"byte_end":8278,"line_start":204,"line_end":204,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":447},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8289,"byte_end":8291,"line_start":205,"line_end":205,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8306,"byte_end":8313,"line_start":206,"line_end":206,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8342,"byte_end":8359,"line_start":207,"line_end":207,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8374,"byte_end":8388,"line_start":208,"line_end":208,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":455},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8408,"byte_end":8413,"line_start":209,"line_end":209,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8692,"byte_end":8700,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8681,"byte_end":8990,"line_start":215,"line_end":222,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":457},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8824,"byte_end":8837,"line_start":218,"line_end":218,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":459},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8965,"byte_end":8982,"line_start":221,"line_end":221,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9271,"byte_end":9279,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9260,"byte_end":9731,"line_start":227,"line_end":237,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9402,"byte_end":9408,"line_start":230,"line_end":230,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9534,"byte_end":9541,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":473},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9715,"byte_end":9723,"line_start":236,"line_end":236,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10393,"byte_end":10404,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10673,"byte_end":10688,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1126},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11254,"byte_end":11259,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":513}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11243,"byte_end":11367,"line_start":285,"line_end":290,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11307,"byte_end":11308,"line_start":287,"line_end":287,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11358,"byte_end":11359,"line_start":289,"line_end":289,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11456,"byte_end":11463,"line_start":294,"line_end":294,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":454},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11829,"byte_end":11840,"line_start":304,"line_end":304,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11948,"byte_end":11961,"line_start":307,"line_end":307,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"fn (self, &Font) -> GlyphId","parent":{"krate":0,"index":454},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12906,"byte_end":12916,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection<'a>>::from_bytes","value":"fn <B> (bytes: B) -> Result<FontCollection<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13958,"byte_end":13967,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection<'a>>::into_font","value":"fn (self) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14994,"byte_end":15001,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection<'a>>::font_at","value":"fn (&self, i: usize) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15420,"byte_end":15430,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection<'a>>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15570,"byte_end":15583,"line_start":390,"line_end":390,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16188,"byte_end":16198,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font<'a>>::from_bytes","value":"fn <B> (bytes: B) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16514,"byte_end":16523,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font<'a>>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16830,"byte_end":16848,"line_start":422,"line_end":422,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font<'a>>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16991,"byte_end":17003,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font<'a>>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17214,"byte_end":17225,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font<'a>>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17848,"byte_end":17853,"line_start":447,"line_end":447,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font<'a>>::glyph","value":"fn <C> (&self, id: C) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18400,"byte_end":18410,"line_start":459,"line_end":459,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font<'a>>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18614,"byte_end":18631,"line_start":466,"line_end":466,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font<'a>>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20778,"byte_end":20784,"line_start":513,"line_end":513,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font<'a>>::layout","value":"fn <'b, 'c> (&'b self, s: &'c str, scale: Scale, start: Point<f32>) -> LayoutIter<'b, 'c>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21224,"byte_end":21236,"line_start":530,"line_end":530,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font<'a>>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21673,"byte_end":21682,"line_start":543,"line_end":543,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22019,"byte_end":22029,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23153,"byte_end":23157,"line_start":591,"line_end":591,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph<'a>>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23382,"byte_end":23384,"line_start":598,"line_end":598,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph<'a>>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23700,"byte_end":23706,"line_start":606,"line_end":606,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph<'a>>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24719,"byte_end":24729,"line_start":631,"line_end":631,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph<'a>>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25916,"byte_end":25924,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph<'a>>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26220,"byte_end":26224,"line_start":666,"line_end":666,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26236,"byte_end":26241,"line_start":667,"line_end":667,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1168},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26206,"byte_end":26213,"line_start":665,"line_end":665,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":559}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26197,"byte_end":26251,"line_start":665,"line_end":668,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26345,"byte_end":26352,"line_start":671,"line_end":671,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":563},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26363,"byte_end":26371,"line_start":672,"line_end":672,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26472,"byte_end":26474,"line_start":676,"line_end":676,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph<'a>>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26788,"byte_end":26792,"line_start":683,"line_end":683,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph<'a>>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26916,"byte_end":26929,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph<'a>>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27027,"byte_end":27035,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph<'a>>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27225,"byte_end":27235,"line_start":696,"line_end":696,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph<'a>>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28219,"byte_end":28224,"line_start":721,"line_end":721,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph<'a>>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28381,"byte_end":28390,"line_start":726,"line_end":726,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph<'a>>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31045,"byte_end":31050,"line_start":788,"line_end":788,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph<'a>>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31362,"byte_end":31380,"line_start":794,"line_end":794,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph<'a>>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32286,"byte_end":32296,"line_start":814,"line_end":814,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph<'a>>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32564,"byte_end":32566,"line_start":825,"line_end":825,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph<'a>>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32881,"byte_end":32885,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph<'a>>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33010,"byte_end":33022,"line_start":836,"line_end":836,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph<'a>>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33134,"byte_end":33151,"line_start":840,"line_end":840,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph<'a>>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33412,"byte_end":33430,"line_start":846,"line_end":846,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph<'a>>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33600,"byte_end":33605,"line_start":851,"line_end":851,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph<'a>>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33705,"byte_end":33710,"line_start":854,"line_end":854,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph<'a>>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33772,"byte_end":33780,"line_start":857,"line_end":857,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph<'a>>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34560,"byte_end":34564,"line_start":880,"line_end":880,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph<'a>>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36395,"byte_end":36405,"line_start":928,"line_end":928,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph<'a>>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36768,"byte_end":36786,"line_start":942,"line_end":942,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36897,"byte_end":36906,"line_start":946,"line_end":946,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37049,"byte_end":37075,"line_start":950,"line_end":950,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37228,"byte_end":37259,"line_start":954,"line_end":954,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via `into_font`,\n but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1190},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36660,"byte_end":36665,"line_start":939,"line_end":939,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{UnrecognizedFormat, IllFormed, CollectionIndexOutOfBounds, CollectionContainsMultipleFonts}","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39536,"byte_end":39541,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39722,"byte_end":39728,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39910,"byte_end":39916,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40078,"byte_end":40084,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40414,"byte_end":40420,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40750,"byte_end":40756,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41086,"byte_end":41092,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41453,"byte_end":41458,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41648,"byte_end":41653,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41842,"byte_end":41848,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42603,"byte_end":42607,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43118,"byte_end":43122,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43522,"byte_end":43527,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45021,"byte_end":45026,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45487,"byte_end":45491,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46387,"byte_end":46408,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":48326,"byte_end":48339,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":49475,"byte_end":49479,"line_start":59,"line_end":59,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":50220,"byte_end":50234,"line_start":95,"line_end":95,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52921,"byte_end":52926,"line_start":170,"line_end":170,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64415,"byte_end":64431,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64606,"byte_end":64622,"line_start":77,"line_end":77,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64765,"byte_end":64781,"line_start":83,"line_end":83,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":66294,"byte_end":66305,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":66947,"byte_end":66958,"line_start":158,"line_end":158,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":67152,"byte_end":67163,"line_start":166,"line_end":166,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":67711,"byte_end":67715,"line_start":192,"line_end":192,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71822,"byte_end":71834,"line_start":297,"line_end":297,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72053,"byte_end":72065,"line_start":309,"line_end":309,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73594,"byte_end":73606,"line_start":360,"line_end":360,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73755,"byte_end":73767,"line_start":365,"line_end":365,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74361,"byte_end":74374,"line_start":383,"line_end":383,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74523,"byte_end":74536,"line_start":388,"line_end":388,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":75074,"byte_end":75079,"line_start":411,"line_end":411,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6465,"byte_end":6476,"line_start":148,"line_end":148,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6709,"byte_end":6720,"line_start":157,"line_end":157,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6844,"byte_end":6855,"line_start":162,"line_end":162,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6990,"byte_end":7001,"line_start":167,"line_end":167,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7141,"byte_end":7152,"line_start":172,"line_end":172,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9761,"byte_end":9769,"line_start":239,"line_end":239,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9996,"byte_end":10004,"line_start":249,"line_end":249,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11374,"byte_end":11379,"line_start":292,"line_end":292,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12156,"byte_end":12165,"line_start":314,"line_end":314,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12302,"byte_end":12309,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12396,"byte_end":12410,"line_start":324,"line_end":324,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15673,"byte_end":15686,"line_start":394,"line_end":394,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16012,"byte_end":16016,"line_start":405,"line_end":405,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21807,"byte_end":21816,"line_start":550,"line_end":550,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22216,"byte_end":22226,"line_start":568,"line_end":568,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22795,"byte_end":22800,"line_start":583,"line_end":583,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26398,"byte_end":26409,"line_start":674,"line_end":674,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32486,"byte_end":32501,"line_start":823,"line_end":823,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37286,"byte_end":37291,"line_start":957,"line_end":957,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37471,"byte_end":37476,"line_start":963,"line_end":963,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38029,"byte_end":38034,"line_start":978,"line_end":978,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5533,"byte_end":5542,"line_start":120,"line_end":120,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":230}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39536,"byte_end":39541,"line_start":44,"line_end":44,"column_start":44,"column_end":49},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":608},"to":{"krate":2,"index":1802}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39722,"byte_end":39728,"line_start":51,"line_end":51,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1794}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":39910,"byte_end":39916,"line_start":58,"line_end":58,"column_start":44,"column_end":50},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1802}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40078,"byte_end":40084,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1810}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40414,"byte_end":40420,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1810}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":40750,"byte_end":40756,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1818}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41086,"byte_end":41092,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1818}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41453,"byte_end":41458,"line_start":121,"line_end":121,"column_start":55,"column_end":60},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":608},"to":{"krate":2,"index":1794}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41648,"byte_end":41653,"line_start":128,"line_end":128,"column_start":55,"column_end":60},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":608},"to":{"krate":2,"index":1802}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":41842,"byte_end":41848,"line_start":135,"line_end":135,"column_start":54,"column_end":60},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":650},"to":{"krate":2,"index":1794}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":42603,"byte_end":42607,"line_start":160,"line_end":160,"column_start":38,"column_end":42},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43118,"byte_end":43122,"line_start":182,"line_end":182,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":692},"to":{"krate":0,"index":112}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":43522,"byte_end":43527,"line_start":201,"line_end":201,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":722},"to":{"krate":0,"index":112}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":44805,"byte_end":44810,"line_start":239,"line_end":239,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":132}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45021,"byte_end":45026,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":722},"to":{"krate":0,"index":132}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":45487,"byte_end":45491,"line_start":264,"line_end":264,"column_start":14,"column_end":18},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":692},"to":{"krate":0,"index":132}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,101,111,109,101,116,114,121,46,114,115],"byte_start":46387,"byte_end":46408,"line_start":301,"line_end":301,"column_start":6,"column_end":27},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":47930,"byte_end":47935,"line_start":5,"line_end":5,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1736},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":48326,"byte_end":48339,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":806},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":49475,"byte_end":49479,"line_start":59,"line_end":59,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":692},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":50220,"byte_end":50234,"line_start":95,"line_end":95,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":200},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,114,97,115,116,101,114,105,122,101,114,46,114,115],"byte_start":52921,"byte_end":52926,"line_start":170,"line_end":170,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":722},"to":{"krate":0,"index":170}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64415,"byte_end":64431,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2430}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64606,"byte_end":64622,"line_start":77,"line_end":77,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2412}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":64765,"byte_end":64781,"line_start":83,"line_end":83,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":66294,"byte_end":66305,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":66947,"byte_end":66958,"line_start":158,"line_end":158,"column_start":44,"column_end":55},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2064}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":67152,"byte_end":67163,"line_start":166,"line_end":166,"column_start":47,"column_end":58},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2070}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":67711,"byte_end":67715,"line_start":192,"line_end":192,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":752},"to":{"krate":0,"index":332}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":71822,"byte_end":71834,"line_start":297,"line_end":297,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":72053,"byte_end":72065,"line_start":309,"line_end":309,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73594,"byte_end":73606,"line_start":360,"line_end":360,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":870},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":73755,"byte_end":73767,"line_start":365,"line_end":365,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":870},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74361,"byte_end":74374,"line_start":383,"line_end":383,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":898},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":74523,"byte_end":74536,"line_start":388,"line_end":388,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":898},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,103,112,117,95,99,97,99,104,101,46,114,115],"byte_start":75074,"byte_end":75079,"line_start":411,"line_end":411,"column_start":13,"column_end":18},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6465,"byte_end":6476,"line_start":148,"line_end":148,"column_start":32,"column_end":43},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":942},"to":{"krate":2,"index":1970}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6709,"byte_end":6720,"line_start":157,"line_end":157,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":942},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6844,"byte_end":6855,"line_start":162,"line_end":162,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":942},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6990,"byte_end":7001,"line_start":167,"line_end":167,"column_start":26,"column_end":37},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":942},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7141,"byte_end":7152,"line_start":172,"line_end":172,"column_start":24,"column_end":35},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":942},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9761,"byte_end":9769,"line_start":239,"line_end":239,"column_start":29,"column_end":37},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":2618}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9996,"byte_end":10004,"line_start":249,"line_end":249,"column_start":31,"column_end":39},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":1810}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11374,"byte_end":11379,"line_start":292,"line_end":292,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12156,"byte_end":12165,"line_start":314,"line_end":314,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":952},"to":{"krate":0,"index":454}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12302,"byte_end":12309,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":994},"to":{"krate":0,"index":454}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12396,"byte_end":12410,"line_start":324,"line_end":324,"column_start":10,"column_end":24},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15673,"byte_end":15686,"line_start":394,"line_end":394,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16012,"byte_end":16016,"line_start":405,"line_end":405,"column_start":10,"column_end":14},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21807,"byte_end":21816,"line_start":550,"line_end":550,"column_start":36,"column_end":45},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1156},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22216,"byte_end":22226,"line_start":568,"line_end":568,"column_start":27,"column_end":37},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":3826}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22795,"byte_end":22800,"line_start":583,"line_end":583,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26398,"byte_end":26409,"line_start":674,"line_end":674,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32486,"byte_end":32501,"line_start":823,"line_end":823,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37286,"byte_end":37291,"line_start":957,"line_end":957,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":7734}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37471,"byte_end":37476,"line_start":963,"line_end":963,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":2400}},{"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,116,121,112,101,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38029,"byte_end":38034,"line_start":978,"line_end":978,"column_start":45,"column_end":50},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":1,"index":3746},"to":{"krate":2,"index":2618}}]}