{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"tuple_utils","disambiguator":[13150637974715369964,8984383347860402663]},"crate_root":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src","external_crates":[{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[586888675125581807,12572034361373176338]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12032660577259018450,5860902972173545957]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17283673789807926844,10899266201186168850]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7209638829484234959,7348912525526220562]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[15888596596650928603,6243607547058991239]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9262530440471434819,15119842321168113469]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8397006570897917279,2645299033720271436]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[5051683374107945620,18198315276515804711]}},{"file_name":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8734470468795703344,10654493516337126768]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18279,"line_start":1,"line_end":545,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18279,"line_start":1,"line_end":545,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/finch/.cargo/registry/src/github.com-1ecc6299db9ec823/tuple_utils-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":168},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":198},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":252},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":270},{"krate":0,"index":276},{"krate":0,"index":282},{"krate":0,"index":288},{"krate":0,"index":294},{"krate":0,"index":300},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":330},{"krate":0,"index":336},{"krate":0,"index":342},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":348},{"krate":0,"index":354},{"krate":0,"index":360},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":390},{"krate":0,"index":396},{"krate":0,"index":402},{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":420},{"krate":0,"index":426},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":444},{"krate":0,"index":450},{"krate":0,"index":456},{"krate":0,"index":462},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":480},{"krate":0,"index":486},{"krate":0,"index":492},{"krate":0,"index":498},{"krate":0,"index":504},{"krate":0,"index":510},{"krate":0,"index":516},{"krate":0,"index":522},{"krate":0,"index":528},{"krate":0,"index":534},{"krate":0,"index":540},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":558},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":576},{"krate":0,"index":582},{"krate":0,"index":588},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":606},{"krate":0,"index":612},{"krate":0,"index":618},{"krate":0,"index":624},{"krate":0,"index":630},{"krate":0,"index":636},{"krate":0,"index":642},{"krate":0,"index":648},{"krate":0,"index":654},{"krate":0,"index":660},{"krate":0,"index":666},{"krate":0,"index":672},{"krate":0,"index":678},{"krate":0,"index":684},{"krate":0,"index":690},{"krate":0,"index":696},{"krate":0,"index":702},{"krate":0,"index":708},{"krate":0,"index":714},{"krate":0,"index":720},{"krate":0,"index":726},{"krate":0,"index":732},{"krate":0,"index":738},{"krate":0,"index":744},{"krate":0,"index":750},{"krate":0,"index":756},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":774},{"krate":0,"index":780},{"krate":0,"index":786},{"krate":0,"index":792},{"krate":0,"index":798},{"krate":0,"index":804},{"krate":0,"index":810},{"krate":0,"index":816},{"krate":0,"index":822},{"krate":0,"index":828},{"krate":0,"index":834},{"krate":0,"index":840},{"krate":0,"index":846},{"krate":0,"index":852},{"krate":0,"index":858},{"krate":0,"index":864},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":882},{"krate":0,"index":888},{"krate":0,"index":894},{"krate":0,"index":900},{"krate":0,"index":906},{"krate":0,"index":912},{"krate":0,"index":918},{"krate":0,"index":924},{"krate":0,"index":930},{"krate":0,"index":936},{"krate":0,"index":942},{"krate":0,"index":948},{"krate":0,"index":954},{"krate":0,"index":960},{"krate":0,"index":966},{"krate":0,"index":972},{"krate":0,"index":978},{"krate":0,"index":984},{"krate":0,"index":990},{"krate":0,"index":996},{"krate":0,"index":1002},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":1020},{"krate":0,"index":1026},{"krate":0,"index":1032},{"krate":0,"index":1038},{"krate":0,"index":1044},{"krate":0,"index":1050},{"krate":0,"index":1056},{"krate":0,"index":1062},{"krate":0,"index":1068},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":1086},{"krate":0,"index":1092},{"krate":0,"index":1098},{"krate":0,"index":1104},{"krate":0,"index":1110},{"krate":0,"index":1116},{"krate":0,"index":1122},{"krate":0,"index":1128},{"krate":0,"index":1134},{"krate":0,"index":1140},{"krate":0,"index":1146},{"krate":0,"index":1152},{"krate":0,"index":1158},{"krate":0,"index":1164},{"krate":0,"index":1170},{"krate":0,"index":1176},{"krate":0,"index":1182},{"krate":0,"index":1188},{"krate":0,"index":1194},{"krate":0,"index":1200},{"krate":0,"index":1206},{"krate":0,"index":1212},{"krate":0,"index":1218},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":1248},{"krate":0,"index":1254},{"krate":0,"index":1260},{"krate":0,"index":28},{"krate":0,"index":36},{"krate":0,"index":44},{"krate":0,"index":52},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":76},{"krate":0,"index":84},{"krate":0,"index":92},{"krate":0,"index":100},{"krate":0,"index":108},{"krate":0,"index":116},{"krate":0,"index":124},{"krate":0,"index":132},{"krate":0,"index":140},{"krate":0,"index":148}],"decl_id":null,"docs":" A simple set of utility traits for working with tuples\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":116,"byte_end":122,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"Append","qualname":"::Append","value":"Append<T>","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":10}],"decl_id":null,"docs":" Helper trait to allow Appending of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":137,"byte_end":143,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::Append::Output","value":"type Output;","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":258,"byte_end":264,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"append","qualname":"::Append::append","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Append T onto the end of the tuple returning\n a new tuple with the existing elements and T\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":351,"byte_end":358,"line_start":12,"line_end":12,"column_start":11,"column_end":18},"name":"Prepend","qualname":"::Prepend","value":"Prepend<T>","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":16}],"decl_id":null,"docs":" Helper trait to allow Perpending of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":373,"byte_end":379,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Output","qualname":"::Prepend::Output","value":"type Output;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":543,"byte_end":550,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"prepend","qualname":"::Prepend::prepend","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Append T onto the start of the tuple returning\n a new tuple with all the elements from shifted\n over one row and T in the first slot\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3542,"byte_end":3547,"line_start":120,"line_end":120,"column_start":11,"column_end":16},"name":"Merge","qualname":"::Merge","value":"Merge<T>","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":26}],"decl_id":null,"docs":" Helper trait that allow for merging of tuples\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3562,"byte_end":3568,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"name":"Output","qualname":"::Merge::Output","value":"type Output;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3763,"byte_end":3768,"line_start":126,"line_end":126,"column_start":8,"column_end":13},"name":"merge","qualname":"::Merge::merge","value":"fn (self, T) -> Self::Output","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" merge LHS with RHS returning a new tuple\n that contains the elements of both tuples\n ordering is preserved such that LHS elements\n come before RHS elements.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11350,"byte_end":11355,"line_start":290,"line_end":290,"column_start":11,"column_end":16},"name":"Split","qualname":"::Split","value":"Split","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34}],"decl_id":null,"docs":" Tries to split a tuple into two tuples\n if the tuple is odd sized the Right side will\n contain the extra element\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11367,"byte_end":11371,"line_start":291,"line_end":291,"column_start":10,"column_end":14},"name":"Left","qualname":"::Split::Left","value":"type Left;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11382,"byte_end":11387,"line_start":292,"line_end":292,"column_start":10,"column_end":15},"name":"Right","qualname":"::Split::Right","value":"type Right;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,102,105,110,99,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,117,112,108,101,95,117,116,105,108,115,45,48,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11397,"byte_end":11402,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"split","qualname":"::Split::split","value":"fn (self) -> (Self::Left, Self::Right)","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}